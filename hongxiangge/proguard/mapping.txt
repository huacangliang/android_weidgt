android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.k:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.l:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.m:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.n:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.o:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.p:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> b
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.r:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.u:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.v:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.w:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.x:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.y:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.z:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.aa:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ab:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ac:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ad:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.content.LocalBroadcastManager -> android.support.v4.a.c:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> a
    boolean sendBroadcast(android.content.Intent) -> a
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.a.d:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.a.e:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.a.f:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LruCache -> android.support.v4.c.f:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void trimToSize(int) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> b
    int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.c.g:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.h:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.j:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.k:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.l:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.m:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.n:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.c:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.d:
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.f:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.g:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.h:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.i:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.j:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.k:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.l:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.m:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.n:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.o:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.p:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.q:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.r:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.s:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.t:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.u:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.v:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.w:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.x:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.y:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.z:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.aa:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ab:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.ac:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ad:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ae:
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.af:
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ag:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ah:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ai:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.aj:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ak:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.al:
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.am:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.an:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ao:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ap:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aq:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ar:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.as:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.at:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.au:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.av:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.aw:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ax:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ay:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.az:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ba:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bb:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.bc:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bd:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.be:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bf:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bg:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bh:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bi:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> b
    int mMinDrawerMargin -> c
    int mScrimColor -> d
    float mScrimOpacity -> e
    android.graphics.Paint mScrimPaint -> f
    android.support.v4.widget.ViewDragHelper mLeftDragger -> g
    android.support.v4.widget.ViewDragHelper mRightDragger -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> i
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> j
    int mDrawerState -> k
    boolean mInLayout -> l
    boolean mFirstLayout -> m
    int mLockModeLeft -> n
    int mLockModeRight -> o
    boolean mDisallowInterceptRequested -> p
    boolean mChildrenCanceledTouch -> q
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    android.graphics.drawable.Drawable mShadowLeft -> u
    android.graphics.drawable.Drawable mShadowRight -> v
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.a:
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.b:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.c:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.d:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.e:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.f:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.g:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.j:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.k:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawableLeft -> d
    android.graphics.drawable.Drawable mShadowDrawableRight -> e
    int mOverhangSize -> f
    boolean mCanSlide -> g
    android.view.View mSlideableView -> h
    float mSlideOffset -> i
    float mParallaxOffset -> j
    int mSlideRange -> k
    boolean mIsUnableToDrag -> l
    int mParallaxBy -> m
    float mInitialMotionX -> n
    float mInitialMotionY -> o
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> p
    android.support.v4.widget.ViewDragHelper mDragHelper -> q
    boolean mPreservedOpenState -> r
    boolean mFirstLayout -> s
    android.graphics.Rect mTmpRect -> t
    java.util.ArrayList mPostedRunnables -> u
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> f
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.m:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.n:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.o:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.q:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.r:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.s:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.t:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.v:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.w:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.x:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.alimama.mobile.MMAdView -> com.alimama.mobile.a:
    com.alimama.mobile.a a -> a
    com.alimama.mobile.csdk.umupdate.models.MMEntity b -> b
    android.view.View c -> c
    android.view.View d -> d
    android.widget.TextView e -> e
    android.widget.LinearLayout f -> f
    boolean g -> g
    boolean init(java.lang.String) -> a
    void dataReceived(int,java.util.List) -> a
    void destroy() -> a
    void onClick(android.view.View) -> onClick
com.alimama.mobile.a -> com.alimama.mobile.b:
    com.alimama.mobile.a a -> a
    com.alimama.mobile.csdk.umupdate.a.a b -> b
    android.content.Context c -> c
    com.alimama.mobile.csdk.umupdate.a.h d -> d
    boolean e -> e
    void a(android.content.Context) -> a
    com.alimama.mobile.a a() -> a
    com.alimama.mobile.csdk.umupdate.a.a b() -> b
    android.content.Context c() -> c
    com.alimama.mobile.csdk.umupdate.a.h d() -> d
    boolean e() -> e
    void a(com.alimama.mobile.csdk.umupdate.models.MMEntity,com.alimama.mobile.csdk.umupdate.models.Promoter) -> a
    void a(com.alimama.mobile.csdk.umupdate.models.MMEntity,com.alimama.mobile.a$a) -> a
    void a(com.alimama.mobile.csdk.umupdate.models.MMEntity,com.alimama.mobile.csdk.umupdate.models.Promoter[]) -> a
    void b(com.alimama.mobile.csdk.umupdate.models.MMEntity,com.alimama.mobile.a$a) -> b
    void a(com.alimama.mobile.csdk.umupdate.models.b,com.alimama.mobile.a$a,int) -> a
    void a(com.alimama.mobile.csdk.umupdate.models.b,com.alimama.mobile.a$a) -> a
    android.content.Context a(com.alimama.mobile.a) -> a
com.alimama.mobile.a$1 -> com.alimama.mobile.c:
    com.alimama.mobile.a$a a -> a
    boolean b -> b
    com.alimama.mobile.csdk.umupdate.models.b c -> c
    com.alimama.mobile.a d -> d
    void dataReceived(int,java.util.List) -> a
    void a(boolean) -> a
    void a(com.alimama.mobile.a$1,boolean) -> a
com.alimama.mobile.a$1$1 -> com.alimama.mobile.d:
    com.alimama.mobile.a$1 a -> a
    void dataReceived(int,java.util.List) -> a
com.alimama.mobile.a$a -> com.alimama.mobile.e:
    void dataReceived(int,java.util.List) -> a
com.alimama.mobile.csdk.umupdate.a.a -> com.alimama.mobile.csdk.umupdate.a.a:
    boolean c(java.lang.String) -> a
    java.lang.String f() -> a
    java.lang.String g() -> b
    java.lang.String h() -> c
    java.lang.String i() -> d
    boolean l() -> e
    java.lang.String m() -> f
    java.lang.String n() -> g
    java.lang.String o() -> h
    java.lang.String p() -> i
    java.lang.String r() -> j
    java.lang.String t() -> k
    java.lang.String[] C() -> l
    android.location.Location D() -> m
    java.lang.String E() -> n
    java.lang.String f(java.lang.String) -> b
    java.lang.String F() -> o
com.alimama.mobile.csdk.umupdate.a.b -> com.alimama.mobile.csdk.umupdate.a.b:
    java.util.concurrent.ThreadFactory i -> e
    java.util.concurrent.BlockingQueue j -> f
    java.util.concurrent.Executor a -> a
    java.util.concurrent.Executor b -> b
    java.util.concurrent.Executor c -> c
    java.util.concurrent.Executor d -> d
    com.alimama.mobile.csdk.umupdate.a.b$b m -> g
    java.util.concurrent.Executor n -> h
    com.alimama.mobile.csdk.umupdate.a.b$e o -> i
    java.util.concurrent.FutureTask p -> j
    com.alimama.mobile.csdk.umupdate.a.b$d q -> k
    java.util.concurrent.atomic.AtomicBoolean r -> l
    java.util.concurrent.atomic.AtomicBoolean s -> m
    void c(java.lang.Object) -> c
    java.lang.Object d(java.lang.Object) -> d
    java.lang.Object a(java.lang.Object[]) -> a
    void c() -> a
    void a(java.lang.Object) -> a
    void b(java.lang.Object[]) -> b
    void b(java.lang.Object) -> b
    void d() -> b
    boolean e() -> c
    com.alimama.mobile.csdk.umupdate.a.b a(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void e(java.lang.Object) -> e
    boolean g() -> d
    java.util.concurrent.atomic.AtomicBoolean a(com.alimama.mobile.csdk.umupdate.a.b) -> a
    java.lang.Object a(com.alimama.mobile.csdk.umupdate.a.b,java.lang.Object) -> a
    void b(com.alimama.mobile.csdk.umupdate.a.b,java.lang.Object) -> b
    void c(com.alimama.mobile.csdk.umupdate.a.b,java.lang.Object) -> c
com.alimama.mobile.csdk.umupdate.a.b$1 -> com.alimama.mobile.csdk.umupdate.a.c:
    java.util.concurrent.atomic.AtomicInteger a -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.alimama.mobile.csdk.umupdate.a.b$2 -> com.alimama.mobile.csdk.umupdate.a.d:
    com.alimama.mobile.csdk.umupdate.a.b a -> a
    java.lang.Object call() -> call
com.alimama.mobile.csdk.umupdate.a.b$3 -> com.alimama.mobile.csdk.umupdate.a.e:
    com.alimama.mobile.csdk.umupdate.a.b a -> a
    void done() -> done
com.alimama.mobile.csdk.umupdate.a.b$4 -> com.alimama.mobile.csdk.umupdate.a.f:
    int[] a -> a
com.alimama.mobile.csdk.umupdate.a.b$a -> com.alimama.mobile.csdk.umupdate.a.g:
    com.alimama.mobile.csdk.umupdate.a.b a -> a
    java.lang.Object[] b -> b
com.alimama.mobile.csdk.umupdate.a.b$b -> com.alimama.mobile.csdk.umupdate.a.h:
    void handleMessage(android.os.Message) -> handleMessage
com.alimama.mobile.csdk.umupdate.a.b$c -> com.alimama.mobile.csdk.umupdate.a.i:
    java.util.ArrayDeque a -> a
    java.lang.Runnable b -> b
    void execute(java.lang.Runnable) -> execute
    void a() -> a
com.alimama.mobile.csdk.umupdate.a.b$c$1 -> com.alimama.mobile.csdk.umupdate.a.j:
    java.lang.Runnable a -> a
    com.alimama.mobile.csdk.umupdate.a.b$c b -> b
    void run() -> run
com.alimama.mobile.csdk.umupdate.a.b$d -> com.alimama.mobile.csdk.umupdate.a.k:
    com.alimama.mobile.csdk.umupdate.a.b$d a -> a
    com.alimama.mobile.csdk.umupdate.a.b$d b -> b
    com.alimama.mobile.csdk.umupdate.a.b$d c -> c
    com.alimama.mobile.csdk.umupdate.a.b$d[] d -> d
    com.alimama.mobile.csdk.umupdate.a.b$d[] values() -> values
    com.alimama.mobile.csdk.umupdate.a.b$d valueOf(java.lang.String) -> valueOf
com.alimama.mobile.csdk.umupdate.a.b$e -> com.alimama.mobile.csdk.umupdate.a.l:
    java.lang.Object[] b -> b
com.alimama.mobile.csdk.umupdate.a.c -> com.alimama.mobile.csdk.umupdate.a.m:
    com.alimama.mobile.csdk.umupdate.a.c$a a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String e -> d
    java.lang.String f -> e
    java.lang.String g -> f
    java.lang.String h -> g
    java.lang.String i -> h
    java.lang.String j -> i
    java.lang.String k -> j
    java.lang.String l -> k
    java.lang.String m -> l
    java.lang.String n -> m
    float o -> n
    int p -> o
    int q -> p
    java.lang.String r -> q
    java.lang.String s -> r
    android.content.Context t -> s
    boolean u -> t
    boolean v -> u
    boolean w -> v
    boolean x -> w
    java.lang.String y -> x
    void a(android.content.Context,com.alimama.mobile.csdk.umupdate.a.c$a) -> a
    boolean e(java.lang.String) -> c
    boolean l() -> e
    boolean c(java.lang.String) -> a
    java.lang.String f() -> a
    java.lang.String g() -> b
    java.lang.String h() -> c
    java.lang.String i() -> d
    java.lang.String m() -> f
    java.lang.String n() -> g
    java.lang.String o() -> h
    java.lang.String p() -> i
    java.lang.String r() -> j
    java.lang.String t() -> k
    java.lang.String[] C() -> l
    android.location.Location D() -> m
    java.lang.String E() -> n
    java.lang.String f(java.lang.String) -> b
    java.lang.String F() -> o
    java.lang.String g(java.lang.String) -> d
com.alimama.mobile.csdk.umupdate.a.c$a -> com.alimama.mobile.csdk.umupdate.a.n:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
com.alimama.mobile.csdk.umupdate.a.d -> com.alimama.mobile.csdk.umupdate.a.o:
    void a(com.alimama.mobile.csdk.umupdate.models.Promoter,com.alimama.mobile.csdk.umupdate.models.MMEntity,boolean,int) -> a
    void a(com.alimama.mobile.csdk.umupdate.models.MMEntity,com.alimama.mobile.csdk.umupdate.models.Promoter,int) -> a
    void b(com.alimama.mobile.csdk.umupdate.models.MMEntity,com.alimama.mobile.csdk.umupdate.models.Promoter,int) -> b
    void c(com.alimama.mobile.csdk.umupdate.models.MMEntity,com.alimama.mobile.csdk.umupdate.models.Promoter,int) -> c
com.alimama.mobile.csdk.umupdate.a.e -> com.alimama.mobile.csdk.umupdate.a.p:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    boolean g -> g
com.alimama.mobile.csdk.umupdate.a.g -> com.alimama.mobile.csdk.umupdate.a.q:
    java.lang.String a -> a
    boolean b -> b
    void b(java.lang.String,java.lang.Object[]) -> a
    void c(java.lang.String,java.lang.Object[]) -> b
    void d(java.lang.String,java.lang.Object[]) -> c
    void a(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
    void e(java.lang.String,java.lang.Object[]) -> d
    java.lang.String g(java.lang.String,java.lang.Object[]) -> e
com.alimama.mobile.csdk.umupdate.a.h -> com.alimama.mobile.csdk.umupdate.a.r:
    java.lang.String a -> a
    android.content.res.Resources b -> b
    int a() -> a
    int b() -> b
    java.lang.String c() -> c
    int d() -> d
    int e() -> e
    int f() -> f
    int g() -> g
    int h() -> h
com.alimama.mobile.csdk.umupdate.a.i -> com.alimama.mobile.csdk.umupdate.a.s:
    java.lang.String e -> e
    com.alimama.mobile.a$a g -> g
    int h -> h
    boolean i -> i
    com.alimama.mobile.csdk.umupdate.models.b f -> f
    void c() -> a
    android.os.Message a(java.lang.Void[]) -> a
    void a(android.os.Message) -> a
    java.util.List a(int[]) -> a
    java.util.List a(org.json.JSONObject) -> a
    java.util.List a(boolean,boolean) -> a
    java.util.Map a(com.alimama.mobile.csdk.umupdate.models.MMEntity) -> a
    void a(java.util.Collection,java.lang.Class,org.json.JSONObject,java.lang.String) -> a
    int a(java.util.List) -> a
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.alimama.mobile.csdk.umupdate.a.j -> com.alimama.mobile.csdk.umupdate.a.t:
    java.util.Map a -> a
    java.lang.String b(java.lang.String) -> a
    java.lang.String c(java.lang.String) -> b
    void a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String) -> b
    java.lang.String a(java.lang.String,java.util.Map) -> a
    java.util.Map a() -> a
com.alimama.mobile.csdk.umupdate.a.k -> com.alimama.mobile.csdk.umupdate.a.u:
    java.lang.String b -> a
    android.content.Context c -> b
    com.umeng.update.net.a d -> c
    com.alimama.mobile.csdk.umupdate.b.d e -> d
    com.alimama.mobile.csdk.umupdate.models.Promoter f -> e
    void a() -> a
    com.alimama.mobile.csdk.umupdate.models.Promoter a(com.alimama.mobile.csdk.umupdate.a.k) -> a
    android.content.Context b(com.alimama.mobile.csdk.umupdate.a.k) -> b
    java.lang.String b() -> b
    com.alimama.mobile.csdk.umupdate.b.d c(com.alimama.mobile.csdk.umupdate.a.k) -> c
com.alimama.mobile.csdk.umupdate.a.k$a -> com.alimama.mobile.csdk.umupdate.a.v:
    java.lang.String b -> b
    com.umeng.update.net.b c -> c
    com.alimama.mobile.csdk.umupdate.a.k a -> a
    void onStart() -> a
    void onProgressUpdate(int) -> a
    void onEnd(int,int,java.lang.String) -> a
    void onStatus(int) -> b
com.alimama.mobile.csdk.umupdate.b.a -> com.alimama.mobile.csdk.umupdate.b.a:
    java.lang.String[] c -> a
    java.lang.String[] d -> b
com.alimama.mobile.csdk.umupdate.b.b -> com.alimama.mobile.csdk.umupdate.b.b:
    com.alimama.mobile.csdk.umupdate.b.f a(com.alimama.mobile.csdk.umupdate.b.e) -> a
com.alimama.mobile.csdk.umupdate.b.c -> com.alimama.mobile.csdk.umupdate.b.c:
    void sendAsync(u.upd.e,u.upd.d$a) -> a
com.alimama.mobile.csdk.umupdate.b.d -> com.alimama.mobile.csdk.umupdate.b.d:
    java.lang.String c -> e
    java.util.Map a -> a
    void a() -> a
    java.lang.String getHttpMethod() -> b
    org.json.JSONObject toJson() -> c
    java.lang.String toGetUrl() -> d
    java.lang.String b() -> e
com.alimama.mobile.csdk.umupdate.b.d$a -> com.alimama.mobile.csdk.umupdate.b.e:
    com.alimama.mobile.csdk.umupdate.models.MMEntity b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.util.Random k -> k
    int m -> l
    java.lang.String n -> m
    int o -> n
    java.util.List a -> a
    com.alimama.mobile.csdk.umupdate.b.d$a a(int) -> a
    com.alimama.mobile.csdk.umupdate.b.d$a b(int) -> b
    com.alimama.mobile.csdk.umupdate.b.d$a c(int) -> c
    com.alimama.mobile.csdk.umupdate.b.d$a a(com.alimama.mobile.csdk.umupdate.models.Promoter[]) -> a
    com.alimama.mobile.csdk.umupdate.b.d a() -> a
    java.util.Map b() -> b
    java.util.Map c() -> c
com.alimama.mobile.csdk.umupdate.b.e -> com.alimama.mobile.csdk.umupdate.b.f:
    java.util.Map a -> a
    org.json.JSONObject toJson() -> c
    java.lang.String getHttpMethod() -> b
    java.lang.String toGetUrl() -> d
    void setBaseUrl(java.lang.String) -> a
com.alimama.mobile.csdk.umupdate.b.f -> com.alimama.mobile.csdk.umupdate.b.g:
    int a -> a
    org.json.JSONObject b -> b
    void a(org.json.JSONObject) -> a
com.alimama.mobile.csdk.umupdate.models.MMEntity -> com.alimama.mobile.csdk.umupdate.models.MMEntity:
    android.os.Parcelable$Creator CREATOR -> a
    com.alimama.mobile.csdk.umupdate.models.d module -> b
    java.lang.String opensize -> c
    java.lang.String landing_image -> d
    java.lang.String landingUrl -> e
    java.lang.String new_image -> f
    int image_type -> g
    int displayStyle -> h
    java.lang.String displayType -> i
    int newTips -> j
    int cache -> k
    java.lang.String landing_size -> l
    boolean filterInstalledApp -> m
    boolean wallSwitch -> n
    long expire -> o
    int sid_expired -> p
    java.lang.String entryStr -> q
    long[] timeline -> r
    java.util.HashMap ecomparms -> s
    int a -> t
    long b -> u
    boolean c -> v
    java.lang.String ispreload -> w
    int preload -> x
    java.lang.String iscache -> y
    java.lang.String getTimeConsuming() -> a
    void warp(org.json.JSONObject) -> a
    java.lang.Object clone() -> clone
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.alimama.mobile.csdk.umupdate.models.MMEntity$1 -> com.alimama.mobile.csdk.umupdate.models.b:
    com.alimama.mobile.csdk.umupdate.models.MMEntity a(android.os.Parcel) -> a
    com.alimama.mobile.csdk.umupdate.models.MMEntity[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.alimama.mobile.csdk.umupdate.models.Promoter -> com.alimama.mobile.csdk.umupdate.models.Promoter:
    java.lang.String a -> G
    java.lang.String promoter -> a
    int category -> b
    int content_type -> c
    int display_type -> d
    java.lang.String img -> e
    int image_type -> f
    int anim_in -> g
    int landing_type -> h
    java.lang.String text_font -> i
    java.lang.String text_size -> j
    java.lang.String text_color -> k
    java.lang.String title -> l
    java.lang.String provider -> m
    java.lang.String ad_words -> n
    java.lang.String description -> o
    java.lang.String icon -> p
    java.lang.String url -> q
    int app_version_code -> r
    java.lang.String url_in_app -> s
    long size -> t
    java.lang.String app_package_name -> u
    java.lang.String app_version_name -> v
    int new_tip -> w
    java.lang.String prom_act_pams -> x
    java.lang.String slot_act_pams -> y
    java.lang.String price -> z
    java.lang.String promoterPrice -> A
    int sell -> B
    java.lang.String landing_size -> C
    boolean filterInstalledApp -> D
    java.lang.String[] imgs -> E
    android.os.Parcelable$Creator CREATOR -> CREATOR
    double bid -> F
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void a(org.json.JSONObject) -> a
    com.alimama.mobile.csdk.umupdate.models.Promoter getPromoterFromJson(org.json.JSONObject,java.lang.Class) -> a
com.alimama.mobile.csdk.umupdate.models.Promoter$1 -> com.alimama.mobile.csdk.umupdate.models.c:
    com.alimama.mobile.csdk.umupdate.models.Promoter a(android.os.Parcel) -> a
    com.alimama.mobile.csdk.umupdate.models.Promoter[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.alimama.mobile.csdk.umupdate.models.a -> com.alimama.mobile.csdk.umupdate.models.a:
    java.lang.String slotId -> z
    java.lang.String appkey -> A
    int autofill -> B
    int layoutType -> C
    java.lang.String keywords -> D
    java.lang.String tabId -> E
    java.lang.String filterPromoter -> F
    java.lang.String tag -> G
    int landing_type -> H
    java.lang.String sid -> I
    java.lang.String psid -> J
    com.alimama.mobile.csdk.umupdate.models.e resType -> K
    com.alimama.mobile.csdk.umupdate.models.f template -> L
    java.lang.String templateAttrs -> M
    java.lang.String urlParams -> N
    java.lang.String slot_act_params -> O
    int page_index -> P
    void clear() -> b
    void warp(org.json.JSONObject) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.alimama.mobile.csdk.umupdate.models.b -> com.alimama.mobile.csdk.umupdate.models.d:
    com.alimama.mobile.csdk.umupdate.models.c a -> a
    com.alimama.mobile.csdk.umupdate.models.MMEntity b -> b
    com.alimama.mobile.csdk.umupdate.models.c a() -> a
    com.alimama.mobile.csdk.umupdate.models.MMEntity b() -> b
com.alimama.mobile.csdk.umupdate.models.c -> com.alimama.mobile.csdk.umupdate.models.e:
    java.lang.String c -> a
    java.lang.String f -> d
    java.lang.String g -> e
    java.lang.String h -> f
    java.lang.String i -> g
    java.lang.String d -> b
    java.lang.String e -> c
    void a(com.alimama.mobile.csdk.umupdate.models.MMEntity) -> a
    void a() -> a
    int b() -> b
    void a(int) -> a
    org.json.JSONObject a(boolean,long,boolean) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    boolean a(boolean,org.json.JSONObject) -> a
com.alimama.mobile.csdk.umupdate.models.d -> com.alimama.mobile.csdk.umupdate.models.f:
    com.alimama.mobile.csdk.umupdate.models.d a -> a
    com.alimama.mobile.csdk.umupdate.models.d b -> b
    com.alimama.mobile.csdk.umupdate.models.d c -> c
    com.alimama.mobile.csdk.umupdate.models.d[] d -> d
    com.alimama.mobile.csdk.umupdate.models.d[] values() -> values
    com.alimama.mobile.csdk.umupdate.models.d valueOf(java.lang.String) -> valueOf
    com.alimama.mobile.csdk.umupdate.models.d a(java.lang.String) -> a
com.alimama.mobile.csdk.umupdate.models.d$1 -> com.alimama.mobile.csdk.umupdate.models.g:
    java.lang.String toString() -> toString
com.alimama.mobile.csdk.umupdate.models.d$2 -> com.alimama.mobile.csdk.umupdate.models.h:
    java.lang.String toString() -> toString
com.alimama.mobile.csdk.umupdate.models.d$3 -> com.alimama.mobile.csdk.umupdate.models.i:
    java.lang.String toString() -> toString
com.alimama.mobile.csdk.umupdate.models.e -> com.alimama.mobile.csdk.umupdate.models.j:
    com.alimama.mobile.csdk.umupdate.models.e a -> a
    com.alimama.mobile.csdk.umupdate.models.e b -> b
    com.alimama.mobile.csdk.umupdate.models.e c -> c
    com.alimama.mobile.csdk.umupdate.models.e d -> d
    com.alimama.mobile.csdk.umupdate.models.e[] e -> e
    com.alimama.mobile.csdk.umupdate.models.e[] values() -> values
    com.alimama.mobile.csdk.umupdate.models.e valueOf(java.lang.String) -> valueOf
    com.alimama.mobile.csdk.umupdate.models.e a(java.lang.String) -> a
com.alimama.mobile.csdk.umupdate.models.e$1 -> com.alimama.mobile.csdk.umupdate.models.k:
    java.lang.String toString() -> toString
com.alimama.mobile.csdk.umupdate.models.e$2 -> com.alimama.mobile.csdk.umupdate.models.l:
    java.lang.String toString() -> toString
com.alimama.mobile.csdk.umupdate.models.e$3 -> com.alimama.mobile.csdk.umupdate.models.m:
    java.lang.String toString() -> toString
com.alimama.mobile.csdk.umupdate.models.e$4 -> com.alimama.mobile.csdk.umupdate.models.n:
    java.lang.String toString() -> toString
com.alimama.mobile.csdk.umupdate.models.f -> com.alimama.mobile.csdk.umupdate.models.o:
    com.alimama.mobile.csdk.umupdate.models.f a -> a
    com.alimama.mobile.csdk.umupdate.models.f b -> b
    com.alimama.mobile.csdk.umupdate.models.f c -> c
    com.alimama.mobile.csdk.umupdate.models.f d -> d
    com.alimama.mobile.csdk.umupdate.models.f[] e -> e
    com.alimama.mobile.csdk.umupdate.models.f[] values() -> values
    com.alimama.mobile.csdk.umupdate.models.f valueOf(java.lang.String) -> valueOf
    com.alimama.mobile.csdk.umupdate.models.f a(java.lang.String) -> a
com.alimama.mobile.csdk.umupdate.models.f$1 -> com.alimama.mobile.csdk.umupdate.models.p:
    java.lang.String toString() -> toString
com.alimama.mobile.csdk.umupdate.models.f$2 -> com.alimama.mobile.csdk.umupdate.models.q:
    java.lang.String toString() -> toString
com.alimama.mobile.csdk.umupdate.models.f$3 -> com.alimama.mobile.csdk.umupdate.models.r:
    java.lang.String toString() -> toString
com.alimama.mobile.csdk.umupdate.models.f$4 -> com.alimama.mobile.csdk.umupdate.models.s:
    java.lang.String toString() -> toString
com.google.gson.DefaultDateTypeAdapter -> com.a.a.a:
    java.text.DateFormat enUsFormat -> a
    java.text.DateFormat localFormat -> b
    java.text.DateFormat iso8601Format -> c
    com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> b
com.google.gson.ExclusionStrategy -> com.a.a.b:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.FieldAttributes -> com.a.a.c:
    java.lang.reflect.Field field -> a
com.google.gson.FieldNamingPolicy -> com.a.a.d:
    com.google.gson.FieldNamingPolicy IDENTITY -> a
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> b
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> c
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> d
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> e
    com.google.gson.FieldNamingPolicy[] $VALUES -> f
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> b
    java.lang.String upperCaseFirstLetter(java.lang.String) -> b
    java.lang.String modifyString(char,java.lang.String,int) -> a
    java.lang.String access$100(java.lang.String) -> a
    java.lang.String access$200(java.lang.String,java.lang.String) -> a
com.google.gson.FieldNamingPolicy$1 -> com.a.a.e:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$2 -> com.a.a.f:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$3 -> com.a.a.g:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$4 -> com.a.a.h:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$5 -> com.a.a.i:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingStrategy -> com.a.a.j:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.Gson -> com.a.a.k:
    java.lang.ThreadLocal calls -> c
    java.util.Map typeTokenCache -> d
    java.util.List factories -> e
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> f
    boolean serializeNulls -> g
    boolean htmlSafe -> h
    boolean generateNonExecutableJson -> i
    boolean prettyPrinting -> j
    com.google.gson.JsonDeserializationContext deserializationContext -> a
    com.google.gson.JsonSerializationContext serializationContext -> b
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> a
    com.google.gson.TypeAdapter floatAdapter(boolean) -> b
    void checkValidFloatingPoint(double) -> a
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> a
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> a
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> a
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> a
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> a
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> a
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> a
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> a
com.google.gson.Gson$1 -> com.a.a.l:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$2 -> com.a.a.m:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$3 -> com.a.a.n:
    com.google.gson.Gson this$0 -> a
    java.lang.Double read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$4 -> com.a.a.o:
    com.google.gson.Gson this$0 -> a
    java.lang.Float read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$5 -> com.a.a.p:
    com.google.gson.Gson this$0 -> a
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$FutureTypeAdapter -> com.a.a.q:
    com.google.gson.TypeAdapter delegate -> a
    void setDelegate(com.google.gson.TypeAdapter) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.GsonBuilder -> com.a.a.r:
    com.google.gson.internal.Excluder excluder -> a
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> b
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> c
    java.util.Map instanceCreators -> d
    java.util.List factories -> e
    java.util.List hierarchyFactories -> f
    boolean serializeNulls -> g
    java.lang.String datePattern -> h
    int dateStyle -> i
    int timeStyle -> j
    boolean complexMapKeySerialization -> k
    boolean serializeSpecialFloatingPointValues -> l
    boolean escapeHtmlChars -> m
    boolean prettyPrinting -> n
    boolean generateNonExecutableJson -> o
    com.google.gson.Gson create() -> a
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> a
com.google.gson.InstanceCreator -> com.a.a.s:
    java.lang.Object createInstance(java.lang.reflect.Type) -> a
com.google.gson.JsonArray -> com.a.a.t:
    java.util.List elements -> a
    void add(com.google.gson.JsonElement) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean getAsBoolean() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonDeserializationContext -> com.a.a.u:
com.google.gson.JsonDeserializer -> com.a.a.v:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> b
com.google.gson.JsonElement -> com.a.a.w:
    boolean isJsonArray() -> g
    boolean isJsonObject() -> h
    boolean isJsonPrimitive() -> i
    boolean isJsonNull() -> j
    com.google.gson.JsonObject getAsJsonObject() -> k
    com.google.gson.JsonArray getAsJsonArray() -> l
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> m
    boolean getAsBoolean() -> f
    java.lang.Boolean getAsBooleanWrapper() -> n
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.a.a.x:
com.google.gson.JsonNull -> com.a.a.y:
    com.google.gson.JsonNull INSTANCE -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.JsonObject -> com.a.a.z:
    com.google.gson.internal.LinkedTreeMap members -> a
    void add(java.lang.String,com.google.gson.JsonElement) -> a
    java.util.Set entrySet() -> o
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonParseException -> com.a.a.aa:
com.google.gson.JsonPrimitive -> com.a.a.ab:
    java.lang.Class[] PRIMITIVE_TYPES -> a
    java.lang.Object value -> b
    void setValue(java.lang.Object) -> a
    boolean isBoolean() -> o
    java.lang.Boolean getAsBooleanWrapper() -> n
    boolean getAsBoolean() -> f
    boolean isNumber() -> p
    java.lang.Number getAsNumber() -> a
    boolean isString() -> q
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean isPrimitiveOrString(java.lang.Object) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> a
com.google.gson.JsonSerializationContext -> com.a.a.ac:
com.google.gson.JsonSerializer -> com.a.a.ad:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.JsonSyntaxException -> com.a.a.ae:
com.google.gson.LongSerializationPolicy -> com.a.a.af:
    com.google.gson.LongSerializationPolicy DEFAULT -> a
    com.google.gson.LongSerializationPolicy STRING -> b
    com.google.gson.LongSerializationPolicy[] $VALUES -> c
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
com.google.gson.LongSerializationPolicy$1 -> com.a.a.ag:
com.google.gson.LongSerializationPolicy$2 -> com.a.a.ah:
com.google.gson.TreeTypeAdapter -> com.a.a.ai:
    com.google.gson.JsonSerializer serializer -> a
    com.google.gson.JsonDeserializer deserializer -> b
    com.google.gson.Gson gson -> c
    com.google.gson.reflect.TypeToken typeToken -> d
    com.google.gson.TypeAdapterFactory skipPast -> e
    com.google.gson.TypeAdapter delegate -> f
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.TypeAdapter delegate() -> a
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> a
com.google.gson.TreeTypeAdapter$1 -> com.a.a.aj:
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> com.a.a.ak:
    com.google.gson.reflect.TypeToken exactType -> a
    boolean matchRawType -> b
    java.lang.Class hierarchyType -> c
    com.google.gson.JsonSerializer serializer -> d
    com.google.gson.JsonDeserializer deserializer -> e
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.TypeAdapter -> com.a.a.al:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
com.google.gson.TypeAdapterFactory -> com.a.a.am:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.annotations.Expose -> com.a.a.a.a:
    boolean serialize() -> a
    boolean deserialize() -> b
com.google.gson.annotations.SerializedName -> com.a.a.a.b:
    java.lang.String value() -> a
com.google.gson.annotations.Since -> com.a.a.a.c:
    double value() -> a
com.google.gson.annotations.Until -> com.a.a.a.d:
    double value() -> a
com.google.gson.internal.$Gson$Preconditions -> com.a.a.b.a:
    java.lang.Object checkNotNull(java.lang.Object) -> a
    void checkArgument(boolean) -> a
com.google.gson.internal.$Gson$Types -> com.a.a.b.b:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> a
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> a
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> a
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> b
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> c
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> d
    java.lang.Class getRawType(java.lang.reflect.Type) -> e
    boolean equal(java.lang.Object,java.lang.Object) -> a
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    int hashCodeOrZero(java.lang.Object) -> b
    java.lang.String typeToString(java.lang.reflect.Type) -> f
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> a
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> b
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> g
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> a
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> a
    int indexOf(java.lang.Object[],java.lang.Object) -> a
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> a
    void checkNotPrimitive(java.lang.reflect.Type) -> i
    void access$000(java.lang.reflect.Type) -> h
    int access$100(java.lang.Object) -> a
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.a.a.b.c:
    java.lang.reflect.Type componentType -> a
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.a.a.b.d:
    java.lang.reflect.Type ownerType -> a
    java.lang.reflect.Type rawType -> b
    java.lang.reflect.Type[] typeArguments -> c
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.a.a.b.e:
    java.lang.reflect.Type upperBound -> a
    java.lang.reflect.Type lowerBound -> b
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.a.a.b.f:
    java.util.Map instanceCreators -> a
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> a
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> a
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.a.a.b.g:
    com.google.gson.InstanceCreator val$typeCreator -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$10 -> com.a.a.b.h:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$11 -> com.a.a.b.i:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$12 -> com.a.a.b.j:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> d
    java.lang.Class val$rawType -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$2 -> com.a.a.b.k:
    com.google.gson.InstanceCreator val$rawTypeCreator -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$3 -> com.a.a.b.l:
    java.lang.reflect.Constructor val$constructor -> a
    com.google.gson.internal.ConstructorConstructor this$0 -> b
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$4 -> com.a.a.b.m:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$5 -> com.a.a.b.n:
    java.lang.reflect.Type val$type -> a
    com.google.gson.internal.ConstructorConstructor this$0 -> b
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$6 -> com.a.a.b.o:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$7 -> com.a.a.b.p:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$8 -> com.a.a.b.q:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$9 -> com.a.a.b.r:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.Excluder -> com.a.a.b.s:
    com.google.gson.internal.Excluder DEFAULT -> a
    double version -> b
    int modifiers -> c
    boolean serializeInnerClasses -> d
    boolean requireExpose -> e
    java.util.List serializationStrategies -> f
    java.util.List deserializationStrategies -> g
    com.google.gson.internal.Excluder clone() -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    boolean excludeClass(java.lang.Class,boolean) -> a
    boolean isAnonymousOrLocal(java.lang.Class) -> a
    boolean isInnerClass(java.lang.Class) -> b
    boolean isStatic(java.lang.Class) -> c
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> a
    boolean isValidSince(com.google.gson.annotations.Since) -> a
    boolean isValidUntil(com.google.gson.annotations.Until) -> a
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.a.a.b.t:
    com.google.gson.TypeAdapter delegate -> f
    boolean val$skipDeserialize -> a
    boolean val$skipSerialize -> b
    com.google.gson.Gson val$gson -> c
    com.google.gson.reflect.TypeToken val$type -> d
    com.google.gson.internal.Excluder this$0 -> e
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.TypeAdapter delegate() -> a
com.google.gson.internal.JsonReaderInternalAccess -> com.a.a.b.u:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> a
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.internal.LazilyParsedNumber -> com.a.a.b.v:
    java.lang.String value -> a
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
com.google.gson.internal.LinkedTreeMap -> com.a.a.b.w:
    java.util.Comparator NATURAL_ORDER -> g
    java.util.Comparator comparator -> a
    com.google.gson.internal.LinkedTreeMap$Node root -> b
    int size -> c
    int modCount -> d
    com.google.gson.internal.LinkedTreeMap$Node header -> e
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> h
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> i
    boolean $assertionsDisabled -> f
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> a
    com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> a
    com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> a
    boolean equal(java.lang.Object,java.lang.Object) -> a
    void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> a
    com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> b
    void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> a
    void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> b
    void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> a
    void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> b
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
com.google.gson.internal.LinkedTreeMap$1 -> com.a.a.b.x:
    int compare(java.lang.Comparable,java.lang.Comparable) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.a.a.b.y:
    com.google.gson.internal.LinkedTreeMap this$0 -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.a.a.b.z:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> a
    java.util.Map$Entry next() -> a
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.a.a.b.aa:
    com.google.gson.internal.LinkedTreeMap this$0 -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.a.a.b.ab:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> a
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.a.a.b.ac:
    com.google.gson.internal.LinkedTreeMap$Node next -> b
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> c
    int expectedModCount -> d
    com.google.gson.internal.LinkedTreeMap this$0 -> e
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedTreeMap$Node nextNode() -> b
    void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.a.a.b.ad:
    com.google.gson.internal.LinkedTreeMap$Node parent -> a
    com.google.gson.internal.LinkedTreeMap$Node left -> b
    com.google.gson.internal.LinkedTreeMap$Node right -> c
    com.google.gson.internal.LinkedTreeMap$Node next -> d
    com.google.gson.internal.LinkedTreeMap$Node prev -> e
    java.lang.Object key -> f
    java.lang.Object value -> g
    int height -> h
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedTreeMap$Node first() -> a
    com.google.gson.internal.LinkedTreeMap$Node last() -> b
com.google.gson.internal.ObjectConstructor -> com.a.a.b.ae:
    java.lang.Object construct() -> a
com.google.gson.internal.Primitives -> com.a.a.b.af:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> a
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> b
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    boolean isPrimitive(java.lang.reflect.Type) -> a
    java.lang.Class wrap(java.lang.Class) -> a
com.google.gson.internal.Streams -> com.a.a.b.ag:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
com.google.gson.internal.UnsafeAllocator -> com.a.a.b.ah:
    java.lang.Object newInstance(java.lang.Class) -> a
    com.google.gson.internal.UnsafeAllocator create() -> a
com.google.gson.internal.UnsafeAllocator$1 -> com.a.a.b.ai:
    java.lang.reflect.Method val$allocateInstance -> a
    java.lang.Object val$unsafe -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$2 -> com.a.a.b.aj:
    java.lang.reflect.Method val$newInstance -> a
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$3 -> com.a.a.b.ak:
    java.lang.reflect.Method val$newInstance -> a
    int val$constructorId -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$4 -> com.a.a.b.al:
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.bind.ArrayTypeAdapter -> com.a.a.b.a.a:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.lang.Class componentType -> b
    com.google.gson.TypeAdapter componentTypeAdapter -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.a.a.b.a.b:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.a.a.b.a.c:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.a.a.b.a.d:
    com.google.gson.TypeAdapter elementTypeAdapter -> a
    com.google.gson.internal.ObjectConstructor constructor -> b
    java.util.Collection read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter -> com.a.a.b.a.e:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat enUsFormat -> b
    java.text.DateFormat localFormat -> c
    java.text.DateFormat iso8601Format -> d
    java.text.DateFormat buildIso8601Format() -> a
    java.util.Date read(com.google.gson.stream.JsonReader) -> a
    java.util.Date deserializeToDate(java.lang.String) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.a.a.b.a.f:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.JsonTreeReader -> com.a.a.b.a.g:
    java.io.Reader UNREADABLE_READER -> a
    java.lang.Object SENTINEL_CLOSED -> b
    java.util.List stack -> c
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    java.lang.Object peekStack() -> q
    java.lang.Object popStack() -> r
    void expect(com.google.gson.stream.JsonToken) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    java.lang.String toString() -> toString
    void promoteNameToValue() -> o
com.google.gson.internal.bind.JsonTreeReader$1 -> com.a.a.b.a.h:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.a.a.b.a.i:
    java.io.Writer UNWRITABLE_WRITER -> a
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> b
    java.util.List stack -> c
    java.lang.String pendingName -> d
    com.google.gson.JsonElement product -> e
    com.google.gson.JsonElement get() -> a
    com.google.gson.JsonElement peek() -> i
    void put(com.google.gson.JsonElement) -> a
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.a.a.b.a.j:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.a.a.b.a.k:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    boolean complexMapKeySerialization -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> a
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> a
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.a.a.b.a.l:
    com.google.gson.TypeAdapter keyTypeAdapter -> b
    com.google.gson.TypeAdapter valueTypeAdapter -> c
    com.google.gson.internal.ObjectConstructor constructor -> d
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> a
    java.util.Map read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> a
    java.lang.String keyToString(com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter -> com.a.a.b.a.m:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    com.google.gson.Gson gson -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.a.a.b.a.n:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.a.a.b.a.o:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.a.a.b.a.p:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> b
    com.google.gson.internal.Excluder excluder -> c
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    java.lang.String getFieldName(java.lang.reflect.Field) -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> a
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.a.a.b.a.q:
    com.google.gson.TypeAdapter typeAdapter -> a
    com.google.gson.Gson val$context -> b
    com.google.gson.reflect.TypeToken val$fieldType -> c
    java.lang.reflect.Field val$field -> d
    boolean val$isPrimitive -> e
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> f
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.a.a.b.a.r:
    com.google.gson.internal.ObjectConstructor constructor -> a
    java.util.Map boundFields -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.a.a.b.a.s:
    java.lang.String name -> g
    boolean serialized -> h
    boolean deserialized -> i
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.a.a.b.a.t:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Date read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.a.a.b.a.u:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TimeTypeAdapter -> com.a.a.b.a.v:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Time read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.a.a.b.a.w:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.a.a.b.a.x:
    com.google.gson.Gson context -> a
    com.google.gson.TypeAdapter delegate -> b
    java.lang.reflect.Type type -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters -> com.a.a.b.a.y:
    com.google.gson.TypeAdapter CLASS -> a
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> b
    com.google.gson.TypeAdapter BIT_SET -> c
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> d
    com.google.gson.TypeAdapter BOOLEAN -> e
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> f
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> g
    com.google.gson.TypeAdapter BYTE -> h
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> i
    com.google.gson.TypeAdapter SHORT -> j
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> k
    com.google.gson.TypeAdapter INTEGER -> l
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> m
    com.google.gson.TypeAdapter LONG -> n
    com.google.gson.TypeAdapter FLOAT -> o
    com.google.gson.TypeAdapter DOUBLE -> p
    com.google.gson.TypeAdapter NUMBER -> q
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> r
    com.google.gson.TypeAdapter CHARACTER -> s
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> t
    com.google.gson.TypeAdapter STRING -> u
    com.google.gson.TypeAdapter BIG_DECIMAL -> v
    com.google.gson.TypeAdapter BIG_INTEGER -> w
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> x
    com.google.gson.TypeAdapter STRING_BUILDER -> y
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> z
    com.google.gson.TypeAdapter STRING_BUFFER -> A
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> B
    com.google.gson.TypeAdapter URL -> C
    com.google.gson.TypeAdapterFactory URL_FACTORY -> D
    com.google.gson.TypeAdapter URI -> E
    com.google.gson.TypeAdapterFactory URI_FACTORY -> F
    com.google.gson.TypeAdapter INET_ADDRESS -> G
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> H
    com.google.gson.TypeAdapter UUID -> I
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> J
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> K
    com.google.gson.TypeAdapter CALENDAR -> L
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> M
    com.google.gson.TypeAdapter LOCALE -> N
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> O
    com.google.gson.TypeAdapter JSON_ELEMENT -> P
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> Q
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> R
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> b
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> b
com.google.gson.internal.bind.TypeAdapters$1 -> com.a.a.b.a.z:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> a
    java.lang.Class read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$10 -> com.a.a.b.a.aa:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$11 -> com.a.a.b.a.ab:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$12 -> com.a.a.b.a.ac:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$13 -> com.a.a.b.a.ad:
    java.lang.String read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$14 -> com.a.a.b.a.ae:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$15 -> com.a.a.b.a.af:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$16 -> com.a.a.b.a.ag:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$17 -> com.a.a.b.a.ah:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$18 -> com.a.a.b.a.ai:
    java.net.URL read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$19 -> com.a.a.b.a.aj:
    java.net.URI read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$2 -> com.a.a.b.a.ak:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$20 -> com.a.a.b.a.al:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$21 -> com.a.a.b.a.am:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$22 -> com.a.a.b.a.an:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.a.a.b.a.ao:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> a
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> b
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$23 -> com.a.a.b.a.ap:
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$24 -> com.a.a.b.a.aq:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$25 -> com.a.a.b.a.ar:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$26 -> com.a.a.b.a.as:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$28 -> com.a.a.b.a.at:
    java.lang.Class val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.a.a.b.a.au:
    java.lang.Class val$unboxed -> a
    java.lang.Class val$boxed -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.a.a.b.a.av:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$30 -> com.a.a.b.a.aw:
    java.lang.Class val$base -> a
    java.lang.Class val$sub -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.a.a.b.a.ax:
    java.lang.Class val$clazz -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.a.a.b.a.ay:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.TypeAdapters$4 -> com.a.a.b.a.az:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$5 -> com.a.a.b.a.ba:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$6 -> com.a.a.b.a.bb:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$7 -> com.a.a.b.a.bc:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$8 -> com.a.a.b.a.bd:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$9 -> com.a.a.b.a.be:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.a.a.b.a.bf:
    java.util.Map nameToConstant -> a
    java.util.Map constantToName -> b
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.reflect.TypeToken -> com.a.a.c.a:
    java.lang.Class rawType -> a
    java.lang.reflect.Type type -> b
    int hashCode -> c
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> a
    java.lang.Class getRawType() -> a
    java.lang.reflect.Type getType() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> a
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> b
com.google.gson.stream.JsonReader -> com.a.a.d.a:
    char[] NON_EXECUTE_PREFIX -> a
    java.io.Reader in -> b
    boolean lenient -> c
    char[] buffer -> d
    int pos -> e
    int limit -> f
    int lineNumber -> g
    int lineStart -> h
    int peeked -> i
    long peekedLong -> j
    int peekedNumberLength -> k
    java.lang.String peekedString -> l
    int[] stack -> m
    int stackSize -> n
    void setLenient(boolean) -> a
    boolean isLenient() -> p
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    int doPeek() -> o
    int peekKeyword() -> q
    int peekNumber() -> r
    boolean isLiteral(char) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    java.lang.String nextQuotedValue(char) -> b
    java.lang.String nextUnquotedValue() -> s
    void skipQuotedValue(char) -> c
    void skipUnquotedValue() -> t
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    void push(int) -> a
    boolean fillBuffer(int) -> b
    int getLineNumber() -> u
    int getColumnNumber() -> v
    int nextNonWhitespace(boolean) -> b
    void checkLenient() -> w
    void skipToEndOfLine() -> x
    boolean skipTo(java.lang.String) -> a
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> y
    java.io.IOException syntaxError(java.lang.String) -> b
    void consumeNonExecutePrefix() -> z
    int access$000(com.google.gson.stream.JsonReader) -> a
    int access$100(com.google.gson.stream.JsonReader) -> b
    int access$002(com.google.gson.stream.JsonReader,int) -> a
    int access$200(com.google.gson.stream.JsonReader) -> c
    int access$300(com.google.gson.stream.JsonReader) -> d
com.google.gson.stream.JsonReader$1 -> com.a.a.d.b:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.stream.JsonToken -> com.a.a.d.c:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> a
    com.google.gson.stream.JsonToken END_ARRAY -> b
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> c
    com.google.gson.stream.JsonToken END_OBJECT -> d
    com.google.gson.stream.JsonToken NAME -> e
    com.google.gson.stream.JsonToken STRING -> f
    com.google.gson.stream.JsonToken NUMBER -> g
    com.google.gson.stream.JsonToken BOOLEAN -> h
    com.google.gson.stream.JsonToken NULL -> i
    com.google.gson.stream.JsonToken END_DOCUMENT -> j
    com.google.gson.stream.JsonToken[] $VALUES -> k
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.a.a.d.d:
    java.lang.String[] REPLACEMENT_CHARS -> a
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> b
    java.io.Writer out -> c
    int[] stack -> d
    int stackSize -> e
    java.lang.String indent -> f
    java.lang.String separator -> g
    boolean lenient -> h
    boolean htmlSafe -> i
    java.lang.String deferredName -> j
    boolean serializeNulls -> k
    void setLenient(boolean) -> b
    boolean isLenient() -> g
    boolean getSerializeNulls() -> h
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter open(int,java.lang.String) -> a
    com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> a
    void push(int) -> a
    int peek() -> a
    void replaceTop(int) -> b
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    void writeDeferredName() -> i
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> c
    void newline() -> j
    void beforeName() -> k
    void beforeValue(boolean) -> c
com.google.gson.stream.MalformedJsonException -> com.a.a.d.e:
com.handmark.pulltorefresh.library.ILoadingLayout -> com.handmark.pulltorefresh.library.a:
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
com.handmark.pulltorefresh.library.LoadingLayoutProxy -> com.handmark.pulltorefresh.library.b:
    java.util.HashSet mLoadingLayouts -> a
    void addLayout(com.handmark.pulltorefresh.library.internal.LoadingLayout) -> a
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
com.handmark.pulltorefresh.library.OverscrollHelper -> com.handmark.pulltorefresh.library.c:
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation -> a
    void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,boolean) -> a
    void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,int,boolean) -> a
    void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,int,int,float,boolean) -> a
    boolean isAndroidOverScrollEnabled(android.view.View) -> a
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation() -> a
com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase -> com.handmark.pulltorefresh.library.d:
    boolean mLastItemVisible -> b
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnLastItemVisibleListener mOnLastItemVisibleListener -> d
    android.view.View mEmptyView -> e
    com.handmark.pulltorefresh.library.internal.IndicatorLayout mIndicatorIvTop -> f
    com.handmark.pulltorefresh.library.internal.IndicatorLayout mIndicatorIvBottom -> g
    boolean mShowIndicator -> h
    boolean mScrollEmptyView -> i
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> j
    android.widget.FrameLayout$LayoutParams convertEmptyViewLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean getShowIndicator() -> getShowIndicator
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnLastItemVisibleListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnLastItemVisibleListener) -> setOnLastItemVisibleListener
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setScrollEmptyView(boolean) -> setScrollEmptyView
    void setShowIndicator(boolean) -> setShowIndicator
    void onPullToRefresh() -> a
    void onRefreshing(boolean) -> a
    void onReleaseToRefresh() -> b
    void onReset() -> c
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void updateUIForMode() -> f
    void addIndicatorViews() -> q
    boolean getShowIndicatorInternal() -> getShowIndicatorInternal
    boolean isFirstItemVisible() -> r
    boolean isLastItemVisible() -> s
    void removeIndicatorViews() -> t
    void updateIndicatorViewsVisibility() -> u
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> g
com.handmark.pulltorefresh.library.PullToRefreshBase -> com.handmark.pulltorefresh.library.e:
    int mTouchSlop -> b
    float mLastMotionX -> c
    float mLastMotionY -> d
    float mInitialMotionX -> e
    float mInitialMotionY -> f
    boolean mIsBeingDragged -> g
    com.handmark.pulltorefresh.library.PullToRefreshBase$State mState -> h
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mMode -> i
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mCurrentMode -> j
    android.view.View mRefreshableView -> a
    android.widget.FrameLayout mRefreshableViewWrapper -> k
    boolean mShowViewWhileRefreshing -> l
    boolean mScrollingWhileRefreshingEnabled -> m
    boolean mFilterTouchEvents -> n
    boolean mOverScrollEnabled -> o
    boolean mLayoutVisibilityChangesEnabled -> p
    android.view.animation.Interpolator mScrollAnimationInterpolator -> q
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle mLoadingAnimationStyle -> r
    com.handmark.pulltorefresh.library.internal.LoadingLayout mHeaderLayout -> s
    com.handmark.pulltorefresh.library.internal.LoadingLayout mFooterLayout -> t
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener mOnRefreshListener -> u
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2 mOnRefreshListener2 -> v
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnPullEventListener mOnPullEventListener -> w
    com.handmark.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable mCurrentSmoothScrollRunnable -> x
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation -> y
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$State -> z
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> A
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getCurrentMode() -> getCurrentMode
    boolean getFilterTouchEvents() -> getFilterTouchEvents
    com.handmark.pulltorefresh.library.ILoadingLayout getLoadingLayoutProxy() -> getLoadingLayoutProxy
    com.handmark.pulltorefresh.library.ILoadingLayout getLoadingLayoutProxy(boolean,boolean) -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getMode() -> getMode
    android.view.View getRefreshableView() -> getRefreshableView
    boolean getShowViewWhileRefreshing() -> getShowViewWhileRefreshing
    com.handmark.pulltorefresh.library.PullToRefreshBase$State getState() -> getState
    boolean isPullToRefreshEnabled() -> h
    boolean isPullToRefreshOverScrollEnabled() -> i
    boolean isRefreshing() -> j
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onRefreshComplete() -> k
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setScrollingWhileRefreshingEnabled(boolean) -> setScrollingWhileRefreshingEnabled
    void setDisableScrollingWhileRefreshing(boolean) -> setDisableScrollingWhileRefreshing
    void setFilterTouchEvents(boolean) -> setFilterTouchEvents
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setLongClickable(boolean) -> setLongClickable
    void setMode(com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setMode
    void setOnPullEventListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnPullEventListener) -> setOnPullEventListener
    void setOnRefreshListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener) -> setOnRefreshListener
    void setOnRefreshListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2) -> setOnRefreshListener
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setPullToRefreshEnabled(boolean) -> setPullToRefreshEnabled
    void setPullToRefreshOverScrollEnabled(boolean) -> setPullToRefreshOverScrollEnabled
    void setRefreshing(boolean) -> setRefreshing
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
    void setReleaseLabel(java.lang.CharSequence,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> a
    void setScrollAnimationInterpolator(android.view.animation.Interpolator) -> setScrollAnimationInterpolator
    void setShowViewWhileRefreshing(boolean) -> setShowViewWhileRefreshing
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    void setState(com.handmark.pulltorefresh.library.PullToRefreshBase$State,boolean[]) -> a
    void addViewInternal(android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    void addViewInternal(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    com.handmark.pulltorefresh.library.internal.LoadingLayout createLoadingLayout(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,android.content.res.TypedArray) -> a
    com.handmark.pulltorefresh.library.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> b
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
    void disableLoadingLayoutVisibilityChanges() -> l
    com.handmark.pulltorefresh.library.internal.LoadingLayout getFooterLayout() -> getFooterLayout
    int getFooterSize() -> getFooterSize
    com.handmark.pulltorefresh.library.internal.LoadingLayout getHeaderLayout() -> getHeaderLayout
    int getHeaderSize() -> getHeaderSize
    int getPullToRefreshScrollDuration() -> getPullToRefreshScrollDuration
    int getPullToRefreshScrollDurationLonger() -> getPullToRefreshScrollDurationLonger
    android.widget.FrameLayout getRefreshableViewWrapper() -> getRefreshableViewWrapper
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    boolean isReadyForPullEnd() -> e
    boolean isReadyForPullStart() -> d
    void onPtrRestoreInstanceState(android.os.Bundle) -> a
    void onPtrSaveInstanceState(android.os.Bundle) -> b
    void onPullToRefresh() -> a
    void onRefreshing(boolean) -> a
    void onReleaseToRefresh() -> b
    void onReset() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void refreshLoadingViewsSize() -> m
    void refreshRefreshableViewSize(int,int) -> a
    void setHeaderScroll(int) -> setHeaderScroll
    void smoothScrollTo(int) -> a
    void smoothScrollTo(int,com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener) -> a
    void updateUIForMode() -> f
    void addRefreshableView(android.content.Context,android.view.View) -> a
    void callRefreshListener() -> g
    void init(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPull() -> q
    void pullEvent() -> r
    android.widget.LinearLayout$LayoutParams getLoadingLayoutLayoutParams() -> getLoadingLayoutLayoutParams
    int getMaximumPullScroll() -> getMaximumPullScroll
    void smoothScrollTo(int,long) -> a
    void smoothScrollTo(int,long,long,com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener) -> a
    android.view.animation.Interpolator access$0(com.handmark.pulltorefresh.library.PullToRefreshBase) -> a
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation() -> n
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$State() -> o
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> p
    void access$4(com.handmark.pulltorefresh.library.PullToRefreshBase) -> b
com.handmark.pulltorefresh.library.PullToRefreshBase$1 -> com.handmark.pulltorefresh.library.f:
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> a
    void onSmoothScrollFinished() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$2 -> com.handmark.pulltorefresh.library.g:
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> a
    void run() -> run
com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle -> com.handmark.pulltorefresh.library.h:
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle ROTATE -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle FLIP -> b
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$AnimationStyle -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle[] ENUM$VALUES -> d
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle getDefault() -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle mapIntToValue(int) -> a
    com.handmark.pulltorefresh.library.internal.LoadingLayout createLoadingLayout(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation,android.content.res.TypedArray) -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle[] values() -> values
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$AnimationStyle() -> b
com.handmark.pulltorefresh.library.PullToRefreshBase$Mode -> com.handmark.pulltorefresh.library.i:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode DISABLED -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_FROM_START -> b
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_FROM_END -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode BOTH -> d
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode MANUAL_REFRESH_ONLY -> e
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_DOWN_TO_REFRESH -> f
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_UP_TO_REFRESH -> g
    int mIntValue -> h
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode[] ENUM$VALUES -> i
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mapIntToValue(int) -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getDefault() -> a
    boolean permitsPullToRefresh() -> b
    boolean showHeaderLoadingLayout() -> c
    boolean showFooterLoadingLayout() -> d
    int getIntValue() -> e
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode[] values() -> values
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode valueOf(java.lang.String) -> valueOf
com.handmark.pulltorefresh.library.PullToRefreshBase$OnLastItemVisibleListener -> com.handmark.pulltorefresh.library.j:
    void onLastItemVisible() -> onLastItemVisible
com.handmark.pulltorefresh.library.PullToRefreshBase$OnPullEventListener -> com.handmark.pulltorefresh.library.k:
    void onPullEvent(com.handmark.pulltorefresh.library.PullToRefreshBase,com.handmark.pulltorefresh.library.PullToRefreshBase$State,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener -> com.handmark.pulltorefresh.library.l:
    void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2 -> com.handmark.pulltorefresh.library.m:
    void onPullDownToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullDownToRefresh
    void onPullUpToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullUpToRefresh
com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener -> com.handmark.pulltorefresh.library.n:
    void onSmoothScrollFinished() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation -> com.handmark.pulltorefresh.library.o:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation VERTICAL -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation HORIZONTAL -> b
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation[] ENUM$VALUES -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation[] values() -> values
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation valueOf(java.lang.String) -> valueOf
com.handmark.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable -> com.handmark.pulltorefresh.library.p:
    android.view.animation.Interpolator mInterpolator -> b
    int mScrollToY -> c
    int mScrollFromY -> d
    long mDuration -> e
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener mListener -> f
    boolean mContinueRunning -> g
    long mStartTime -> h
    int mCurrentY -> i
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> a
    void run() -> run
    void stop() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$State -> com.handmark.pulltorefresh.library.q:
    com.handmark.pulltorefresh.library.PullToRefreshBase$State RESET -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$State PULL_TO_REFRESH -> b
    com.handmark.pulltorefresh.library.PullToRefreshBase$State RELEASE_TO_REFRESH -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$State REFRESHING -> d
    com.handmark.pulltorefresh.library.PullToRefreshBase$State MANUAL_REFRESHING -> e
    com.handmark.pulltorefresh.library.PullToRefreshBase$State OVERSCROLLING -> f
    int mIntValue -> g
    com.handmark.pulltorefresh.library.PullToRefreshBase$State[] ENUM$VALUES -> h
    com.handmark.pulltorefresh.library.PullToRefreshBase$State mapIntToValue(int) -> a
    int getIntValue() -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$State[] values() -> values
    com.handmark.pulltorefresh.library.PullToRefreshBase$State valueOf(java.lang.String) -> valueOf
com.handmark.pulltorefresh.library.PullToRefreshListView -> com.handmark.pulltorefresh.library.PullToRefreshListView:
    com.handmark.pulltorefresh.library.internal.LoadingLayout mHeaderLoadingView -> b
    com.handmark.pulltorefresh.library.internal.LoadingLayout mFooterLoadingView -> c
    android.widget.FrameLayout mLvFooterLoadingFrame -> d
    boolean mListViewExtrasEnabled -> e
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> f
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    void onRefreshing(boolean) -> a
    void onReset() -> c
    com.handmark.pulltorefresh.library.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> b
    android.widget.ListView createListView(android.content.Context,android.util.AttributeSet) -> b
    android.widget.ListView createRefreshableView(android.content.Context,android.util.AttributeSet) -> c
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
    android.widget.FrameLayout access$1(com.handmark.pulltorefresh.library.PullToRefreshListView) -> a
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> q
com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListView -> com.handmark.pulltorefresh.library.r:
    boolean mAddedLvFooter -> b
    com.handmark.pulltorefresh.library.PullToRefreshListView this$0 -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListViewSDK9 -> com.handmark.pulltorefresh.library.s:
    com.handmark.pulltorefresh.library.PullToRefreshListView this$0 -> b
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.R -> com.handmark.pulltorefresh.library.t:
com.handmark.pulltorefresh.library.R$anim -> com.handmark.pulltorefresh.library.u:
    int slide_in_from_bottom -> slide_in_from_bottom
    int slide_in_from_top -> slide_in_from_top
    int slide_out_to_bottom -> slide_out_to_bottom
    int slide_out_to_top -> slide_out_to_top
com.handmark.pulltorefresh.library.R$dimen -> com.handmark.pulltorefresh.library.v:
    int header_footer_left_right_padding -> header_footer_left_right_padding
    int header_footer_top_bottom_padding -> header_footer_top_bottom_padding
    int indicator_corner_radius -> indicator_corner_radius
    int indicator_internal_padding -> indicator_internal_padding
    int indicator_right_padding -> indicator_right_padding
com.handmark.pulltorefresh.library.R$drawable -> com.handmark.pulltorefresh.library.w:
    int default_ptr_flip -> default_ptr_flip
    int default_ptr_rotate -> default_ptr_rotate
    int indicator_arrow -> indicator_arrow
    int indicator_bg_bottom -> indicator_bg_bottom
    int indicator_bg_top -> indicator_bg_top
com.handmark.pulltorefresh.library.R$id -> com.handmark.pulltorefresh.library.x:
    int both -> both
    int disabled -> disabled
    int fl_inner -> fl_inner
    int flip -> flip
    int gridview -> gridview
    int manualOnly -> manualOnly
    int pullDownFromTop -> pullDownFromTop
    int pullFromEnd -> pullFromEnd
    int pullFromStart -> pullFromStart
    int pullUpFromBottom -> pullUpFromBottom
    int pull_to_refresh_image -> pull_to_refresh_image
    int pull_to_refresh_progress -> pull_to_refresh_progress
    int pull_to_refresh_sub_text -> pull_to_refresh_sub_text
    int pull_to_refresh_text -> pull_to_refresh_text
    int rotate -> rotate
    int scrollview -> scrollview
    int webview -> webview
com.handmark.pulltorefresh.library.R$layout -> com.handmark.pulltorefresh.library.y:
    int pull_to_refresh_header_horizontal -> pull_to_refresh_header_horizontal
    int pull_to_refresh_header_vertical -> pull_to_refresh_header_vertical
com.handmark.pulltorefresh.library.R$string -> com.handmark.pulltorefresh.library.z:
    int pull_to_refresh_from_bottom_pull_label -> pull_to_refresh_from_bottom_pull_label
    int pull_to_refresh_from_bottom_refreshing_label -> pull_to_refresh_from_bottom_refreshing_label
    int pull_to_refresh_from_bottom_release_label -> pull_to_refresh_from_bottom_release_label
    int pull_to_refresh_pull_label -> pull_to_refresh_pull_label
    int pull_to_refresh_refreshing_label -> pull_to_refresh_refreshing_label
    int pull_to_refresh_release_label -> pull_to_refresh_release_label
com.handmark.pulltorefresh.library.R$styleable -> com.handmark.pulltorefresh.library.aa:
    int[] PullToRefresh -> PullToRefresh
    int PullToRefresh_ptrAdapterViewBackground -> PullToRefresh_ptrAdapterViewBackground
    int PullToRefresh_ptrAnimationStyle -> PullToRefresh_ptrAnimationStyle
    int PullToRefresh_ptrDrawable -> PullToRefresh_ptrDrawable
    int PullToRefresh_ptrDrawableBottom -> PullToRefresh_ptrDrawableBottom
    int PullToRefresh_ptrDrawableEnd -> PullToRefresh_ptrDrawableEnd
    int PullToRefresh_ptrDrawableStart -> PullToRefresh_ptrDrawableStart
    int PullToRefresh_ptrDrawableTop -> PullToRefresh_ptrDrawableTop
    int PullToRefresh_ptrHeaderBackground -> PullToRefresh_ptrHeaderBackground
    int PullToRefresh_ptrHeaderSubTextColor -> PullToRefresh_ptrHeaderSubTextColor
    int PullToRefresh_ptrHeaderTextAppearance -> PullToRefresh_ptrHeaderTextAppearance
    int PullToRefresh_ptrHeaderTextColor -> PullToRefresh_ptrHeaderTextColor
    int PullToRefresh_ptrListViewExtrasEnabled -> PullToRefresh_ptrListViewExtrasEnabled
    int PullToRefresh_ptrMode -> PullToRefresh_ptrMode
    int PullToRefresh_ptrOverScroll -> PullToRefresh_ptrOverScroll
    int PullToRefresh_ptrRefreshableViewBackground -> PullToRefresh_ptrRefreshableViewBackground
    int PullToRefresh_ptrRotateDrawableWhilePulling -> PullToRefresh_ptrRotateDrawableWhilePulling
    int PullToRefresh_ptrScrollingWhileRefreshingEnabled -> PullToRefresh_ptrScrollingWhileRefreshingEnabled
    int PullToRefresh_ptrShowIndicator -> PullToRefresh_ptrShowIndicator
    int PullToRefresh_ptrSubHeaderTextAppearance -> PullToRefresh_ptrSubHeaderTextAppearance
com.handmark.pulltorefresh.library.internal.EmptyViewMethodAccessor -> com.handmark.pulltorefresh.library.a.a:
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.handmark.pulltorefresh.library.internal.FlipLoadingLayout -> com.handmark.pulltorefresh.library.a.b:
    android.view.animation.Animation mRotateAnimation -> f
    android.view.animation.Animation mResetRotateAnimation -> g
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> h
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void pullToRefreshImpl() -> a
    void refreshingImpl() -> b
    void releaseToRefreshImpl() -> c
    void resetImpl() -> d
    int getDefaultDrawableResId() -> getDefaultDrawableResId
    float getDrawableRotationAngle() -> getDrawableRotationAngle
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> e
com.handmark.pulltorefresh.library.internal.IndicatorLayout -> com.handmark.pulltorefresh.library.a.c:
    android.view.animation.Animation mInAnim -> a
    android.view.animation.Animation mOutAnim -> b
    android.widget.ImageView mArrowImageView -> c
    android.view.animation.Animation mRotateAnimation -> d
    android.view.animation.Animation mResetRotateAnimation -> e
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> f
    boolean isVisible() -> a
    void hide() -> b
    void show() -> c
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void releaseToRefresh() -> d
    void pullToRefresh() -> e
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> f
com.handmark.pulltorefresh.library.internal.LoadingLayout -> com.handmark.pulltorefresh.library.a.d:
    android.view.animation.Interpolator ANIMATION_INTERPOLATOR -> a
    android.widget.FrameLayout mInnerLayout -> f
    android.widget.ImageView mHeaderImage -> b
    android.widget.ProgressBar mHeaderProgress -> c
    boolean mUseIntrinsicAnimation -> g
    android.widget.TextView mHeaderText -> h
    android.widget.TextView mSubHeaderText -> i
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mMode -> d
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation mScrollDirection -> e
    java.lang.CharSequence mPullLabel -> j
    java.lang.CharSequence mRefreshingLabel -> k
    java.lang.CharSequence mReleaseLabel -> l
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation -> m
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> n
    void setHeight(int) -> setHeight
    void setWidth(int) -> setWidth
    int getContentSize() -> getContentSize
    void hideAllViews() -> f
    void onPull(float) -> b
    void pullToRefresh() -> g
    void refreshing() -> h
    void releaseToRefresh() -> i
    void reset() -> j
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
    void setTextTypeface(android.graphics.Typeface) -> setTextTypeface
    void showInvisibleViews() -> k
    int getDefaultDrawableResId() -> getDefaultDrawableResId
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void pullToRefreshImpl() -> a
    void refreshingImpl() -> b
    void releaseToRefreshImpl() -> c
    void resetImpl() -> d
    void setSubHeaderText(java.lang.CharSequence) -> setSubHeaderText
    void setSubTextAppearance(int) -> setSubTextAppearance
    void setSubTextColor(android.content.res.ColorStateList) -> setSubTextColor
    void setTextAppearance(int) -> setTextAppearance
    void setTextColor(android.content.res.ColorStateList) -> setTextColor
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation() -> l
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> m
com.handmark.pulltorefresh.library.internal.RotateLoadingLayout -> com.handmark.pulltorefresh.library.a.e:
    android.view.animation.Animation mRotateAnimation -> f
    android.graphics.Matrix mHeaderImageMatrix -> g
    float mRotationPivotX -> h
    float mRotationPivotY -> i
    boolean mRotateDrawableWhilePulling -> j
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void refreshingImpl() -> b
    void resetImpl() -> d
    void resetImageRotation() -> e
    void pullToRefreshImpl() -> a
    void releaseToRefreshImpl() -> c
    int getDefaultDrawableResId() -> getDefaultDrawableResId
com.handmark.pulltorefresh.library.internal.Utils -> com.handmark.pulltorefresh.library.a.f:
    void warnDeprecation(java.lang.String,java.lang.String) -> a
com.handmark.pulltorefresh.library.internal.ViewCompat -> com.handmark.pulltorefresh.library.a.g:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> a
com.handmark.pulltorefresh.library.internal.ViewCompat$SDK16 -> com.handmark.pulltorefresh.library.a.h:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> a
com.hongxiangge.image.DiskLruCache -> com.b.a.a:
    java.io.File mCacheDir -> a
    int cacheSize -> b
    int cacheByteSize -> c
    int maxCacheItemSize -> d
    long maxCacheByteSize -> e
    android.graphics.Bitmap$CompressFormat mCompressFormat -> f
    int mCompressQuality -> g
    int IO_BUFFER_SIZE -> h
    java.util.Map mLinkedHashMap -> i
    java.io.FilenameFilter cacheFileFilter -> j
    com.hongxiangge.image.DiskLruCache openCache(android.content.Context,java.io.File,long) -> a
    void put(java.lang.String,android.graphics.Bitmap) -> a
    void put(java.lang.String,java.lang.String) -> a
    void flushCache() -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    java.io.File getDiskCacheDir(android.content.Context,java.lang.String) -> a
    java.lang.String createFilePath(java.io.File,java.lang.String) -> a
    boolean writeBitmapToFile(android.graphics.Bitmap,java.lang.String) -> a
com.hongxiangge.image.DiskLruCache$1 -> com.b.a.b:
    boolean accept(java.io.File,java.lang.String) -> accept
com.hongxiangge.image.ImageManage -> com.b.a.c:
    java.lang.String[] DRA -> a
    android.graphics.Bitmap createFramedPhoto(int,int,android.graphics.Bitmap,float,android.content.Context) -> a
com.hongxiangge.image.ImageManager2 -> com.b.a.d:
    com.hongxiangge.image.ImageManager2 imageManager -> g
    android.support.v4.util.LruCache mMemoryCache -> a
    android.support.v4.util.LruCache mMemoryCacheRound -> b
    com.hongxiangge.image.DiskLruCache mDiskCache -> c
    java.util.Stack mImageQueue -> h
    java.util.Queue mRequestQueue -> i
    android.os.Handler mImageLoaderHandler -> j
    boolean mImageLoaderIdle -> k
    boolean isFromNet -> l
    boolean isTranFromUser -> d
    com.hxgwx.www.HongxianggeApplication myapp -> m
    boolean isUserLeft_icon -> e
    boolean isRound -> f
    android.content.Context context -> n
    android.os.Handler mImageManagerHandler -> o
    com.hongxiangge.image.ImageManager2$OndwonImage setOnDwonImage -> p
    com.hongxiangge.image.ImageManager2$OndwonListenear setOndwonListenear -> q
    com.hongxiangge.image.ImageManager2 from(android.content.Context,boolean) -> a
    void displayImage(android.widget.ImageView,java.lang.String,int) -> a
    void queueImage(com.hongxiangge.image.ImageManager2$ImageRef) -> a
    void sendRequest() -> a
    void setImageBitmap(android.widget.ImageView,android.graphics.Bitmap,boolean) -> a
    byte[] loadByteArrayFromNetwork(java.lang.String) -> b
    java.lang.String urlToFilePath(java.lang.String) -> a
    void setSetOndwonListenear(com.hongxiangge.image.ImageManager2$OndwonListenear) -> a
    com.hongxiangge.image.ImageManager2$OndwonListenear access$0(com.hongxiangge.image.ImageManager2) -> a
    java.util.Queue access$1(com.hongxiangge.image.ImageManager2) -> b
    com.hongxiangge.image.ImageManager2$OndwonImage access$2(com.hongxiangge.image.ImageManager2) -> c
    boolean access$3(com.hongxiangge.image.ImageManager2) -> d
    void access$4(com.hongxiangge.image.ImageManager2,android.widget.ImageView,android.graphics.Bitmap,boolean) -> a
    void access$5(com.hongxiangge.image.ImageManager2,boolean) -> a
    void access$6(com.hongxiangge.image.ImageManager2,boolean) -> b
    android.os.Handler access$7(com.hongxiangge.image.ImageManager2) -> e
    void access$8(com.hongxiangge.image.ImageManager2) -> f
    android.content.Context access$9(com.hongxiangge.image.ImageManager2) -> g
    byte[] access$10(com.hongxiangge.image.ImageManager2,java.lang.String) -> a
    android.os.Handler access$11(com.hongxiangge.image.ImageManager2) -> h
com.hongxiangge.image.ImageManager2$1 -> com.b.a.e:
    com.hongxiangge.image.ImageManager2 this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.hongxiangge.image.ImageManager2$2 -> com.b.a.f:
    com.hongxiangge.image.ImageManager2 this$0 -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> b
com.hongxiangge.image.ImageManager2$3 -> com.b.a.g:
    com.hongxiangge.image.ImageManager2 this$0 -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> b
com.hongxiangge.image.ImageManager2$ImageLoaderHandler -> com.b.a.h:
    com.hongxiangge.image.ImageManager2 this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.hongxiangge.image.ImageManager2$ImageRef -> com.b.a.i:
    android.widget.ImageView imageView -> a
    java.lang.String url -> b
    java.lang.String filePath -> c
    int resId -> d
    int width -> e
    int height -> f
    com.hongxiangge.image.ImageManager2 this$0 -> g
com.hongxiangge.image.ImageManager2$OndwonImage -> com.b.a.j:
    void setOnDwonBitMap(android.graphics.Bitmap,java.lang.String) -> a
com.hongxiangge.image.ImageManager2$OndwonListenear -> com.b.a.k:
    void setStateListenear(boolean) -> setStateListenear
com.hongxiangge.image.MD5 -> com.b.a.l:
    java.lang.String Md5(java.lang.String) -> a
com.hxgwx.www.HongxianggeApplication -> com.hxgwx.www.HongxianggeApplication:
    java.util.Map errorCodeDescript -> b
    java.util.Map httpUrl -> c
    java.lang.String domain -> d
    java.lang.String phone_id -> e
    java.lang.String appkey -> f
    org.apache.http.client.HttpClient httpClient -> g
    boolean isLogin -> a
    com.hxgwx.www.bean.UserLogin user -> h
    java.lang.String getDomain() -> a
    java.lang.String getDescriptionByCode(java.lang.String) -> a
    void initCodeDescript() -> f
    void initURL() -> g
    void init() -> h
    void initDomain() -> i
    void readPhoneId() -> j
    void onCreate() -> onCreate
    java.util.Map getHttpUrl() -> b
    java.lang.String getAppkey() -> c
    void onLowMemory() -> onLowMemory
    void onTerminate() -> onTerminate
    org.apache.http.client.HttpClient createHttpClient() -> k
    void shutdownHttpClient() -> l
    org.apache.http.client.HttpClient getHttpClient() -> d
    com.hxgwx.www.bean.UserLogin getUser() -> e
    void setUser(com.hxgwx.www.bean.UserLogin) -> a
    org.apache.http.client.HttpClient access$0(com.hxgwx.www.HongxianggeApplication) -> a
    void access$1(com.hxgwx.www.HongxianggeApplication,org.apache.http.client.HttpClient) -> a
    void access$2(com.hxgwx.www.HongxianggeApplication) -> b
    void access$3(com.hxgwx.www.HongxianggeApplication) -> c
    void access$4(com.hxgwx.www.HongxianggeApplication) -> d
    void access$5(com.hxgwx.www.HongxianggeApplication) -> e
com.hxgwx.www.HongxianggeApplication$1 -> com.hxgwx.www.a:
    com.hxgwx.www.HongxianggeApplication this$0 -> a
    void run() -> run
com.hxgwx.www.R -> com.hxgwx.www.R:
com.hxgwx.www.R$anim -> com.hxgwx.www.R$anim:
    int slide_in_from_bottom -> slide_in_from_bottom
    int slide_in_from_top -> slide_in_from_top
    int slide_out_to_bottom -> slide_out_to_bottom
    int slide_out_to_top -> slide_out_to_top
com.hxgwx.www.R$attr -> com.hxgwx.www.R$attr:
    int behindOffset -> behindOffset
    int behindScrollScale -> behindScrollScale
    int behindWidth -> behindWidth
    int fadeDegree -> fadeDegree
    int fadeEnabled -> fadeEnabled
    int mode -> mode
    int ptrAdapterViewBackground -> ptrAdapterViewBackground
    int ptrAnimationStyle -> ptrAnimationStyle
    int ptrDrawable -> ptrDrawable
    int ptrDrawableBottom -> ptrDrawableBottom
    int ptrDrawableEnd -> ptrDrawableEnd
    int ptrDrawableStart -> ptrDrawableStart
    int ptrDrawableTop -> ptrDrawableTop
    int ptrHeaderBackground -> ptrHeaderBackground
    int ptrHeaderSubTextColor -> ptrHeaderSubTextColor
    int ptrHeaderTextAppearance -> ptrHeaderTextAppearance
    int ptrHeaderTextColor -> ptrHeaderTextColor
    int ptrListViewExtrasEnabled -> ptrListViewExtrasEnabled
    int ptrMode -> ptrMode
    int ptrOverScroll -> ptrOverScroll
    int ptrRefreshableViewBackground -> ptrRefreshableViewBackground
    int ptrRotateDrawableWhilePulling -> ptrRotateDrawableWhilePulling
    int ptrScrollingWhileRefreshingEnabled -> ptrScrollingWhileRefreshingEnabled
    int ptrShowIndicator -> ptrShowIndicator
    int ptrSubHeaderTextAppearance -> ptrSubHeaderTextAppearance
    int selectorDrawable -> selectorDrawable
    int selectorEnabled -> selectorEnabled
    int shadowDrawable -> shadowDrawable
    int shadowWidth -> shadowWidth
    int touchModeAbove -> touchModeAbove
    int touchModeBehind -> touchModeBehind
    int viewAbove -> viewAbove
    int viewBehind -> viewBehind
com.hxgwx.www.R$color -> com.hxgwx.www.R$color:
    int Black -> Black
    int Blue -> Blue
    int DarkRed -> DarkRed
    int Gray -> Gray
    int GrayTwo -> GrayTwo
    int Gray_footertext -> Gray_footertext
    int Green -> Green
    int Red -> Red
    int White -> White
    int Yellow -> Yellow
    int about_text2 -> about_text2
    int blue_style -> blue_style
    int drop_down_list_footer_font_color -> drop_down_list_footer_font_color
    int drop_down_list_header_font_color -> drop_down_list_header_font_color
    int drop_down_list_header_second_font_color -> drop_down_list_header_second_font_color
    int font_net_menu_color -> font_net_menu_color
    int footerbac -> footerbac
    int lightblack -> lightblack
    int main_blue_style -> main_blue_style
    int orange -> orange
    int search_key_color -> search_key_color
    int siding_bcolor -> siding_bcolor
    int tb_munion_item_force -> tb_munion_item_force
    int transparent -> transparent
    int version_text -> version_text
com.hxgwx.www.R$dimen -> com.hxgwx.www.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int dp100 -> dp100
    int dp120 -> dp120
    int dp130 -> dp130
    int dp140 -> dp140
    int dp150 -> dp150
    int dp180 -> dp180
    int dp20 -> dp20
    int dp200 -> dp200
    int dp22 -> dp22
    int dp220 -> dp220
    int dp25 -> dp25
    int dp250 -> dp250
    int dp30 -> dp30
    int dp300 -> dp300
    int dp350 -> dp350
    int dp40 -> dp40
    int dp50 -> dp50
    int header_footer_left_right_padding -> header_footer_left_right_padding
    int header_footer_top_bottom_padding -> header_footer_top_bottom_padding
    int indicator_corner_radius -> indicator_corner_radius
    int indicator_internal_padding -> indicator_internal_padding
    int indicator_right_padding -> indicator_right_padding
    int sp13 -> sp13
    int sp30 -> sp30
    int start_pic_size_h -> start_pic_size_h
    int start_pic_size_w -> start_pic_size_w
    int text_size_14 -> text_size_14
    int text_size_20 -> text_size_20
com.hxgwx.www.R$drawable -> com.hxgwx.www.R$drawable:
    int bg_nopic -> bg_nopic
    int bottom_input_text_view_bg -> bottom_input_text_view_bg
    int choice_color_bg -> choice_color_bg
    int default_ptr_flip -> default_ptr_flip
    int default_ptr_rotate -> default_ptr_rotate
    int editor_normal -> editor_normal
    int has_account -> has_account
    int history -> history
    int ic_launcher -> ic_launcher
    int ic_launcher_web -> ic_launcher_web
    int icon_book -> icon_book
    int indicator_arrow -> indicator_arrow
    int indicator_bg_bottom -> indicator_bg_bottom
    int indicator_bg_top -> indicator_bg_top
    int layout_progress_style -> layout_progress_style
    int loading -> loading
    int login -> login
    int logo -> logo
    int my -> my
    int navi_back_icon -> navi_back_icon
    int register -> register
    int search -> search
    int sendfloow -> sendfloow
    int shadow -> shadow
    int tb_munion_icon -> tb_munion_icon
    int tb_munion_item_selector -> tb_munion_item_selector
    int top -> top
    int tuijian -> tuijian
    int type_item_bg -> type_item_bg
    int type_item_bg_normal -> type_item_bg_normal
    int type_item_bg_select -> type_item_bg_select
    int umeng_common_gradient_green -> umeng_common_gradient_green
    int umeng_common_gradient_orange -> umeng_common_gradient_orange
    int umeng_common_gradient_red -> umeng_common_gradient_red
    int umeng_update_btn_check_off_focused_holo_light -> umeng_update_btn_check_off_focused_holo_light
    int umeng_update_btn_check_off_holo_light -> umeng_update_btn_check_off_holo_light
    int umeng_update_btn_check_off_pressed_holo_light -> umeng_update_btn_check_off_pressed_holo_light
    int umeng_update_btn_check_on_focused_holo_light -> umeng_update_btn_check_on_focused_holo_light
    int umeng_update_btn_check_on_holo_light -> umeng_update_btn_check_on_holo_light
    int umeng_update_btn_check_on_pressed_holo_light -> umeng_update_btn_check_on_pressed_holo_light
    int umeng_update_button_cancel_bg_focused -> umeng_update_button_cancel_bg_focused
    int umeng_update_button_cancel_bg_normal -> umeng_update_button_cancel_bg_normal
    int umeng_update_button_cancel_bg_selector -> umeng_update_button_cancel_bg_selector
    int umeng_update_button_cancel_bg_tap -> umeng_update_button_cancel_bg_tap
    int umeng_update_button_check_selector -> umeng_update_button_check_selector
    int umeng_update_button_close_bg_selector -> umeng_update_button_close_bg_selector
    int umeng_update_button_ok_bg_focused -> umeng_update_button_ok_bg_focused
    int umeng_update_button_ok_bg_normal -> umeng_update_button_ok_bg_normal
    int umeng_update_button_ok_bg_selector -> umeng_update_button_ok_bg_selector
    int umeng_update_button_ok_bg_tap -> umeng_update_button_ok_bg_tap
    int umeng_update_close_bg_normal -> umeng_update_close_bg_normal
    int umeng_update_close_bg_tap -> umeng_update_close_bg_tap
    int umeng_update_dialog_bg -> umeng_update_dialog_bg
    int umeng_update_title_bg -> umeng_update_title_bg
    int umeng_update_wifi_disable -> umeng_update_wifi_disable
    int write_airtic -> write_airtic
com.hxgwx.www.R$id -> com.hxgwx.www.R$id:
    int EditText04 -> EditText04
    int adLayout -> adLayout
    int ad_image -> ad_image
    int book_img -> book_img
    int both -> both
    int bt_add_book -> bt_add_book
    int bt_cancel -> bt_cancel
    int bt_check -> bt_check
    int bt_choice_bg -> bt_choice_bg
    int bt_clear -> bt_clear
    int bt_login -> bt_login
    int bt_register -> bt_register
    int bt_save -> bt_save
    int bt_send -> bt_send
    int bt_setting_font -> bt_setting_font
    int bt_type -> bt_type
    int bt_typeSeting -> bt_typeSeting
    int bt_update -> bt_update
    int button1 -> button1
    int button2 -> button2
    int disabled -> disabled
    int et_content -> et_content
    int et_input_pwd -> et_input_pwd
    int et_input_user -> et_input_user
    int et_search -> et_search
    int et_title -> et_title
    int et_user_name -> et_user_name
    int et_user_pwd -> et_user_pwd
    int et_user_uname -> et_user_uname
    int et_user_ypwd -> et_user_ypwd
    int fl_inner -> fl_inner
    int flip -> flip
    int fullscreen -> fullscreen
    int gridview -> gridview
    int gv_color -> gv_color
    int hs_type_ -> hs_type_
    int ic_user_icon -> ic_user_icon
    int imageView1 -> imageView1
    int iv_history -> iv_history
    int iv_mycenter -> iv_mycenter
    int left -> left
    int ll_set -> ll_set
    int ll_tb_fabiao -> ll_tb_fabiao
    int ll_tb_paihang -> ll_tb_paihang
    int ll_tb_sousuo -> ll_tb_sousuo
    int ll_tb_tuijian -> ll_tb_tuijian
    int ll_user_login -> ll_user_login
    int ll_user_unlogin -> ll_user_unlogin
    int loading -> loading
    int lv_search_mian -> lv_search_mian
    int lv_types -> lv_types
    int main_footer -> main_footer
    int main_fragment_content -> main_fragment_content
    int manualOnly -> manualOnly
    int margin -> margin
    int menu_fragment -> menu_fragment
    int mian_head_ -> mian_head_
    int placeholder -> placeholder
    int plv_arclist -> plv_arclist
    int plv_book -> plv_book
    int plv_history -> plv_history
    int plv_main_list -> plv_main_list
    int plv_my_public -> plv_my_public
    int progressBar1 -> progressBar1
    int progress_frame -> progress_frame
    int promoter_frame -> promoter_frame
    int pullDownFromTop -> pullDownFromTop
    int pullFromEnd -> pullFromEnd
    int pullFromStart -> pullFromStart
    int pullUpFromBottom -> pullUpFromBottom
    int pull_to_refresh_image -> pull_to_refresh_image
    int pull_to_refresh_progress -> pull_to_refresh_progress
    int pull_to_refresh_sub_text -> pull_to_refresh_sub_text
    int pull_to_refresh_text -> pull_to_refresh_text
    int radioGroup1 -> radioGroup1
    int rd_girl -> rd_girl
    int rd_male -> rd_male
    int reading_history -> reading_history
    int right -> right
    int rotate -> rotate
    int sb_font_change -> sb_font_change
    int sc_content -> sc_content
    int scrollview -> scrollview
    int selected_view -> selected_view
    int slidingmenumain -> slidingmenumain
    int status_msg -> status_msg
    int tableRow1 -> tableRow1
    int textView1 -> textView1
    int textView2 -> textView2
    int textView3 -> textView3
    int textView4 -> textView4
    int top -> top
    int tv_about -> tv_about
    int tv_artic_author -> tv_artic_author
    int tv_artic_time -> tv_artic_time
    int tv_ask_pwd -> tv_ask_pwd
    int tv_c_title -> tv_c_title
    int tv_click -> tv_click
    int tv_content_title -> tv_content_title
    int tv_dec -> tv_dec
    int tv_descript -> tv_descript
    int tv_fabiao -> tv_fabiao
    int tv_h_author -> tv_h_author
    int tv_h_name -> tv_h_name
    int tv_h_time -> tv_h_time
    int tv_paihang -> tv_paihang
    int tv_set -> tv_set
    int tv_sousuo -> tv_sousuo
    int tv_title -> tv_title
    int tv_tuijian -> tv_tuijian
    int tv_type -> tv_type
    int tv_uname -> tv_uname
    int tv_user_name -> tv_user_name
    int tv_user_score -> tv_user_score
    int tv_version -> tv_version
    int tv_write_new -> tv_write_new
    int tv_write_old -> tv_write_old
    int umeng_common_icon_view -> umeng_common_icon_view
    int umeng_common_notification -> umeng_common_notification
    int umeng_common_notification_controller -> umeng_common_notification_controller
    int umeng_common_progress_bar -> umeng_common_progress_bar
    int umeng_common_progress_text -> umeng_common_progress_text
    int umeng_common_rich_notification_cancel -> umeng_common_rich_notification_cancel
    int umeng_common_rich_notification_continue -> umeng_common_rich_notification_continue
    int umeng_common_title -> umeng_common_title
    int umeng_update_content -> umeng_update_content
    int umeng_update_frame -> umeng_update_frame
    int umeng_update_id_cancel -> umeng_update_id_cancel
    int umeng_update_id_check -> umeng_update_id_check
    int umeng_update_id_close -> umeng_update_id_close
    int umeng_update_id_ignore -> umeng_update_id_ignore
    int umeng_update_id_ok -> umeng_update_id_ok
    int umeng_update_wifi_indicator -> umeng_update_wifi_indicator
    int user_center -> user_center
    int v_color_bg -> v_color_bg
    int webview -> webview
    int wv_content -> wv_content
com.hxgwx.www.R$layout -> com.hxgwx.www.R$layout:
    int about -> about
    int activity_main -> activity_main
    int arc_types -> arc_types
    int arclist -> arclist
    int artic_read -> artic_read
    int artic_writer -> artic_writer
    int choice_color_bg -> choice_color_bg
    int choice_color_item -> choice_color_item
    int empty_list -> empty_list
    int layout_load_pb -> layout_load_pb
    int loading -> loading
    int login -> login
    int main_content -> main_content
    int main_content_list_item -> main_content_list_item
    int main_footer -> main_footer
    int main_fragment -> main_fragment
    int main_head -> main_head
    int menu_fragment -> menu_fragment
    int pull_to_refresh_header_horizontal -> pull_to_refresh_header_horizontal
    int pull_to_refresh_header_vertical -> pull_to_refresh_header_vertical
    int read_history_item -> read_history_item
    int reading_history -> reading_history
    int register -> register
    int search -> search
    int slidingmenumain -> slidingmenumain
    int tb_munion_aditem -> tb_munion_aditem
    int tb_munion_adview -> tb_munion_adview
    int types_item -> types_item
    int umeng_common_download_notification -> umeng_common_download_notification
    int umeng_update_dialog -> umeng_update_dialog
    int update_version -> update_version
    int user_center -> user_center
    int writer_fragment -> writer_fragment
com.hxgwx.www.R$string -> com.hxgwx.www.R$string:
    int UMAppUpdate -> UMAppUpdate
    int UMBreak_Network -> UMBreak_Network
    int UMDialog_InstallAPK -> UMDialog_InstallAPK
    int UMGprsCondition -> UMGprsCondition
    int UMIgnore -> UMIgnore
    int UMNewVersion -> UMNewVersion
    int UMNotNow -> UMNotNow
    int UMTargetSize -> UMTargetSize
    int UMToast_IsUpdating -> UMToast_IsUpdating
    int UMUpdateCheck -> UMUpdateCheck
    int UMUpdateContent -> UMUpdateContent
    int UMUpdateNow -> UMUpdateNow
    int UMUpdateSize -> UMUpdateSize
    int UMUpdateTitle -> UMUpdateTitle
    int action_settings -> action_settings
    int app_name -> app_name
    int hello_world -> hello_world
    int pull_to_refresh_from_bottom_pull_label -> pull_to_refresh_from_bottom_pull_label
    int pull_to_refresh_from_bottom_refreshing_label -> pull_to_refresh_from_bottom_refreshing_label
    int pull_to_refresh_from_bottom_release_label -> pull_to_refresh_from_bottom_release_label
    int pull_to_refresh_pull_label -> pull_to_refresh_pull_label
    int pull_to_refresh_refreshing_label -> pull_to_refresh_refreshing_label
    int pull_to_refresh_release_label -> pull_to_refresh_release_label
    int tb_munion_tip_download_prefix -> tb_munion_tip_download_prefix
    int umeng_common_action_cancel -> umeng_common_action_cancel
    int umeng_common_action_continue -> umeng_common_action_continue
    int umeng_common_action_info_exist -> umeng_common_action_info_exist
    int umeng_common_action_pause -> umeng_common_action_pause
    int umeng_common_download_failed -> umeng_common_download_failed
    int umeng_common_download_finish -> umeng_common_download_finish
    int umeng_common_download_notification_prefix -> umeng_common_download_notification_prefix
    int umeng_common_icon -> umeng_common_icon
    int umeng_common_info_interrupt -> umeng_common_info_interrupt
    int umeng_common_network_break_alert -> umeng_common_network_break_alert
    int umeng_common_patch_finish -> umeng_common_patch_finish
    int umeng_common_pause_notification_prefix -> umeng_common_pause_notification_prefix
    int umeng_common_silent_download_finish -> umeng_common_silent_download_finish
    int umeng_common_start_download_notification -> umeng_common_start_download_notification
    int umeng_common_start_patch_notification -> umeng_common_start_patch_notification
com.hxgwx.www.R$style -> com.hxgwx.www.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int default_theme -> default_theme
    int dwonload_progress_style -> dwonload_progress_style
    int equi_add_info_edit_style -> equi_add_info_edit_style
    int equi_edit -> equi_edit
    int feedback_edit -> feedback_edit
    int net_menu_button_siding -> net_menu_button_siding
    int normal_edit -> normal_edit
    int notitle_style -> notitle_style
    int pb_load_dwon_newmenu -> pb_load_dwon_newmenu
    int rb_base_style -> rb_base_style
com.hxgwx.www.R$styleable -> com.hxgwx.www.R$styleable:
    int[] PullToRefresh -> PullToRefresh
    int PullToRefresh_ptrAdapterViewBackground -> PullToRefresh_ptrAdapterViewBackground
    int PullToRefresh_ptrAnimationStyle -> PullToRefresh_ptrAnimationStyle
    int PullToRefresh_ptrDrawable -> PullToRefresh_ptrDrawable
    int PullToRefresh_ptrDrawableBottom -> PullToRefresh_ptrDrawableBottom
    int PullToRefresh_ptrDrawableEnd -> PullToRefresh_ptrDrawableEnd
    int PullToRefresh_ptrDrawableStart -> PullToRefresh_ptrDrawableStart
    int PullToRefresh_ptrDrawableTop -> PullToRefresh_ptrDrawableTop
    int PullToRefresh_ptrHeaderBackground -> PullToRefresh_ptrHeaderBackground
    int PullToRefresh_ptrHeaderSubTextColor -> PullToRefresh_ptrHeaderSubTextColor
    int PullToRefresh_ptrHeaderTextAppearance -> PullToRefresh_ptrHeaderTextAppearance
    int PullToRefresh_ptrHeaderTextColor -> PullToRefresh_ptrHeaderTextColor
    int PullToRefresh_ptrListViewExtrasEnabled -> PullToRefresh_ptrListViewExtrasEnabled
    int PullToRefresh_ptrMode -> PullToRefresh_ptrMode
    int PullToRefresh_ptrOverScroll -> PullToRefresh_ptrOverScroll
    int PullToRefresh_ptrRefreshableViewBackground -> PullToRefresh_ptrRefreshableViewBackground
    int PullToRefresh_ptrRotateDrawableWhilePulling -> PullToRefresh_ptrRotateDrawableWhilePulling
    int PullToRefresh_ptrScrollingWhileRefreshingEnabled -> PullToRefresh_ptrScrollingWhileRefreshingEnabled
    int PullToRefresh_ptrShowIndicator -> PullToRefresh_ptrShowIndicator
    int PullToRefresh_ptrSubHeaderTextAppearance -> PullToRefresh_ptrSubHeaderTextAppearance
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
com.hxgwx.www.activity.AboutActivity -> com.hxgwx.www.activity.AboutActivity:
    android.widget.Button bt_check -> bt_check
    com.hxgwx.www.bean.CheckVersionBean bean -> bean
    com.hxgwx.www.HongxianggeApplication application -> application
    android.app.AlertDialog$Builder dialog -> dialog
    android.app.ProgressDialog progress -> progress
    android.app.ProgressDialog dwonProgress -> dwonProgress
    com.hxgwx.www.activity.AboutActivity$Query query -> query
    com.hxgwx.www.web.WebPlus web -> web
    android.os.Handler updateDwon -> updateDwon
    com.hxgwx.www.dwon.DwonLoad dwon -> dwon
    java.lang.String path -> path
    void onCreate(android.os.Bundle) -> onCreate
    void showUpdate() -> showUpdate
    void showCheck() -> showCheck
    void showDwon() -> showDwon
    void onBackPressed() -> onBackPressed
    java.lang.String getCode() -> getCode
    void dwonApk() -> dwonApk
    void installApk(java.lang.String) -> installApk
    void onBack(android.view.View) -> onBack
    void add() -> add
    void close() -> close
    void closeAll() -> closeAll
    void onResume() -> onResume
    void onPause() -> onPause
    android.app.ProgressDialog access$0(com.hxgwx.www.activity.AboutActivity) -> access$0
    java.lang.String access$1(com.hxgwx.www.activity.AboutActivity) -> access$1
    void access$2(com.hxgwx.www.activity.AboutActivity,java.lang.String) -> access$2
    com.hxgwx.www.web.WebPlus access$3(com.hxgwx.www.activity.AboutActivity) -> access$3
    android.app.ProgressDialog access$4(com.hxgwx.www.activity.AboutActivity) -> access$4
    com.hxgwx.www.HongxianggeApplication access$5(com.hxgwx.www.activity.AboutActivity) -> access$5
    void access$6(com.hxgwx.www.activity.AboutActivity,com.hxgwx.www.bean.CheckVersionBean) -> access$6
    void access$7(com.hxgwx.www.activity.AboutActivity) -> access$7
    void access$8(com.hxgwx.www.activity.AboutActivity) -> access$8
    void access$9(com.hxgwx.www.activity.AboutActivity) -> access$9
    void access$10(com.hxgwx.www.activity.AboutActivity) -> access$10
    android.os.Handler access$11(com.hxgwx.www.activity.AboutActivity) -> access$11
com.hxgwx.www.activity.AboutActivity$1 -> com.hxgwx.www.activity.AboutActivity$1:
    com.hxgwx.www.activity.AboutActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.hxgwx.www.activity.AboutActivity$2 -> com.hxgwx.www.activity.AboutActivity$2:
    com.hxgwx.www.activity.AboutActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.AboutActivity$3 -> com.hxgwx.www.activity.AboutActivity$3:
    com.hxgwx.www.activity.AboutActivity this$0 -> this$0
    android.app.AlertDialog val$alDialog -> val$alDialog
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.AboutActivity$4 -> com.hxgwx.www.activity.AboutActivity$4:
    com.hxgwx.www.activity.AboutActivity this$0 -> this$0
    android.app.AlertDialog val$alDialog -> val$alDialog
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.AboutActivity$5 -> com.hxgwx.www.activity.AboutActivity$5:
    com.hxgwx.www.activity.AboutActivity this$0 -> this$0
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.hxgwx.www.activity.AboutActivity$6 -> com.hxgwx.www.activity.AboutActivity$6:
    com.hxgwx.www.activity.AboutActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.hxgwx.www.activity.AboutActivity$7 -> com.hxgwx.www.activity.AboutActivity$7:
    com.hxgwx.www.activity.AboutActivity this$0 -> this$0
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.hxgwx.www.activity.AboutActivity$8 -> com.hxgwx.www.activity.AboutActivity$8:
    com.hxgwx.www.activity.AboutActivity this$0 -> this$0
    void setOnDwoningStatus(int) -> setOnDwoningStatus
    void setOnDwoningProgress(int) -> setOnDwoningProgress
    void setOnDwoningProgress(float,float) -> setOnDwoningProgress
    void setOnDwoningProgress(java.lang.String,java.lang.String) -> setOnDwoningProgress
com.hxgwx.www.activity.AboutActivity$Query -> com.hxgwx.www.activity.AboutActivity$Query:
    com.hxgwx.www.activity.AboutActivity this$0 -> this$0
    com.hxgwx.www.bean.CheckVersionBean doInbackProgres(java.lang.String[]) -> doInbackProgres
    void doProgress(java.lang.String[]) -> doProgress
    void doResult(com.hxgwx.www.bean.CheckVersionBean) -> doResult
    java.lang.Object doInbackProgres(java.lang.Object[]) -> doInbackProgres
    void doResult(java.lang.Object) -> doResult
    void doProgress(java.lang.Object[]) -> doProgress
com.hxgwx.www.activity.ArcTypeListActivity -> com.hxgwx.www.activity.ArcTypeListActivity:
    android.widget.TextView tv_title -> tv_title
    int page -> page
    int PAGESIZE -> PAGESIZE
    java.lang.String id -> id
    com.hxgwx.www.bean.ArticTypeBaseList base -> base
    com.handmark.pulltorefresh.library.PullToRefreshListView plv_arclist -> plv_arclist
    boolean complet -> complet
    com.hxgwx.www.web.WebPlus web -> web
    com.hxgwx.www.HongxianggeApplication application -> application
    java.util.List data -> data
    com.hxgwx.www.adapter.ArcListAdapter adapter -> adapter
    com.hxgwx.www.activity.ArcTypeListActivity$queryList query -> query
    boolean hsQery -> hsQery
    android.app.ProgressDialog progress -> progress
    com.handmark.pulltorefresh.library.PullToRefreshListView getPlv_arclist() -> getPlv_arclist
    void setPlv_arclist(com.handmark.pulltorefresh.library.PullToRefreshListView) -> setPlv_arclist
    com.hxgwx.www.HongxianggeApplication getApplication2() -> getApplication2
    void onCreate(android.os.Bundle) -> onCreate
    void showCheck() -> showCheck
    void init() -> init
    void onBack(android.view.View) -> onBack
    void onResume() -> onResume
    void onPause() -> onPause
    com.hxgwx.www.web.WebPlus access$0(com.hxgwx.www.activity.ArcTypeListActivity) -> access$0
    java.lang.String access$1(com.hxgwx.www.activity.ArcTypeListActivity) -> access$1
    int access$2() -> access$2
    com.handmark.pulltorefresh.library.PullToRefreshListView access$3(com.hxgwx.www.activity.ArcTypeListActivity) -> access$3
    void access$4(com.hxgwx.www.activity.ArcTypeListActivity,boolean) -> access$4
    android.app.ProgressDialog access$5(com.hxgwx.www.activity.ArcTypeListActivity) -> access$5
    java.util.List access$6(com.hxgwx.www.activity.ArcTypeListActivity) -> access$6
    com.hxgwx.www.adapter.ArcListAdapter access$7(com.hxgwx.www.activity.ArcTypeListActivity) -> access$7
    void access$8(com.hxgwx.www.activity.ArcTypeListActivity,boolean) -> access$8
    boolean access$9(com.hxgwx.www.activity.ArcTypeListActivity) -> access$9
    com.hxgwx.www.HongxianggeApplication access$10(com.hxgwx.www.activity.ArcTypeListActivity) -> access$10
    boolean access$11(com.hxgwx.www.activity.ArcTypeListActivity) -> access$11
    void access$12(int) -> access$12
    com.hxgwx.www.activity.ArcTypeListActivity$queryList access$13(com.hxgwx.www.activity.ArcTypeListActivity) -> access$13
com.hxgwx.www.activity.ArcTypeListActivity$1 -> com.hxgwx.www.activity.ArcTypeListActivity$1:
    com.hxgwx.www.activity.ArcTypeListActivity this$0 -> this$0
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.hxgwx.www.activity.ArcTypeListActivity$2 -> com.hxgwx.www.activity.ArcTypeListActivity$2:
    com.hxgwx.www.activity.ArcTypeListActivity this$0 -> this$0
    void onLastItemVisible() -> onLastItemVisible
com.hxgwx.www.activity.ArcTypeListActivity$3 -> com.hxgwx.www.activity.ArcTypeListActivity$3:
    com.hxgwx.www.activity.ArcTypeListActivity this$0 -> this$0
    void onPullDownToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullDownToRefresh
    void onPullUpToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullUpToRefresh
com.hxgwx.www.activity.ArcTypeListActivity$queryList -> com.hxgwx.www.activity.ArcTypeListActivity$queryList:
    com.hxgwx.www.activity.ArcTypeListActivity this$0 -> this$0
    com.hxgwx.www.bean.ArticList doInbackProgres(java.lang.String[]) -> doInbackProgres
    void doProgress(java.lang.String[]) -> doProgress
    void doResult(com.hxgwx.www.bean.ArticList) -> doResult
    java.lang.Object doInbackProgres(java.lang.Object[]) -> doInbackProgres
    void doResult(java.lang.Object) -> doResult
    void doProgress(java.lang.Object[]) -> doProgress
com.hxgwx.www.activity.LoadingActivity -> com.hxgwx.www.activity.LoadingActivity:
    com.hxgwx.www.activity.LoadingActivity$Login login -> login
    com.hxgwx.www.HongxianggeApplication application -> application
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void choiceActitivity() -> choiceActitivity
    void onBackPressed() -> onBackPressed
    void add() -> add
    void close() -> close
    void closeAll() -> closeAll
    void onResume() -> onResume
    void onPause() -> onPause
    com.hxgwx.www.HongxianggeApplication access$0(com.hxgwx.www.activity.LoadingActivity) -> access$0
com.hxgwx.www.activity.LoadingActivity$1 -> com.hxgwx.www.activity.LoadingActivity$1:
    com.hxgwx.www.activity.LoadingActivity this$0 -> this$0
    void onShowSuccess() -> onShowSuccess
    void onShowFailed() -> onShowFailed
    void onSpotClosed() -> onSpotClosed
com.hxgwx.www.activity.LoadingActivity$2 -> com.hxgwx.www.activity.LoadingActivity$2:
    com.hxgwx.www.activity.LoadingActivity this$0 -> this$0
    void run() -> run
com.hxgwx.www.activity.LoadingActivity$Login -> com.hxgwx.www.activity.LoadingActivity$Login:
    com.hxgwx.www.activity.LoadingActivity this$0 -> this$0
    java.lang.String doInbackProgres(java.lang.String[]) -> doInbackProgres
    void doResult(java.lang.String) -> doResult
    java.lang.Object doInbackProgres(java.lang.Object[]) -> doInbackProgres
    void doResult(java.lang.Object) -> doResult
com.hxgwx.www.activity.LoginActivity -> com.hxgwx.www.activity.LoginActivity:
    android.widget.EditText et_input_user -> et_input_user
    android.widget.EditText et_input_pwd -> et_input_pwd
    android.widget.TextView tv_ask_pwd -> tv_ask_pwd
    int fromLgon -> fromLgon
    com.hxgwx.www.HongxianggeApplication application -> application
    android.app.ProgressDialog progress -> progress
    com.hxgwx.www.activity.LoginActivity$login log -> log
    com.hxgwx.www.http.HttpUtils http -> http
    void onBackPressed() -> onBackPressed
    void showCheck() -> showCheck
    void onCreate(android.os.Bundle) -> onCreate
    void onRegister(android.view.View) -> onRegister
    void onLogin(android.view.View) -> onLogin
    void onBack(android.view.View) -> onBack
    void add() -> add
    void close() -> close
    void closeAll() -> closeAll
    boolean isE(java.lang.String) -> isE
    void onResume() -> onResume
    void onPause() -> onPause
    com.hxgwx.www.HongxianggeApplication access$0(com.hxgwx.www.activity.LoginActivity) -> access$0
    android.app.ProgressDialog access$1(com.hxgwx.www.activity.LoginActivity) -> access$1
com.hxgwx.www.activity.LoginActivity$1 -> com.hxgwx.www.activity.LoginActivity$1:
    com.hxgwx.www.activity.LoginActivity this$0 -> this$0
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.hxgwx.www.activity.LoginActivity$2 -> com.hxgwx.www.activity.LoginActivity$2:
    com.hxgwx.www.activity.LoginActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.LoginActivity$login -> com.hxgwx.www.activity.LoginActivity$login:
    com.hxgwx.www.activity.LoginActivity this$0 -> this$0
    com.hxgwx.www.bean.UserLogin doInbackProgres(com.hxgwx.www.bean.LoginParams[]) -> doInbackProgres
    void doProgress(java.lang.String[]) -> doProgress
    void doResult(com.hxgwx.www.bean.UserLogin) -> doResult
    java.lang.Object doInbackProgres(java.lang.Object[]) -> doInbackProgres
    void doResult(java.lang.Object) -> doResult
    void doProgress(java.lang.Object[]) -> doProgress
com.hxgwx.www.activity.MainFragmentActivity -> com.hxgwx.www.activity.MainFragmentActivity:
    android.widget.TextView tv_title -> tv_title
    android.widget.ImageView iv_mycenter -> iv_mycenter
    android.widget.ImageView iv_history -> iv_history
    android.widget.LinearLayout main_fragment_content -> main_fragment_content
    android.widget.LinearLayout ll_tb_tuijian -> ll_tb_tuijian
    android.widget.TextView tv_tuijian -> tv_tuijian
    android.widget.TextView tv_paihang -> tv_paihang
    android.widget.LinearLayout ll_tb_paihang -> ll_tb_paihang
    android.widget.LinearLayout ll_tb_sousuo -> ll_tb_sousuo
    android.widget.LinearLayout ll_tb_fabiao -> ll_tb_fabiao
    android.widget.TextView tv_sousuo -> tv_sousuo
    android.widget.TextView tv_fabiao -> tv_fabiao
    com.hxgwx.www.fragment.MainListFragment mianList -> mianList
    com.hxgwx.www.fragment.SearchFragment search -> search
    com.hxgwx.www.fragment.WriterArticFragment writer -> writer
    com.hxgwx.www.fragment.UserFragment userFragmentl -> userFragmentl
    com.hxgwx.www.fragment.HistoryFragment historyFragment -> historyFragment
    android.support.v4.app.FragmentManager manager -> manager
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu menu -> menu
    com.hxgwx.www.HongxianggeApplication application -> application
    boolean hsShowInitSliding -> hsShowInitSliding
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getMenu() -> getMenu
    void onBack(android.view.View) -> onBack
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDestroy() -> onDestroy
    void initView() -> initView
    void onStart() -> onStart
    void initSlidinmenu() -> initSlidinmenu
    void onBackPressed() -> onBackPressed
    void setOnclick() -> setOnclick
    void clearOnclick() -> clearOnclick
    void add() -> add
    void close() -> close
    void closeAll() -> closeAll
    com.hxgwx.www.HongxianggeApplication getApplication2() -> getApplication2
    void setApplication(com.hxgwx.www.HongxianggeApplication) -> setApplication
    void onResume() -> onResume
    void onPause() -> onPause
    android.support.v4.app.FragmentManager access$0(com.hxgwx.www.activity.MainFragmentActivity) -> access$0
    android.widget.LinearLayout access$1(com.hxgwx.www.activity.MainFragmentActivity) -> access$1
    com.hxgwx.www.fragment.MainListFragment access$2(com.hxgwx.www.activity.MainFragmentActivity) -> access$2
    void access$3(com.hxgwx.www.activity.MainFragmentActivity) -> access$3
    android.widget.TextView access$4(com.hxgwx.www.activity.MainFragmentActivity) -> access$4
    android.widget.TextView access$5(com.hxgwx.www.activity.MainFragmentActivity) -> access$5
    android.widget.TextView access$6(com.hxgwx.www.activity.MainFragmentActivity) -> access$6
    com.hxgwx.www.fragment.SearchFragment access$7(com.hxgwx.www.activity.MainFragmentActivity) -> access$7
    android.widget.TextView access$8(com.hxgwx.www.activity.MainFragmentActivity) -> access$8
    com.hxgwx.www.fragment.WriterArticFragment access$9(com.hxgwx.www.activity.MainFragmentActivity) -> access$9
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu access$10(com.hxgwx.www.activity.MainFragmentActivity) -> access$10
com.hxgwx.www.activity.MainFragmentActivity$1 -> com.hxgwx.www.activity.MainFragmentActivity$1:
    com.hxgwx.www.activity.MainFragmentActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.MainFragmentActivity$2 -> com.hxgwx.www.activity.MainFragmentActivity$2:
    com.hxgwx.www.activity.MainFragmentActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.MainFragmentActivity$3 -> com.hxgwx.www.activity.MainFragmentActivity$3:
    com.hxgwx.www.activity.MainFragmentActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.MainFragmentActivity$4 -> com.hxgwx.www.activity.MainFragmentActivity$4:
    com.hxgwx.www.activity.MainFragmentActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.MainFragmentActivity$5 -> com.hxgwx.www.activity.MainFragmentActivity$5:
    com.hxgwx.www.activity.MainFragmentActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.MainFragmentActivity$6 -> com.hxgwx.www.activity.MainFragmentActivity$6:
    com.hxgwx.www.activity.MainFragmentActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.ReadActivity -> com.hxgwx.www.activity.ReadActivity:
    android.widget.TextView tv_artic_author -> tv_artic_author
    android.widget.TextView tv_artic_time -> tv_artic_time
    android.widget.TextView tv_click -> tv_click
    android.widget.TextView tv_title -> tv_title
    android.widget.TextView tv_set -> tv_set
    android.webkit.WebView wv_content -> wv_content
    android.widget.LinearLayout ll_set -> ll_set
    android.widget.TextView tv_content_title -> tv_content_title
    android.widget.TextView tv_type -> tv_type
    android.widget.Button bt_add_book -> bt_add_book
    android.widget.Button bt_setting_font -> bt_setting_font
    android.widget.Button bt_choice_bg -> bt_choice_bg
    android.widget.SeekBar sb_font_change -> sb_font_change
    android.widget.ScrollView sc_content -> sc_content
    com.hxgwx.www.web.WebPlus web -> web
    com.hxgwx.www.HongxianggeApplication application -> application
    android.webkit.WebSettings set -> set
    android.app.ProgressDialog progress -> progress
    android.view.View baseView -> baseView
    com.hxgwx.www.db.HistoryDBHelper db -> db
    com.hxgwx.www.db.BookMarkDBHelper bDb -> bDb
    com.hxgwx.www.bean.ArticModelBase model -> model
    android.widget.PopupWindow pop -> pop
    java.util.List colorList -> colorList
    void showCheck() -> showCheck
    void onCreate(android.os.Bundle) -> onCreate
    void initAd() -> initAd
    void showPop() -> showPop
    void init() -> init
    void setBg(int) -> setBg
    void setBg(android.graphics.drawable.Drawable) -> setBg
    void add() -> add
    void close() -> close
    void closeAll() -> closeAll
    void onBack(android.view.View) -> onBack
    void onBackPressed() -> onBackPressed
    void onResume() -> onResume
    void onPause() -> onPause
    com.hxgwx.www.web.WebPlus access$0(com.hxgwx.www.activity.ReadActivity) -> access$0
    com.hxgwx.www.bean.ArticModelBase access$1(com.hxgwx.www.activity.ReadActivity) -> access$1
    android.app.ProgressDialog access$2(com.hxgwx.www.activity.ReadActivity) -> access$2
    com.hxgwx.www.HongxianggeApplication access$3(com.hxgwx.www.activity.ReadActivity) -> access$3
    android.webkit.WebView access$4(com.hxgwx.www.activity.ReadActivity) -> access$4
    java.util.List access$5(com.hxgwx.www.activity.ReadActivity) -> access$5
    void access$6(com.hxgwx.www.activity.ReadActivity,int) -> access$6
    android.widget.PopupWindow access$7(com.hxgwx.www.activity.ReadActivity) -> access$7
    void access$8(com.hxgwx.www.activity.ReadActivity) -> access$8
    android.widget.LinearLayout access$9(com.hxgwx.www.activity.ReadActivity) -> access$9
    android.widget.SeekBar access$10(com.hxgwx.www.activity.ReadActivity) -> access$10
com.hxgwx.www.activity.ReadActivity$1 -> com.hxgwx.www.activity.ReadActivity$1:
    com.hxgwx.www.activity.ReadActivity this$0 -> this$0
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.hxgwx.www.activity.ReadActivity$2 -> com.hxgwx.www.activity.ReadActivity$2:
    com.hxgwx.www.activity.ReadActivity this$0 -> this$0
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    com.hxgwx.www.activity.ReadActivity access$0(com.hxgwx.www.activity.ReadActivity$2) -> access$0
com.hxgwx.www.activity.ReadActivity$2$1 -> com.hxgwx.www.activity.ReadActivity$2$1:
    com.hxgwx.www.activity.ReadActivity$2 this$1 -> this$1
    java.lang.Integer val$c -> val$c
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.ReadActivity$3 -> com.hxgwx.www.activity.ReadActivity$3:
    com.hxgwx.www.activity.ReadActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.ReadActivity$4 -> com.hxgwx.www.activity.ReadActivity$4:
    com.hxgwx.www.activity.ReadActivity this$0 -> this$0
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.hxgwx.www.activity.ReadActivity$5 -> com.hxgwx.www.activity.ReadActivity$5:
    com.hxgwx.www.activity.ReadActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.ReadActivity$6 -> com.hxgwx.www.activity.ReadActivity$6:
    com.hxgwx.www.activity.ReadActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.ReadActivity$7 -> com.hxgwx.www.activity.ReadActivity$7:
    com.hxgwx.www.activity.ReadActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.ReadActivity$8 -> com.hxgwx.www.activity.ReadActivity$8:
    com.hxgwx.www.activity.ReadActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.ReadActivity$Query -> com.hxgwx.www.activity.ReadActivity$Query:
    com.hxgwx.www.activity.ReadActivity this$0 -> this$0
    com.hxgwx.www.bean.ArticBody doInbackProgres(java.lang.String[]) -> doInbackProgres
    void doProgress(java.lang.String[]) -> doProgress
    void doResult(com.hxgwx.www.bean.ArticBody) -> doResult
    java.lang.Object doInbackProgres(java.lang.Object[]) -> doInbackProgres
    void doResult(java.lang.Object) -> doResult
    void doProgress(java.lang.Object[]) -> doProgress
com.hxgwx.www.activity.RegisterActivity -> com.hxgwx.www.activity.RegisterActivity:
    android.widget.EditText et_user_name -> et_user_name
    android.widget.EditText et_user_uname -> et_user_uname
    android.widget.EditText et_user_pwd -> et_user_pwd
    android.widget.EditText et_user_ypwd -> et_user_ypwd
    android.widget.EditText EditText04 -> EditText04
    android.widget.RadioGroup radioGroup1 -> radioGroup1
    android.widget.Button bt_register -> bt_register
    java.lang.String user_name -> user_name
    java.lang.String user_uname -> user_uname
    java.lang.String user_pwd -> user_pwd
    java.lang.String user_ypwd -> user_ypwd
    java.lang.String email -> email
    java.lang.String sex -> sex
    com.hxgwx.www.HongxianggeApplication application -> application
    com.hxgwx.www.activity.RegisterActivity$register reg -> reg
    int fromLgon -> fromLgon
    android.app.ProgressDialog progress -> progress
    void onCreate(android.os.Bundle) -> onCreate
    void showCheck() -> showCheck
    void onRegister(android.view.View) -> onRegister
    void onLogin(android.view.View) -> onLogin
    void onBack(android.view.View) -> onBack
    boolean isE(java.lang.String) -> isE
    void add() -> add
    void close() -> close
    void closeAll() -> closeAll
    void onResume() -> onResume
    void onPause() -> onPause
    com.hxgwx.www.HongxianggeApplication access$0(com.hxgwx.www.activity.RegisterActivity) -> access$0
    java.lang.String access$1(com.hxgwx.www.activity.RegisterActivity) -> access$1
    java.lang.String access$2(com.hxgwx.www.activity.RegisterActivity) -> access$2
    java.lang.String access$3(com.hxgwx.www.activity.RegisterActivity) -> access$3
    java.lang.String access$4(com.hxgwx.www.activity.RegisterActivity) -> access$4
    java.lang.String access$5(com.hxgwx.www.activity.RegisterActivity) -> access$5
    java.lang.String access$6(com.hxgwx.www.activity.RegisterActivity) -> access$6
    android.app.ProgressDialog access$7(com.hxgwx.www.activity.RegisterActivity) -> access$7
    int access$8(com.hxgwx.www.activity.RegisterActivity) -> access$8
com.hxgwx.www.activity.RegisterActivity$1 -> com.hxgwx.www.activity.RegisterActivity$1:
    com.hxgwx.www.activity.RegisterActivity this$0 -> this$0
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.hxgwx.www.activity.RegisterActivity$register -> com.hxgwx.www.activity.RegisterActivity$register:
    com.hxgwx.www.activity.RegisterActivity this$0 -> this$0
    com.hxgwx.www.bean.BaseBean doInbackProgres(java.lang.String[]) -> doInbackProgres
    void doProgress(java.lang.String[]) -> doProgress
    void doResult(com.hxgwx.www.bean.BaseBean) -> doResult
    java.lang.Object doInbackProgres(java.lang.Object[]) -> doInbackProgres
    void doResult(java.lang.Object) -> doResult
    void doProgress(java.lang.Object[]) -> doProgress
com.hxgwx.www.activity.WriterActivity -> com.hxgwx.www.activity.WriterActivity:
    int fromLgon -> fromLgon
    android.widget.PopupWindow pWindow -> pWindow
    android.view.View baseView -> baseView
    java.lang.String typeId -> typeId
    java.lang.String typeStr -> typeStr
    android.widget.Button bt_type -> bt_type
    android.widget.EditText et_title -> et_title
    android.widget.EditText et_content -> et_content
    android.widget.Button bt_send -> bt_send
    android.widget.Button bt_clear -> bt_clear
    android.widget.Button bt_typeSeting -> bt_typeSeting
    android.widget.Button bt_save -> bt_save
    java.lang.String title -> title
    java.lang.String content -> content
    com.hxgwx.www.web.WebPlus web -> web
    com.hxgwx.www.bean.SendARCBody body -> body
    java.util.List typeIds -> typeIds
    com.hxgwx.www.HongxianggeApplication application -> application
    com.hxgwx.www.activity.WriterActivity$sendAsy send -> send
    com.hxgwx.www.db.ArcMoelDBhelper adb -> adb
    android.app.ProgressDialog progress -> progress
    void onBack(android.view.View) -> onBack
    void showType() -> showType
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> init
    void showCheck() -> showCheck
    void add() -> add
    void close() -> close
    void closeAll() -> closeAll
    void onResume() -> onResume
    void onPause() -> onPause
    java.util.List access$0(com.hxgwx.www.activity.WriterActivity) -> access$0
    void access$1(com.hxgwx.www.activity.WriterActivity,java.lang.String) -> access$1
    void access$2(com.hxgwx.www.activity.WriterActivity,java.lang.String) -> access$2
    android.widget.PopupWindow access$3(com.hxgwx.www.activity.WriterActivity) -> access$3
    android.widget.Button access$4(com.hxgwx.www.activity.WriterActivity) -> access$4
    java.lang.String access$5(com.hxgwx.www.activity.WriterActivity) -> access$5
    com.hxgwx.www.bean.SendARCBody access$6(com.hxgwx.www.activity.WriterActivity) -> access$6
    java.lang.String access$7(com.hxgwx.www.activity.WriterActivity) -> access$7
    java.lang.String access$8(com.hxgwx.www.activity.WriterActivity) -> access$8
    java.lang.String access$9(com.hxgwx.www.activity.WriterActivity) -> access$9
    com.hxgwx.www.HongxianggeApplication access$10(com.hxgwx.www.activity.WriterActivity) -> access$10
    com.hxgwx.www.web.WebPlus access$11(com.hxgwx.www.activity.WriterActivity) -> access$11
    android.app.ProgressDialog access$12(com.hxgwx.www.activity.WriterActivity) -> access$12
    android.widget.EditText access$13(com.hxgwx.www.activity.WriterActivity) -> access$13
    android.widget.EditText access$14(com.hxgwx.www.activity.WriterActivity) -> access$14
    android.widget.Button access$15(com.hxgwx.www.activity.WriterActivity) -> access$15
    android.widget.Button access$16(com.hxgwx.www.activity.WriterActivity) -> access$16
    android.widget.Button access$17(com.hxgwx.www.activity.WriterActivity) -> access$17
    android.widget.Button access$18(com.hxgwx.www.activity.WriterActivity) -> access$18
    void access$19(com.hxgwx.www.activity.WriterActivity) -> access$19
    void access$20(com.hxgwx.www.activity.WriterActivity,java.lang.String) -> access$20
    void access$21(com.hxgwx.www.activity.WriterActivity,java.lang.String) -> access$21
    void access$22(com.hxgwx.www.activity.WriterActivity) -> access$22
    com.hxgwx.www.db.ArcMoelDBhelper access$23(com.hxgwx.www.activity.WriterActivity) -> access$23
com.hxgwx.www.activity.WriterActivity$1 -> com.hxgwx.www.activity.WriterActivity$1:
    com.hxgwx.www.activity.WriterActivity this$0 -> this$0
    void onDismiss() -> onDismiss
com.hxgwx.www.activity.WriterActivity$2 -> com.hxgwx.www.activity.WriterActivity$2:
    com.hxgwx.www.activity.WriterActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.WriterActivity$3 -> com.hxgwx.www.activity.WriterActivity$3:
    com.hxgwx.www.activity.WriterActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.WriterActivity$4 -> com.hxgwx.www.activity.WriterActivity$4:
    com.hxgwx.www.activity.WriterActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.WriterActivity$5 -> com.hxgwx.www.activity.WriterActivity$5:
    com.hxgwx.www.activity.WriterActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.WriterActivity$6 -> com.hxgwx.www.activity.WriterActivity$6:
    com.hxgwx.www.activity.WriterActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.activity.WriterActivity$sendAsy -> com.hxgwx.www.activity.WriterActivity$sendAsy:
    com.hxgwx.www.activity.WriterActivity this$0 -> this$0
    com.hxgwx.www.bean.BaseBean doInbackProgres(java.lang.String[]) -> doInbackProgres
    void doResult(com.hxgwx.www.bean.BaseBean) -> doResult
    java.lang.Object doInbackProgres(java.lang.Object[]) -> doInbackProgres
    void doResult(java.lang.Object) -> doResult
com.hxgwx.www.activity.WriterActivity$typeAdapter -> com.hxgwx.www.activity.WriterActivity$typeAdapter:
    com.hxgwx.www.activity.WriterActivity this$0 -> this$0
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.hxgwx.www.activity.WriterActivity access$1(com.hxgwx.www.activity.WriterActivity$typeAdapter) -> access$1
com.hxgwx.www.activity.WriterActivity$typeAdapter$1 -> com.hxgwx.www.activity.WriterActivity$typeAdapter$1:
    com.hxgwx.www.activity.WriterActivity$typeAdapter this$1 -> this$1
    java.lang.String val$k -> val$k
    java.lang.String val$vd -> val$vd
    void onClick(android.view.View) -> onClick
com.hxgwx.www.adapter.ArcListAdapter -> com.hxgwx.www.adapter.ArcListAdapter:
    java.util.List baseList -> baseList
    android.content.Context context -> context
    java.util.Map images -> images
    com.hongxiangge.image.ImageManager2 imageManage -> imageManage
    com.hxgwx.www.activity.ArcTypeListActivity activity -> activity
    boolean scoll -> scoll
    com.hxgwx.www.adapter.ArcListAdapter$UpdateThread updateThread -> updateThread
    android.os.HandlerThread ht -> ht
    java.util.List holderList -> holderList
    android.os.Handler updateIcon -> updateIcon
    void fillImageScod(java.lang.String,android.widget.ImageView) -> fillImageScod
    void fillImage(java.lang.String,android.widget.ImageView) -> fillImage
    void setOnlistener() -> setOnlistener
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean access$0(com.hxgwx.www.adapter.ArcListAdapter) -> access$0
    void access$1(com.hxgwx.www.adapter.ArcListAdapter,boolean) -> access$1
    android.content.Context access$2(com.hxgwx.www.adapter.ArcListAdapter) -> access$2
com.hxgwx.www.adapter.ArcListAdapter$1 -> com.hxgwx.www.adapter.ArcListAdapter$1:
    com.hxgwx.www.adapter.ArcListAdapter this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.hxgwx.www.adapter.ArcListAdapter$2 -> com.hxgwx.www.adapter.ArcListAdapter$2:
    com.hxgwx.www.adapter.ArcListAdapter this$0 -> this$0
    void setStateListenear(boolean) -> setStateListenear
com.hxgwx.www.adapter.ArcListAdapter$3 -> com.hxgwx.www.adapter.ArcListAdapter$3:
    com.hxgwx.www.adapter.ArcListAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.hxgwx.www.adapter.ArcListAdapter$4 -> com.hxgwx.www.adapter.ArcListAdapter$4:
    com.hxgwx.www.adapter.ArcListAdapter this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.hxgwx.www.adapter.ArcListAdapter$5 -> com.hxgwx.www.adapter.ArcListAdapter$5:
    com.hxgwx.www.adapter.ArcListAdapter this$0 -> this$0
    com.hxgwx.www.bean.ArticModelBase val$model -> val$model
    void onClick(android.view.View) -> onClick
com.hxgwx.www.adapter.ArcListAdapter$Holder -> com.hxgwx.www.adapter.ArcListAdapter$Holder:
    long serialVersionUID -> serialVersionUID
    android.widget.ImageView iv -> iv
    android.widget.TextView title -> title
    android.widget.TextView descript -> descript
    java.lang.String path -> path
    com.hxgwx.www.adapter.ArcListAdapter this$0 -> this$0
com.hxgwx.www.adapter.ArcListAdapter$UpdateThread -> com.hxgwx.www.adapter.ArcListAdapter$UpdateThread:
    android.widget.ImageView iv -> iv
    java.lang.String key -> key
    boolean hasUpdate -> hasUpdate
    com.hxgwx.www.adapter.ArcListAdapter$Holder holder -> holder
    com.hxgwx.www.adapter.ArcListAdapter this$0 -> this$0
    void run() -> run
com.hxgwx.www.adapter.LocationArcAdapter -> com.hxgwx.www.adapter.LocationArcAdapter:
    java.util.List baseList -> baseList
    android.content.Context context -> context
    java.text.SimpleDateFormat format -> format
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context access$0(com.hxgwx.www.adapter.LocationArcAdapter) -> access$0
com.hxgwx.www.adapter.LocationArcAdapter$1 -> com.hxgwx.www.adapter.LocationArcAdapter$1:
    com.hxgwx.www.adapter.LocationArcAdapter this$0 -> this$0
    com.hxgwx.www.bean.ArticModelBase val$bean -> val$bean
    void onClick(android.view.View) -> onClick
com.hxgwx.www.adapter.LocationArcAdapter$Holder -> com.hxgwx.www.adapter.LocationArcAdapter$Holder:
    android.widget.TextView tv_h_time -> tv_h_time
    android.widget.TextView tv_h_name -> tv_h_name
    android.widget.TextView tv_h_author -> tv_h_author
    com.hxgwx.www.adapter.LocationArcAdapter this$0 -> this$0
com.hxgwx.www.adapter.MainListAdapter -> com.hxgwx.www.adapter.MainListAdapter:
    java.util.List baseList -> baseList
    android.content.Context context -> context
    java.util.Map images -> images
    com.hongxiangge.image.ImageManager2 imageManage -> imageManage
    com.hxgwx.www.fragment.MainListFragment fragment -> fragment
    boolean scoll -> scoll
    com.hxgwx.www.adapter.MainListAdapter$UpdateThread updateThread -> updateThread
    android.os.HandlerThread ht -> ht
    java.util.List holderList -> holderList
    android.os.Handler updateIcon -> updateIcon
    void fillImageScod(java.lang.String,android.widget.ImageView) -> fillImageScod
    void fillImage(java.lang.String,android.widget.ImageView) -> fillImage
    void setOnlistener() -> setOnlistener
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean access$0(com.hxgwx.www.adapter.MainListAdapter) -> access$0
    void access$1(com.hxgwx.www.adapter.MainListAdapter,boolean) -> access$1
    android.content.Context access$2(com.hxgwx.www.adapter.MainListAdapter) -> access$2
com.hxgwx.www.adapter.MainListAdapter$1 -> com.hxgwx.www.adapter.MainListAdapter$1:
    com.hxgwx.www.adapter.MainListAdapter this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.hxgwx.www.adapter.MainListAdapter$2 -> com.hxgwx.www.adapter.MainListAdapter$2:
    com.hxgwx.www.adapter.MainListAdapter this$0 -> this$0
    void setStateListenear(boolean) -> setStateListenear
com.hxgwx.www.adapter.MainListAdapter$3 -> com.hxgwx.www.adapter.MainListAdapter$3:
    com.hxgwx.www.adapter.MainListAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.hxgwx.www.adapter.MainListAdapter$4 -> com.hxgwx.www.adapter.MainListAdapter$4:
    com.hxgwx.www.adapter.MainListAdapter this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.hxgwx.www.adapter.MainListAdapter$5 -> com.hxgwx.www.adapter.MainListAdapter$5:
    com.hxgwx.www.adapter.MainListAdapter this$0 -> this$0
    com.hxgwx.www.bean.ArticModelBase val$model -> val$model
    void onClick(android.view.View) -> onClick
com.hxgwx.www.adapter.MainListAdapter$Holder -> com.hxgwx.www.adapter.MainListAdapter$Holder:
    long serialVersionUID -> serialVersionUID
    android.widget.ImageView iv -> iv
    android.widget.TextView title -> title
    android.widget.TextView descript -> descript
    java.lang.String path -> path
    com.hxgwx.www.adapter.MainListAdapter this$0 -> this$0
com.hxgwx.www.adapter.MainListAdapter$UpdateThread -> com.hxgwx.www.adapter.MainListAdapter$UpdateThread:
    android.widget.ImageView iv -> iv
    java.lang.String key -> key
    boolean hasUpdate -> hasUpdate
    com.hxgwx.www.adapter.MainListAdapter$Holder holder -> holder
    com.hxgwx.www.adapter.MainListAdapter this$0 -> this$0
    void run() -> run
com.hxgwx.www.adapter.MyArcListAdapter -> com.hxgwx.www.adapter.MyArcListAdapter:
    java.util.List baseList -> baseList
    android.content.Context context -> context
    java.util.Map images -> images
    com.hongxiangge.image.ImageManager2 imageManage -> imageManage
    com.hxgwx.www.fragment.UserFragment fragment -> fragment
    boolean scoll -> scoll
    com.hxgwx.www.adapter.MyArcListAdapter$UpdateThread updateThread -> updateThread
    android.os.HandlerThread ht -> ht
    java.util.List holderList -> holderList
    android.os.Handler updateIcon -> updateIcon
    void fillImageScod(java.lang.String,android.widget.ImageView) -> fillImageScod
    void fillImage(java.lang.String,android.widget.ImageView) -> fillImage
    void setOnlistener() -> setOnlistener
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean access$0(com.hxgwx.www.adapter.MyArcListAdapter) -> access$0
    void access$1(com.hxgwx.www.adapter.MyArcListAdapter,boolean) -> access$1
    android.content.Context access$2(com.hxgwx.www.adapter.MyArcListAdapter) -> access$2
com.hxgwx.www.adapter.MyArcListAdapter$1 -> com.hxgwx.www.adapter.MyArcListAdapter$1:
    com.hxgwx.www.adapter.MyArcListAdapter this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.hxgwx.www.adapter.MyArcListAdapter$2 -> com.hxgwx.www.adapter.MyArcListAdapter$2:
    com.hxgwx.www.adapter.MyArcListAdapter this$0 -> this$0
    void setStateListenear(boolean) -> setStateListenear
com.hxgwx.www.adapter.MyArcListAdapter$3 -> com.hxgwx.www.adapter.MyArcListAdapter$3:
    com.hxgwx.www.adapter.MyArcListAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.hxgwx.www.adapter.MyArcListAdapter$4 -> com.hxgwx.www.adapter.MyArcListAdapter$4:
    com.hxgwx.www.adapter.MyArcListAdapter this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.hxgwx.www.adapter.MyArcListAdapter$5 -> com.hxgwx.www.adapter.MyArcListAdapter$5:
    com.hxgwx.www.adapter.MyArcListAdapter this$0 -> this$0
    java.lang.String val$status -> val$status
    com.hxgwx.www.bean.ArticModelBase val$model -> val$model
    void onClick(android.view.View) -> onClick
com.hxgwx.www.adapter.MyArcListAdapter$Holder -> com.hxgwx.www.adapter.MyArcListAdapter$Holder:
    long serialVersionUID -> serialVersionUID
    android.widget.ImageView iv -> iv
    android.widget.TextView title -> title
    android.widget.TextView descript -> descript
    java.lang.String path -> path
    com.hxgwx.www.adapter.MyArcListAdapter this$0 -> this$0
com.hxgwx.www.adapter.MyArcListAdapter$UpdateThread -> com.hxgwx.www.adapter.MyArcListAdapter$UpdateThread:
    android.widget.ImageView iv -> iv
    java.lang.String key -> key
    boolean hasUpdate -> hasUpdate
    com.hxgwx.www.adapter.MyArcListAdapter$Holder holder -> holder
    com.hxgwx.www.adapter.MyArcListAdapter this$0 -> this$0
    void run() -> run
com.hxgwx.www.adapter.SearchListAdapter -> com.hxgwx.www.adapter.SearchListAdapter:
    java.util.List baseList -> baseList
    android.content.Context context -> context
    java.util.Map images -> images
    com.hongxiangge.image.ImageManager2 imageManage -> imageManage
    com.hxgwx.www.fragment.SearchFragment fragment -> fragment
    boolean scoll -> scoll
    com.hxgwx.www.adapter.SearchListAdapter$UpdateThread updateThread -> updateThread
    android.os.HandlerThread ht -> ht
    java.util.List holderList -> holderList
    android.os.Handler updateIcon -> updateIcon
    void fillImageScod(java.lang.String,android.widget.ImageView) -> fillImageScod
    void fillImage(java.lang.String,android.widget.ImageView) -> fillImage
    void setOnlistener() -> setOnlistener
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean access$0(com.hxgwx.www.adapter.SearchListAdapter) -> access$0
    void access$1(com.hxgwx.www.adapter.SearchListAdapter,boolean) -> access$1
    android.content.Context access$2(com.hxgwx.www.adapter.SearchListAdapter) -> access$2
com.hxgwx.www.adapter.SearchListAdapter$1 -> com.hxgwx.www.adapter.SearchListAdapter$1:
    com.hxgwx.www.adapter.SearchListAdapter this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.hxgwx.www.adapter.SearchListAdapter$2 -> com.hxgwx.www.adapter.SearchListAdapter$2:
    com.hxgwx.www.adapter.SearchListAdapter this$0 -> this$0
    void setStateListenear(boolean) -> setStateListenear
com.hxgwx.www.adapter.SearchListAdapter$3 -> com.hxgwx.www.adapter.SearchListAdapter$3:
    com.hxgwx.www.adapter.SearchListAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.hxgwx.www.adapter.SearchListAdapter$4 -> com.hxgwx.www.adapter.SearchListAdapter$4:
    com.hxgwx.www.adapter.SearchListAdapter this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.hxgwx.www.adapter.SearchListAdapter$5 -> com.hxgwx.www.adapter.SearchListAdapter$5:
    com.hxgwx.www.adapter.SearchListAdapter this$0 -> this$0
    com.hxgwx.www.bean.ArticModelBase val$model -> val$model
    void onClick(android.view.View) -> onClick
com.hxgwx.www.adapter.SearchListAdapter$Holder -> com.hxgwx.www.adapter.SearchListAdapter$Holder:
    long serialVersionUID -> serialVersionUID
    android.widget.ImageView iv -> iv
    android.widget.TextView title -> title
    android.widget.TextView descript -> descript
    java.lang.String path -> path
    com.hxgwx.www.adapter.SearchListAdapter this$0 -> this$0
com.hxgwx.www.adapter.SearchListAdapter$UpdateThread -> com.hxgwx.www.adapter.SearchListAdapter$UpdateThread:
    android.widget.ImageView iv -> iv
    java.lang.String key -> key
    boolean hasUpdate -> hasUpdate
    com.hxgwx.www.adapter.SearchListAdapter$Holder holder -> holder
    com.hxgwx.www.adapter.SearchListAdapter this$0 -> this$0
    void run() -> run
com.hxgwx.www.bean.ArticBody -> com.hxgwx.www.bean.ArticBody:
    long serialVersionUID -> serialVersionUID
    java.util.List data -> data
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.hxgwx.www.bean.ArticBodyBase -> com.hxgwx.www.bean.ArticBodyBase:
    long serialVersionUID -> serialVersionUID
    int aid -> aid
    int typeid -> typeid
    java.lang.String body -> body
    java.lang.String redirecturl -> redirecturl
    java.lang.String templet -> templet
    java.lang.String userip -> userip
    int getAid() -> getAid
    void setAid(int) -> setAid
    int getTypeid() -> getTypeid
    void setTypeid(int) -> setTypeid
    java.lang.String getBody() -> getBody
    void setBody(java.lang.String) -> setBody
    java.lang.String getRedirecturl() -> getRedirecturl
    void setRedirecturl(java.lang.String) -> setRedirecturl
    java.lang.String getTemplet() -> getTemplet
    void setTemplet(java.lang.String) -> setTemplet
    java.lang.String getUserip() -> getUserip
    void setUserip(java.lang.String) -> setUserip
com.hxgwx.www.bean.ArticList -> com.hxgwx.www.bean.ArticList:
    long serialVersionUID -> serialVersionUID
    java.util.List data -> data
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.hxgwx.www.bean.ArticModelBase -> com.hxgwx.www.bean.ArticModelBase:
    long serialVersionUID -> serialVersionUID
    java.lang.String id -> id
    java.lang.String typeid -> typeid
    java.lang.String typeid2 -> typeid2
    java.lang.Long sortrank -> sortrank
    java.lang.String flag -> flag
    int ismake -> ismake
    int channel -> channel
    int arcrank -> arcrank
    int click -> click
    int money -> money
    java.lang.String title -> title
    java.lang.String shorttitle -> shorttitle
    java.lang.String color -> color
    java.lang.String writer -> writer
    java.lang.String source -> source
    java.lang.String litpic -> litpic
    java.lang.Long pubdate -> pubdate
    java.lang.Long senddate -> senddate
    java.lang.Integer mid -> mid
    java.lang.String keywords -> keywords
    java.lang.Long lastpost -> lastpost
    java.lang.Integer scores -> scores
    java.lang.Integer goodpost -> goodpost
    java.lang.Integer badpost -> badpost
    java.lang.Integer voteid -> voteid
    java.lang.Integer notpost -> notpost
    java.lang.String description -> description
    java.lang.String filename -> filename
    java.lang.String dutyadmin -> dutyadmin
    java.lang.Integer tackid -> tackid
    java.lang.Integer mtype -> mtype
    java.lang.Integer weight -> weight
    java.util.Date readTime -> readTime
    java.lang.String loginId -> loginId
    java.lang.String getLoginId() -> getLoginId
    void setLoginId(java.lang.String) -> setLoginId
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getTypeid() -> getTypeid
    void setTypeid(java.lang.String) -> setTypeid
    java.lang.String getTypeid2() -> getTypeid2
    void setTypeid2(java.lang.String) -> setTypeid2
    java.lang.Long getSortrank() -> getSortrank
    void setSortrank(java.lang.Long) -> setSortrank
    java.lang.String getFlag() -> getFlag
    void setFlag(java.lang.String) -> setFlag
    int getIsmake() -> getIsmake
    void setIsmake(int) -> setIsmake
    int getChannel() -> getChannel
    void setChannel(int) -> setChannel
    int getArcrank() -> getArcrank
    void setArcrank(int) -> setArcrank
    int getClick() -> getClick
    void setClick(int) -> setClick
    int getMoney() -> getMoney
    void setMoney(int) -> setMoney
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getShorttitle() -> getShorttitle
    void setShorttitle(java.lang.String) -> setShorttitle
    java.lang.String getColor() -> getColor
    void setColor(java.lang.String) -> setColor
    java.lang.String getWriter() -> getWriter
    void setWriter(java.lang.String) -> setWriter
    java.lang.String getSource() -> getSource
    void setSource(java.lang.String) -> setSource
    java.lang.String getLitpic() -> getLitpic
    void setLitpic(java.lang.String) -> setLitpic
    java.lang.Long getPubdate() -> getPubdate
    void setPubdate(java.lang.Long) -> setPubdate
    java.lang.Long getSenddate() -> getSenddate
    void setSenddate(java.lang.Long) -> setSenddate
    java.lang.Integer getMid() -> getMid
    void setMid(java.lang.Integer) -> setMid
    java.lang.String getKeywords() -> getKeywords
    void setKeywords(java.lang.String) -> setKeywords
    java.lang.Long getLastpost() -> getLastpost
    void setLastpost(java.lang.Long) -> setLastpost
    java.lang.Integer getScores() -> getScores
    void setScores(java.lang.Integer) -> setScores
    java.lang.Integer getGoodpost() -> getGoodpost
    void setGoodpost(java.lang.Integer) -> setGoodpost
    java.lang.Integer getBadpost() -> getBadpost
    void setBadpost(java.lang.Integer) -> setBadpost
    java.lang.Integer getVoteid() -> getVoteid
    void setVoteid(java.lang.Integer) -> setVoteid
    java.lang.Integer getNotpost() -> getNotpost
    void setNotpost(java.lang.Integer) -> setNotpost
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getFilename() -> getFilename
    void setFilename(java.lang.String) -> setFilename
    java.lang.String getDutyadmin() -> getDutyadmin
    void setDutyadmin(java.lang.String) -> setDutyadmin
    java.lang.Integer getTackid() -> getTackid
    void setTackid(java.lang.Integer) -> setTackid
    java.lang.Integer getMtype() -> getMtype
    void setMtype(java.lang.Integer) -> setMtype
    java.lang.Integer getWeight() -> getWeight
    void setWeight(java.lang.Integer) -> setWeight
    java.util.Date getReadTime() -> getReadTime
    void setReadTime(java.util.Date) -> setReadTime
com.hxgwx.www.bean.ArticTypeBaseList -> com.hxgwx.www.bean.ArticTypeBaseList:
    long serialVersionUID -> serialVersionUID
    java.lang.String id -> id
    java.lang.String reid -> reid
    java.lang.String topid -> topid
    java.lang.String sortrank -> sortrank
    java.lang.String typename -> typename
    java.lang.String typedir -> typedir
    java.lang.String isdefault -> isdefault
    java.lang.String defaultname -> defaultname
    java.lang.String issend -> issend
    java.lang.String channeltype -> channeltype
    java.lang.String maxpage -> maxpage
    java.lang.String ispart -> ispart
    java.lang.String corank -> corank
    java.lang.String tempindex -> tempindex
    java.lang.String templist -> templist
    java.lang.String temparticle -> temparticle
    java.lang.String namerule -> namerule
    java.lang.String namerule2 -> namerule2
    java.lang.String modname -> modname
    java.lang.String description -> description
    java.lang.String keywords -> keywords
    java.lang.String seotitle -> seotitle
    java.lang.String moresite -> moresite
    java.lang.String sitepath -> sitepath
    java.lang.String siteurl -> siteurl
    java.lang.String ishidden -> ishidden
    java.lang.String cross -> cross
    java.lang.String crossid -> crossid
    java.lang.String content -> content
    java.lang.String smalltypes -> smalltypes
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getReid() -> getReid
    void setReid(java.lang.String) -> setReid
    java.lang.String getTopid() -> getTopid
    void setTopid(java.lang.String) -> setTopid
    java.lang.String getSortrank() -> getSortrank
    void setSortrank(java.lang.String) -> setSortrank
    java.lang.String getTypename() -> getTypename
    void setTypename(java.lang.String) -> setTypename
    java.lang.String getTypedir() -> getTypedir
    void setTypedir(java.lang.String) -> setTypedir
    java.lang.String getIsdefault() -> getIsdefault
    void setIsdefault(java.lang.String) -> setIsdefault
    java.lang.String getDefaultname() -> getDefaultname
    void setDefaultname(java.lang.String) -> setDefaultname
    java.lang.String getIssend() -> getIssend
    void setIssend(java.lang.String) -> setIssend
    java.lang.String getChanneltype() -> getChanneltype
    void setChanneltype(java.lang.String) -> setChanneltype
    java.lang.String getMaxpage() -> getMaxpage
    void setMaxpage(java.lang.String) -> setMaxpage
    java.lang.String getIspart() -> getIspart
    void setIspart(java.lang.String) -> setIspart
    java.lang.String getCorank() -> getCorank
    void setCorank(java.lang.String) -> setCorank
    java.lang.String getTempindex() -> getTempindex
    void setTempindex(java.lang.String) -> setTempindex
    java.lang.String getTemplist() -> getTemplist
    void setTemplist(java.lang.String) -> setTemplist
    java.lang.String getTemparticle() -> getTemparticle
    void setTemparticle(java.lang.String) -> setTemparticle
    java.lang.String getNamerule() -> getNamerule
    void setNamerule(java.lang.String) -> setNamerule
    java.lang.String getNamerule2() -> getNamerule2
    void setNamerule2(java.lang.String) -> setNamerule2
    java.lang.String getModname() -> getModname
    void setModname(java.lang.String) -> setModname
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getKeywords() -> getKeywords
    void setKeywords(java.lang.String) -> setKeywords
    java.lang.String getSeotitle() -> getSeotitle
    void setSeotitle(java.lang.String) -> setSeotitle
    java.lang.String getMoresite() -> getMoresite
    void setMoresite(java.lang.String) -> setMoresite
    java.lang.String getSitepath() -> getSitepath
    void setSitepath(java.lang.String) -> setSitepath
    java.lang.String getSiteurl() -> getSiteurl
    void setSiteurl(java.lang.String) -> setSiteurl
    java.lang.String getIshidden() -> getIshidden
    void setIshidden(java.lang.String) -> setIshidden
    java.lang.String getCross() -> getCross
    void setCross(java.lang.String) -> setCross
    java.lang.String getCrossid() -> getCrossid
    void setCrossid(java.lang.String) -> setCrossid
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getSmalltypes() -> getSmalltypes
    void setSmalltypes(java.lang.String) -> setSmalltypes
com.hxgwx.www.bean.ArticTypeList -> com.hxgwx.www.bean.ArticTypeList:
    long serialVersionUID -> serialVersionUID
    java.util.List data -> data
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.hxgwx.www.bean.BaseBean -> com.hxgwx.www.bean.BaseBean:
    long serialVersionUID -> serialVersionUID
    boolean statu -> statu
    int code -> code
    java.lang.String msg -> msg
    boolean isStatu() -> isStatu
    void setStatu(boolean) -> setStatu
    int getCode() -> getCode
    void setCode(int) -> setCode
    java.lang.String getMsg() -> getMsg
    void setMsg(java.lang.String) -> setMsg
com.hxgwx.www.bean.CheckVersionBean -> com.hxgwx.www.bean.CheckVersionBean:
    java.util.List data -> data
    long serialVersionUID -> serialVersionUID
    java.lang.String id -> id
    java.lang.String version -> version
    java.lang.String path -> path
    java.lang.String versioncode -> versioncode
    java.lang.String descrption -> descrption
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    java.lang.String getDescrption() -> getDescrption
    void setDescrption(java.lang.String) -> setDescrption
    java.lang.String getVersioncode() -> getVersioncode
    void setVersioncode(java.lang.String) -> setVersioncode
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.hxgwx.www.bean.LoginParams -> com.hxgwx.www.bean.LoginParams:
    java.lang.String userid -> userid
    java.lang.String pwd -> pwd
    java.lang.String fmdo -> fmdo
    java.lang.String dopost -> dopost
    java.lang.String Gourl -> Gourl
    java.lang.String form1 -> form1
    java.lang.String getUserid() -> getUserid
    void setUserid(java.lang.String) -> setUserid
    java.lang.String getPwd() -> getPwd
    void setPwd(java.lang.String) -> setPwd
    java.lang.String getFmdo() -> getFmdo
    void setFmdo(java.lang.String) -> setFmdo
    java.lang.String getDopost() -> getDopost
    void setDopost(java.lang.String) -> setDopost
    java.lang.String getGourl() -> getGourl
    void setGourl(java.lang.String) -> setGourl
    java.lang.String getForm1() -> getForm1
    void setForm1(java.lang.String) -> setForm1
com.hxgwx.www.bean.RegisterParams -> com.hxgwx.www.bean.RegisterParams:
    long serialVersionUID -> serialVersionUID
    java.lang.String dopost -> dopost
    java.lang.String step -> step
    java.lang.String mtype -> mtype
    java.lang.String userid -> userid
    java.lang.String uname -> uname
    java.lang.String userpwd -> userpwd
    java.lang.String userpwdok -> userpwdok
    java.lang.String email -> email
    java.lang.String sex -> sex
    java.lang.String getDopost() -> getDopost
    void setDopost(java.lang.String) -> setDopost
    java.lang.String getStep() -> getStep
    void setStep(java.lang.String) -> setStep
    java.lang.String getMtype() -> getMtype
    void setMtype(java.lang.String) -> setMtype
    java.lang.String getUserid() -> getUserid
    void setUserid(java.lang.String) -> setUserid
    java.lang.String getUname() -> getUname
    void setUname(java.lang.String) -> setUname
    java.lang.String getUserpwd() -> getUserpwd
    void setUserpwd(java.lang.String) -> setUserpwd
    java.lang.String getUserpwdok() -> getUserpwdok
    void setUserpwdok(java.lang.String) -> setUserpwdok
    java.lang.String getEmail() -> getEmail
    void setEmail(java.lang.String) -> setEmail
    java.lang.String getSex() -> getSex
    void setSex(java.lang.String) -> setSex
com.hxgwx.www.bean.SendARCBody -> com.hxgwx.www.bean.SendARCBody:
    long serialVersionUID -> serialVersionUID
    int id -> id
    java.lang.String dopost -> dopost
    java.lang.String channelid -> channelid
    java.lang.String title -> title
    java.lang.String tags -> tags
    java.lang.String writer -> writer
    java.lang.String typeid -> typeid
    java.lang.String description -> description
    java.lang.String body -> body
    java.lang.String fmod -> fmod
    java.lang.String mid -> mid
    java.lang.String getMid() -> getMid
    void setMid(java.lang.String) -> setMid
    java.lang.String getDopost() -> getDopost
    void setDopost(java.lang.String) -> setDopost
    java.lang.String getChannelid() -> getChannelid
    void setChannelid(java.lang.String) -> setChannelid
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTags() -> getTags
    void setTags(java.lang.String) -> setTags
    java.lang.String getWriter() -> getWriter
    void setWriter(java.lang.String) -> setWriter
    java.lang.String getTypeid() -> getTypeid
    void setTypeid(java.lang.String) -> setTypeid
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getBody() -> getBody
    void setBody(java.lang.String) -> setBody
    java.lang.String getFmod() -> getFmod
    void setFmod(java.lang.String) -> setFmod
    int getId() -> getId
    void setId(int) -> setId
com.hxgwx.www.bean.UserBase -> com.hxgwx.www.bean.UserBase:
    long serialVersionUID -> serialVersionUID
    java.lang.String mid -> mid
    java.lang.String mtype -> mtype
    java.lang.String userid -> userid
    java.lang.String pwd -> pwd
    java.lang.String uname -> uname
    java.lang.String sex -> sex
    java.lang.String rank -> rank
    java.lang.String uptime -> uptime
    java.lang.String exptime -> exptime
    java.lang.String money -> money
    java.lang.String email -> email
    java.lang.String scores -> scores
    java.lang.String matt -> matt
    java.lang.String spacesta -> spacesta
    java.lang.String face -> face
    java.lang.String safequestion -> safequestion
    java.lang.String safeanswer -> safeanswer
    java.lang.String jointime -> jointime
    java.lang.String joinip -> joinip
    java.lang.String logintime -> logintime
    java.lang.String loginip -> loginip
    java.lang.String checkmail -> checkmail
    java.lang.String getMid() -> getMid
    void setMid(java.lang.String) -> setMid
    java.lang.String getMtype() -> getMtype
    void setMtype(java.lang.String) -> setMtype
    java.lang.String getUserid() -> getUserid
    void setUserid(java.lang.String) -> setUserid
    java.lang.String getPwd() -> getPwd
    void setPwd(java.lang.String) -> setPwd
    java.lang.String getUname() -> getUname
    void setUname(java.lang.String) -> setUname
    java.lang.String getSex() -> getSex
    void setSex(java.lang.String) -> setSex
    java.lang.String getRank() -> getRank
    void setRank(java.lang.String) -> setRank
    java.lang.String getUptime() -> getUptime
    void setUptime(java.lang.String) -> setUptime
    java.lang.String getExptime() -> getExptime
    void setExptime(java.lang.String) -> setExptime
    java.lang.String getMoney() -> getMoney
    void setMoney(java.lang.String) -> setMoney
    java.lang.String getEmail() -> getEmail
    void setEmail(java.lang.String) -> setEmail
    java.lang.String getScores() -> getScores
    void setScores(java.lang.String) -> setScores
    java.lang.String getMatt() -> getMatt
    void setMatt(java.lang.String) -> setMatt
    java.lang.String getSpacesta() -> getSpacesta
    void setSpacesta(java.lang.String) -> setSpacesta
    java.lang.String getFace() -> getFace
    void setFace(java.lang.String) -> setFace
    java.lang.String getSafequestion() -> getSafequestion
    void setSafequestion(java.lang.String) -> setSafequestion
    java.lang.String getSafeanswer() -> getSafeanswer
    void setSafeanswer(java.lang.String) -> setSafeanswer
    java.lang.String getJointime() -> getJointime
    void setJointime(java.lang.String) -> setJointime
    java.lang.String getJoinip() -> getJoinip
    void setJoinip(java.lang.String) -> setJoinip
    java.lang.String getLogintime() -> getLogintime
    void setLogintime(java.lang.String) -> setLogintime
    java.lang.String getLoginip() -> getLoginip
    void setLoginip(java.lang.String) -> setLoginip
    java.lang.String getCheckmail() -> getCheckmail
    void setCheckmail(java.lang.String) -> setCheckmail
com.hxgwx.www.bean.UserLogin -> com.hxgwx.www.bean.UserLogin:
    long serialVersionUID -> serialVersionUID
    com.hxgwx.www.bean.UserBase data -> data
    com.hxgwx.www.bean.UserBase getData() -> getData
    void setData(com.hxgwx.www.bean.UserBase) -> setData
com.hxgwx.www.db.ArcMoelDBhelper -> com.hxgwx.www.db.ArcMoelDBhelper:
    com.lidroid.xutils.DbUtils dbManager -> dbManager
    android.content.Context context -> context
    com.hxgwx.www.db.ArcMoelDBhelper db -> db
    java.lang.String DBNAME -> DBNAME
    int DBVERSION -> DBVERSION
    int getDBVERSION() -> getDBVERSION
    void setDBVERSION(int) -> setDBVERSION
    java.lang.String getDBNAME() -> getDBNAME
    void setDBNAME(java.lang.String) -> setDBNAME
    com.lidroid.xutils.DbUtils createDb() -> createDb
    com.hxgwx.www.db.ArcMoelDBhelper getInstance(android.content.Context) -> getInstance
com.hxgwx.www.db.ArcMoelDBhelper$1 -> com.hxgwx.www.db.ArcMoelDBhelper$1:
    com.hxgwx.www.db.ArcMoelDBhelper this$0 -> this$0
    void onUpgrade(com.lidroid.xutils.DbUtils,int,int) -> onUpgrade
com.hxgwx.www.db.BookMarkDBHelper -> com.hxgwx.www.db.BookMarkDBHelper:
    com.lidroid.xutils.DbUtils dbManager -> dbManager
    android.content.Context context -> context
    com.hxgwx.www.db.BookMarkDBHelper db -> db
    java.lang.String DBNAME -> DBNAME
    int DBVERSION -> DBVERSION
    java.lang.String getDBNAME() -> getDBNAME
    void setDBNAME(java.lang.String) -> setDBNAME
    int getDBVERSION() -> getDBVERSION
    void setDBVERSION(int) -> setDBVERSION
    com.lidroid.xutils.DbUtils createDb() -> createDb
    com.hxgwx.www.db.BookMarkDBHelper getInstance(android.content.Context) -> getInstance
com.hxgwx.www.db.BookMarkDBHelper$1 -> com.hxgwx.www.db.BookMarkDBHelper$1:
    com.hxgwx.www.db.BookMarkDBHelper this$0 -> this$0
    void onUpgrade(com.lidroid.xutils.DbUtils,int,int) -> onUpgrade
com.hxgwx.www.db.HistoryDBHelper -> com.hxgwx.www.db.HistoryDBHelper:
    com.lidroid.xutils.DbUtils dbManager -> dbManager
    android.content.Context context -> context
    com.hxgwx.www.db.HistoryDBHelper db -> db
    java.lang.String DBNAME -> DBNAME
    int DBVERSION -> DBVERSION
    java.lang.String getDBNAME() -> getDBNAME
    void setDBNAME(java.lang.String) -> setDBNAME
    int getDBVERSION() -> getDBVERSION
    void setDBVERSION(int) -> setDBVERSION
    com.lidroid.xutils.DbUtils createDb() -> createDb
    com.hxgwx.www.db.HistoryDBHelper getInstance(android.content.Context) -> getInstance
com.hxgwx.www.db.HistoryDBHelper$1 -> com.hxgwx.www.db.HistoryDBHelper$1:
    com.hxgwx.www.db.HistoryDBHelper this$0 -> this$0
    void onUpgrade(com.lidroid.xutils.DbUtils,int,int) -> onUpgrade
com.hxgwx.www.dwon.DwonLoad -> com.hxgwx.www.dwon.DwonLoad:
    int STARTDWON -> STARTDWON
    int DWONING -> DWONING
    int DWON_OK -> DWON_OK
    int DWON_ERROR -> DWON_ERROR
    java.lang.String path -> path
    java.lang.String url -> url
    int length -> length
    android.content.Context context -> context
    boolean isCancel -> isCancel
    com.hxgwx.www.dwon.DwonLoad$OnDwonListener setOnDwonListener -> setOnDwonListener
    void dwon() -> dwon
    void run() -> run
    void setSetOnDwonListener(com.hxgwx.www.dwon.DwonLoad$OnDwonListener) -> setSetOnDwonListener
    java.lang.String convertKBByByte(long,android.content.Context) -> convertKBByByte
    boolean isCancel() -> isCancel
    void setCancel(boolean) -> setCancel
com.hxgwx.www.dwon.DwonLoad$OnDwonListener -> com.hxgwx.www.dwon.DwonLoad$OnDwonListener:
    void setOnDwoningProgress(int) -> setOnDwoningProgress
    void setOnDwoningProgress(float,float) -> setOnDwoningProgress
    void setOnDwoningProgress(java.lang.String,java.lang.String) -> setOnDwoningProgress
    void setOnDwoningStatus(int) -> setOnDwoningStatus
com.hxgwx.www.fragment.HistoryFragment -> com.hxgwx.www.fragment.HistoryFragment:
    android.view.View baseView -> baseView
    com.handmark.pulltorefresh.library.PullToRefreshListView plv_history -> plv_history
    com.hxgwx.www.adapter.LocationArcAdapter adapter -> adapter
    java.util.List baseList -> baseList
    com.hxgwx.www.db.HistoryDBHelper db -> db
    int limit -> limit
    int page -> page
    android.os.Handler updateUI -> updateUI
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void init() -> init
    void onOpen() -> onOpen
    com.handmark.pulltorefresh.library.PullToRefreshListView access$0(com.hxgwx.www.fragment.HistoryFragment) -> access$0
    void access$1(com.hxgwx.www.fragment.HistoryFragment,int) -> access$1
    android.os.Handler access$2(com.hxgwx.www.fragment.HistoryFragment) -> access$2
    com.hxgwx.www.db.HistoryDBHelper access$3(com.hxgwx.www.fragment.HistoryFragment) -> access$3
    int access$4(com.hxgwx.www.fragment.HistoryFragment) -> access$4
    java.util.List access$5(com.hxgwx.www.fragment.HistoryFragment) -> access$5
    com.hxgwx.www.adapter.LocationArcAdapter access$6(com.hxgwx.www.fragment.HistoryFragment) -> access$6
    int access$7(com.hxgwx.www.fragment.HistoryFragment) -> access$7
com.hxgwx.www.fragment.HistoryFragment$1 -> com.hxgwx.www.fragment.HistoryFragment$1:
    com.hxgwx.www.fragment.HistoryFragment this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.hxgwx.www.fragment.HistoryFragment$2 -> com.hxgwx.www.fragment.HistoryFragment$2:
    com.hxgwx.www.fragment.HistoryFragment this$0 -> this$0
    void onPullDownToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullDownToRefresh
    void onPullUpToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullUpToRefresh
com.hxgwx.www.fragment.MainListFragment -> com.hxgwx.www.fragment.MainListFragment:
    com.hxgwx.www.HongxianggeApplication application -> application
    com.handmark.pulltorefresh.library.PullToRefreshListView plv_main_list -> plv_main_list
    android.widget.GridView hs_type_ -> hs_type_
    com.hxgwx.www.adapter.MainListAdapter adapter -> adapter
    com.hxgwx.www.web.WebPlus web -> web
    java.util.List baseList -> baseList
    com.hxgwx.www.fragment.MainListFragment$Type type -> type
    int page -> page
    int PAGESIZE -> PAGESIZE
    boolean isDoing -> isDoing
    com.hxgwx.www.fragment.MainListFragment$QueryList query -> query
    com.hxgwx.www.fragment.MainListFragment$GetTypeList list -> list
    java.util.Map TYPES -> TYPES
    java.util.List typeList -> typeList
    android.app.ProgressDialog progress -> progress
    com.hxgwx.www.bean.ArticTypeList alllist -> alllist
    com.hxgwx.www.HongxianggeApplication getApplication2() -> getApplication2
    com.handmark.pulltorefresh.library.PullToRefreshListView getPlv_main_list() -> getPlv_main_list
    com.hxgwx.www.adapter.MainListAdapter getAdapter() -> getAdapter
    void getTypeList(com.hxgwx.www.fragment.MainListFragment$Type) -> getTypeList
    void initAd(android.view.View) -> initAd
    void showCheck() -> showCheck
    void init() -> init
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    com.hxgwx.www.fragment.MainListFragment$Type getType() -> getType
    void setType(com.hxgwx.www.fragment.MainListFragment$Type) -> setType
    com.hxgwx.www.fragment.MainListFragment$Type access$0(com.hxgwx.www.fragment.MainListFragment) -> access$0
    com.hxgwx.www.web.WebPlus access$1(com.hxgwx.www.fragment.MainListFragment) -> access$1
    int access$2() -> access$2
    java.util.List access$3(com.hxgwx.www.fragment.MainListFragment) -> access$3
    android.app.ProgressDialog access$4(com.hxgwx.www.fragment.MainListFragment) -> access$4
    com.hxgwx.www.HongxianggeApplication access$5(com.hxgwx.www.fragment.MainListFragment) -> access$5
    void access$6(com.hxgwx.www.fragment.MainListFragment,boolean) -> access$6
    com.handmark.pulltorefresh.library.PullToRefreshListView access$7(com.hxgwx.www.fragment.MainListFragment) -> access$7
    com.hxgwx.www.adapter.MainListAdapter access$8(com.hxgwx.www.fragment.MainListFragment) -> access$8
    com.hxgwx.www.bean.ArticTypeList access$9() -> access$9
    void access$10(com.hxgwx.www.bean.ArticTypeList) -> access$10
    android.widget.GridView access$11(com.hxgwx.www.fragment.MainListFragment) -> access$11
    boolean access$12(com.hxgwx.www.fragment.MainListFragment) -> access$12
    void access$13(int) -> access$13
    com.hxgwx.www.fragment.MainListFragment$QueryList access$14(com.hxgwx.www.fragment.MainListFragment) -> access$14
com.hxgwx.www.fragment.MainListFragment$1 -> com.hxgwx.www.fragment.MainListFragment$1:
    com.hxgwx.www.fragment.MainListFragment this$0 -> this$0
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.hxgwx.www.fragment.MainListFragment$2 -> com.hxgwx.www.fragment.MainListFragment$2:
    com.hxgwx.www.fragment.MainListFragment this$0 -> this$0
    void onPullDownToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullDownToRefresh
    void onPullUpToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullUpToRefresh
com.hxgwx.www.fragment.MainListFragment$GetTypeList -> com.hxgwx.www.fragment.MainListFragment$GetTypeList:
    com.hxgwx.www.fragment.MainListFragment this$0 -> this$0
    com.hxgwx.www.bean.ArticTypeList doInbackProgres(java.lang.String[]) -> doInbackProgres
    void doProgress(java.lang.Integer[]) -> doProgress
    void doResult(com.hxgwx.www.bean.ArticTypeList) -> doResult
    java.lang.Object doInbackProgres(java.lang.Object[]) -> doInbackProgres
    void doResult(java.lang.Object) -> doResult
    void doProgress(java.lang.Object[]) -> doProgress
    com.hxgwx.www.fragment.MainListFragment access$4(com.hxgwx.www.fragment.MainListFragment$GetTypeList) -> access$4
com.hxgwx.www.fragment.MainListFragment$GetTypeList$1 -> com.hxgwx.www.fragment.MainListFragment$GetTypeList$1:
    com.hxgwx.www.fragment.MainListFragment$GetTypeList this$1 -> this$1
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.hxgwx.www.fragment.MainListFragment$QueryList -> com.hxgwx.www.fragment.MainListFragment$QueryList:
    com.hxgwx.www.fragment.MainListFragment this$0 -> this$0
    int[] $SWITCH_TABLE$com$hxgwx$www$fragment$MainListFragment$Type -> $SWITCH_TABLE$com$hxgwx$www$fragment$MainListFragment$Type
    com.hxgwx.www.bean.ArticList doInbackProgres(java.lang.String[]) -> doInbackProgres
    void doProgress(java.lang.Integer[]) -> doProgress
    void doResult(com.hxgwx.www.bean.ArticList) -> doResult
    java.lang.Object doInbackProgres(java.lang.Object[]) -> doInbackProgres
    void doResult(java.lang.Object) -> doResult
    void doProgress(java.lang.Object[]) -> doProgress
    int[] $SWITCH_TABLE$com$hxgwx$www$fragment$MainListFragment$Type() -> $SWITCH_TABLE$com$hxgwx$www$fragment$MainListFragment$Type
com.hxgwx.www.fragment.MainListFragment$Type -> com.hxgwx.www.fragment.MainListFragment$Type:
    com.hxgwx.www.fragment.MainListFragment$Type tuijian -> tuijian
    com.hxgwx.www.fragment.MainListFragment$Type paihang -> paihang
    com.hxgwx.www.fragment.MainListFragment$Type[] ENUM$VALUES -> ENUM$VALUES
    com.hxgwx.www.fragment.MainListFragment$Type[] values() -> values
    com.hxgwx.www.fragment.MainListFragment$Type valueOf(java.lang.String) -> valueOf
com.hxgwx.www.fragment.MainListFragment$typeListAdapter -> com.hxgwx.www.fragment.MainListFragment$typeListAdapter:
    java.util.List typeList -> typeList
    com.hxgwx.www.fragment.MainListFragment this$0 -> this$0
    void fill(java.util.List) -> fill
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.hxgwx.www.fragment.SearchFragment -> com.hxgwx.www.fragment.SearchFragment:
    android.view.View baseView -> baseView
    android.widget.EditText et_search -> et_search
    android.widget.ListView lv_search_mian -> lv_search_mian
    com.hxgwx.www.HongxianggeApplication application -> application
    java.lang.String q -> q
    android.app.ProgressDialog progress -> progress
    com.hxgwx.www.adapter.SearchListAdapter adapter -> adapter
    com.hxgwx.www.web.WebPlus web -> web
    java.util.List baseList -> baseList
    com.hxgwx.www.fragment.SearchFragment$queryList query -> query
    android.widget.EditText getEt_search() -> getEt_search
    void setEt_search(android.widget.EditText) -> setEt_search
    android.widget.ListView getLv_search_mian() -> getLv_search_mian
    void setLv_search_mian(android.widget.ListView) -> setLv_search_mian
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.view.View initAd(android.view.View) -> initAd
    void showCheck() -> showCheck
    void init() -> init
    com.hxgwx.www.HongxianggeApplication getApplication2() -> getApplication2
    void setApplication(com.hxgwx.www.HongxianggeApplication) -> setApplication
    com.hxgwx.www.web.WebPlus access$0(com.hxgwx.www.fragment.SearchFragment) -> access$0
    android.app.ProgressDialog access$1(com.hxgwx.www.fragment.SearchFragment) -> access$1
    java.util.List access$2(com.hxgwx.www.fragment.SearchFragment) -> access$2
    com.hxgwx.www.adapter.SearchListAdapter access$3(com.hxgwx.www.fragment.SearchFragment) -> access$3
    com.hxgwx.www.HongxianggeApplication access$4(com.hxgwx.www.fragment.SearchFragment) -> access$4
    android.widget.EditText access$5(com.hxgwx.www.fragment.SearchFragment) -> access$5
    void access$6(com.hxgwx.www.fragment.SearchFragment) -> access$6
    com.hxgwx.www.fragment.SearchFragment$queryList access$7(com.hxgwx.www.fragment.SearchFragment) -> access$7
    android.view.View access$8(com.hxgwx.www.fragment.SearchFragment) -> access$8
com.hxgwx.www.fragment.SearchFragment$1 -> com.hxgwx.www.fragment.SearchFragment$1:
    com.hxgwx.www.fragment.SearchFragment this$0 -> this$0
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.hxgwx.www.fragment.SearchFragment$2 -> com.hxgwx.www.fragment.SearchFragment$2:
    com.hxgwx.www.fragment.SearchFragment this$0 -> this$0
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.hxgwx.www.fragment.SearchFragment$queryList -> com.hxgwx.www.fragment.SearchFragment$queryList:
    com.hxgwx.www.fragment.SearchFragment this$0 -> this$0
    com.hxgwx.www.bean.ArticList doInbackProgres(java.lang.String[]) -> doInbackProgres
    void doProgress(java.lang.String[]) -> doProgress
    void doResult(com.hxgwx.www.bean.ArticList) -> doResult
    java.lang.Object doInbackProgres(java.lang.Object[]) -> doInbackProgres
    void doResult(java.lang.Object) -> doResult
    void doProgress(java.lang.Object[]) -> doProgress
com.hxgwx.www.fragment.UserFragment -> com.hxgwx.www.fragment.UserFragment:
    android.widget.TextView tv_about -> tv_about
    android.widget.TextView tv_uname -> tv_uname
    android.widget.TextView tv_user_score -> tv_user_score
    android.widget.TextView tv_user_name -> tv_user_name
    android.widget.ImageView ic_user_icon -> ic_user_icon
    com.handmark.pulltorefresh.library.PullToRefreshListView plv_book -> plv_book
    com.handmark.pulltorefresh.library.PullToRefreshListView plv_history -> plv_history
    com.handmark.pulltorefresh.library.PullToRefreshListView plv_my_public -> plv_my_public
    com.hxgwx.www.HongxianggeApplication application -> application
    com.hxgwx.www.adapter.MyArcListAdapter myAdapter -> myAdapter
    com.hxgwx.www.db.BookMarkDBHelper bDb -> bDb
    android.widget.LinearLayout ll_user_unlogin -> ll_user_unlogin
    android.widget.LinearLayout ll_user_login -> ll_user_login
    android.widget.Button bt_login -> bt_login
    android.widget.Button bt_register -> bt_register
    com.hxgwx.www.activity.MainFragmentActivity activity -> activity
    com.hxgwx.www.bean.UserLogin user -> user
    java.util.List bookMarkList -> bookMarkList
    int bPage -> bPage
    int bSize -> bSize
    android.os.Handler updateListUI -> updateListUI
    com.hxgwx.www.adapter.LocationArcAdapter bAdapter -> bAdapter
    com.hxgwx.www.web.WebPlus web -> web
    java.util.List baseList -> baseList
    com.hxgwx.www.fragment.UserFragment$queryMyList query -> query
    int page -> page
    int size -> size
    com.hxgwx.www.HongxianggeApplication getApplication2() -> getApplication2
    void setApplication(com.hxgwx.www.HongxianggeApplication) -> setApplication
    android.widget.TextView getTv_about() -> getTv_about
    void setTv_about(android.widget.TextView) -> setTv_about
    android.widget.TextView getTv_uname() -> getTv_uname
    void setTv_uname(android.widget.TextView) -> setTv_uname
    android.widget.TextView getTv_user_score() -> getTv_user_score
    void setTv_user_score(android.widget.TextView) -> setTv_user_score
    android.widget.TextView getTv_user_name() -> getTv_user_name
    void setTv_user_name(android.widget.TextView) -> setTv_user_name
    android.widget.ImageView getIc_user_icon() -> getIc_user_icon
    void setIc_user_icon(android.widget.ImageView) -> setIc_user_icon
    com.handmark.pulltorefresh.library.PullToRefreshListView getPlv_book() -> getPlv_book
    void setPlv_book(com.handmark.pulltorefresh.library.PullToRefreshListView) -> setPlv_book
    com.handmark.pulltorefresh.library.PullToRefreshListView getPlv_history() -> getPlv_history
    void setPlv_history(com.handmark.pulltorefresh.library.PullToRefreshListView) -> setPlv_history
    com.handmark.pulltorefresh.library.PullToRefreshListView getPlv_my_public() -> getPlv_my_public
    void setPlv_my_public(com.handmark.pulltorefresh.library.PullToRefreshListView) -> setPlv_my_public
    android.widget.LinearLayout getLl_user_unlogin() -> getLl_user_unlogin
    void setLl_user_unlogin(android.widget.LinearLayout) -> setLl_user_unlogin
    android.widget.LinearLayout getLl_user_login() -> getLl_user_login
    void setLl_user_login(android.widget.LinearLayout) -> setLl_user_login
    android.widget.Button getBt_login() -> getBt_login
    void setBt_login(android.widget.Button) -> setBt_login
    android.widget.Button getBt_register() -> getBt_register
    void setBt_register(android.widget.Button) -> setBt_register
    com.hxgwx.www.bean.UserLogin getUser() -> getUser
    void setUser(com.hxgwx.www.bean.UserLogin) -> setUser
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initBookMark(java.lang.String) -> initBookMark
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onStart() -> onStart
    void onHiddenChanged(boolean) -> onHiddenChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void initView(android.view.View) -> initView
    void initLogin() -> initLogin
    void onOpened() -> onOpened
    com.handmark.pulltorefresh.library.PullToRefreshListView access$0(com.hxgwx.www.fragment.UserFragment) -> access$0
    com.hxgwx.www.web.WebPlus access$1(com.hxgwx.www.fragment.UserFragment) -> access$1
    int access$2(com.hxgwx.www.fragment.UserFragment) -> access$2
    int access$3(com.hxgwx.www.fragment.UserFragment) -> access$3
    com.handmark.pulltorefresh.library.PullToRefreshListView access$4(com.hxgwx.www.fragment.UserFragment) -> access$4
    com.hxgwx.www.adapter.MyArcListAdapter access$5(com.hxgwx.www.fragment.UserFragment) -> access$5
    java.util.List access$6(com.hxgwx.www.fragment.UserFragment) -> access$6
    com.hxgwx.www.HongxianggeApplication access$7(com.hxgwx.www.fragment.UserFragment) -> access$7
    void access$8(com.hxgwx.www.fragment.UserFragment,int) -> access$8
    java.util.List access$9(com.hxgwx.www.fragment.UserFragment) -> access$9
    com.hxgwx.www.db.BookMarkDBHelper access$10(com.hxgwx.www.fragment.UserFragment) -> access$10
    int access$11(com.hxgwx.www.fragment.UserFragment) -> access$11
    com.hxgwx.www.adapter.LocationArcAdapter access$12(com.hxgwx.www.fragment.UserFragment) -> access$12
    android.os.Handler access$13(com.hxgwx.www.fragment.UserFragment) -> access$13
    int access$14(com.hxgwx.www.fragment.UserFragment) -> access$14
    com.handmark.pulltorefresh.library.PullToRefreshListView access$15(com.hxgwx.www.fragment.UserFragment) -> access$15
    void access$16(com.hxgwx.www.fragment.UserFragment,int) -> access$16
    com.hxgwx.www.fragment.UserFragment$queryMyList access$17(com.hxgwx.www.fragment.UserFragment) -> access$17
    com.hxgwx.www.bean.UserLogin access$18(com.hxgwx.www.fragment.UserFragment) -> access$18
com.hxgwx.www.fragment.UserFragment$1 -> com.hxgwx.www.fragment.UserFragment$1:
    com.hxgwx.www.fragment.UserFragment this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.hxgwx.www.fragment.UserFragment$2 -> com.hxgwx.www.fragment.UserFragment$2:
    com.hxgwx.www.fragment.UserFragment this$0 -> this$0
    java.lang.String val$mid -> val$mid
    void onPullDownToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullDownToRefresh
    void onPullUpToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullUpToRefresh
com.hxgwx.www.fragment.UserFragment$3 -> com.hxgwx.www.fragment.UserFragment$3:
    com.hxgwx.www.fragment.UserFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.fragment.UserFragment$4 -> com.hxgwx.www.fragment.UserFragment$4:
    com.hxgwx.www.fragment.UserFragment this$0 -> this$0
    void onPullDownToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullDownToRefresh
    void onPullUpToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullUpToRefresh
com.hxgwx.www.fragment.UserFragment$5 -> com.hxgwx.www.fragment.UserFragment$5:
    com.hxgwx.www.fragment.UserFragment this$0 -> this$0
    void onPullDownToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullDownToRefresh
    void onPullUpToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullUpToRefresh
com.hxgwx.www.fragment.UserFragment$6 -> com.hxgwx.www.fragment.UserFragment$6:
    com.hxgwx.www.fragment.UserFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.fragment.UserFragment$7 -> com.hxgwx.www.fragment.UserFragment$7:
    com.hxgwx.www.fragment.UserFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.fragment.UserFragment$queryMyList -> com.hxgwx.www.fragment.UserFragment$queryMyList:
    com.hxgwx.www.fragment.UserFragment this$0 -> this$0
    com.hxgwx.www.bean.ArticList doInbackProgres(java.lang.String[]) -> doInbackProgres
    void doProgress(java.lang.String[]) -> doProgress
    void doResult(com.hxgwx.www.bean.ArticList) -> doResult
    java.lang.Object doInbackProgres(java.lang.Object[]) -> doInbackProgres
    void doResult(java.lang.Object) -> doResult
    void doProgress(java.lang.Object[]) -> doProgress
com.hxgwx.www.fragment.WriterArticFragment -> com.hxgwx.www.fragment.WriterArticFragment:
    android.widget.TextView tv_write_new -> tv_write_new
    android.widget.TextView tv_write_old -> tv_write_old
    android.view.View baseView -> baseView
    android.widget.PopupWindow pWindow -> pWindow
    com.hxgwx.www.db.ArcMoelDBhelper adb -> adb
    com.hxgwx.www.fragment.WriterArticFragment$typeAdapter aAdapter -> aAdapter
    java.util.List bodyList -> bodyList
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.widget.PopupWindow getpWindow() -> getpWindow
    void showTitle() -> showTitle
    java.util.List access$0(com.hxgwx.www.fragment.WriterArticFragment) -> access$0
    android.widget.PopupWindow access$1(com.hxgwx.www.fragment.WriterArticFragment) -> access$1
    void access$2(com.hxgwx.www.fragment.WriterArticFragment) -> access$2
com.hxgwx.www.fragment.WriterArticFragment$1 -> com.hxgwx.www.fragment.WriterArticFragment$1:
    com.hxgwx.www.fragment.WriterArticFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.fragment.WriterArticFragment$2 -> com.hxgwx.www.fragment.WriterArticFragment$2:
    com.hxgwx.www.fragment.WriterArticFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.hxgwx.www.fragment.WriterArticFragment$typeAdapter -> com.hxgwx.www.fragment.WriterArticFragment$typeAdapter:
    com.hxgwx.www.fragment.WriterArticFragment this$0 -> this$0
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.hxgwx.www.fragment.WriterArticFragment access$1(com.hxgwx.www.fragment.WriterArticFragment$typeAdapter) -> access$1
com.hxgwx.www.fragment.WriterArticFragment$typeAdapter$1 -> com.hxgwx.www.fragment.WriterArticFragment$typeAdapter$1:
    com.hxgwx.www.fragment.WriterArticFragment$typeAdapter this$1 -> this$1
    com.hxgwx.www.bean.SendARCBody val$body -> val$body
    void onClick(android.view.View) -> onClick
com.hxgwx.www.http.HttpUtils -> com.hxgwx.www.http.HttpUtils:
    java.lang.String doPost(java.lang.String,java.util.Map,java.io.File) -> doPost
    java.lang.String doPost(java.lang.String,java.util.Map,java.lang.String) -> doPost
com.hxgwx.www.test.Test -> com.hxgwx.www.test.Test:
    java.lang.String Tag -> Tag
    void test() -> test
com.hxgwx.www.utils.ActivityManagerUtils -> com.hxgwx.www.utils.ActivityManagerUtils:
    java.util.List ACTIVITYS -> ACTIVITYS
    void add() -> add
    void close() -> close
    void closeAll() -> closeAll
com.hxgwx.www.utils.Utils -> com.hxgwx.www.utils.Utils:
    void showLongToast(android.content.Context,java.lang.String) -> showLongToast
    void showShortToast(android.content.Context,java.lang.String) -> showShortToast
    java.lang.String readXMLToString_Config(android.content.Context,java.lang.String) -> readXMLToString_Config
    void gotoActivity(android.content.Context,java.lang.Class,android.content.Intent) -> gotoActivity
    boolean checkEmail(java.lang.String) -> checkEmail
    java.lang.Object jsonPasreToObject(java.lang.Class,java.lang.String) -> jsonPasreToObject
    java.util.Map getValueMap(java.lang.Object) -> getValueMap
    java.lang.String ConvertEntity(org.apache.http.HttpEntity) -> ConvertEntity
    boolean checkLogin(com.hxgwx.www.HongxianggeApplication,android.content.Context) -> checkLogin
    java.lang.String getArcTypeByRank(int) -> getArcTypeByRank
    java.lang.String TyepSetting(java.lang.String) -> TyepSetting
com.hxgwx.www.utils.Utils$CheckIsEmptySTR -> com.hxgwx.www.utils.Utils$CheckIsEmptySTR:
    boolean isE(java.lang.String) -> isE
com.hxgwx.www.web.WebPlus -> com.hxgwx.www.web.WebPlus:
    com.hxgwx.www.bean.UserLogin login(com.hxgwx.www.bean.LoginParams) -> login
    com.hxgwx.www.bean.BaseBean register(com.hxgwx.www.bean.RegisterParams) -> register
    com.hxgwx.www.bean.ArticTypeList queryArticType() -> queryArticType
    com.hxgwx.www.bean.ArticList queryArticList(java.lang.String,int,int) -> queryArticList
    com.hxgwx.www.bean.ArticBody queryArtic(java.lang.String) -> queryArtic
    com.hxgwx.www.bean.ArticList recommend(int,int) -> recommend
    com.hxgwx.www.bean.ArticList ranking(int,int) -> ranking
    com.hxgwx.www.bean.ArticList myarticle(java.lang.String,int,int) -> myarticle
    com.hxgwx.www.bean.ArticList search(java.lang.String) -> search
    com.hxgwx.www.bean.BaseBean publicArc(com.hxgwx.www.bean.SendARCBody) -> publicArc
    com.hxgwx.www.bean.CheckVersionBean checkVersion(java.lang.String) -> checkVersion
com.hxgwx.www.webimpl.WebPlusImpl -> com.hxgwx.www.webimpl.WebPlusImpl:
    com.hxgwx.www.http.HttpUtils http -> http
    com.hxgwx.www.HongxianggeApplication application -> application
    com.hxgwx.www.bean.UserLogin login(com.hxgwx.www.bean.LoginParams) -> login
    com.hxgwx.www.bean.BaseBean register(com.hxgwx.www.bean.RegisterParams) -> register
    com.hxgwx.www.bean.ArticTypeList queryArticType() -> queryArticType
    com.hxgwx.www.bean.ArticList queryArticList(java.lang.String,int,int) -> queryArticList
    com.hxgwx.www.bean.ArticBody queryArtic(java.lang.String) -> queryArtic
    com.hxgwx.www.bean.ArticList recommend(int,int) -> recommend
    com.hxgwx.www.bean.ArticList ranking(int,int) -> ranking
    com.hxgwx.www.bean.ArticList myarticle(java.lang.String,int,int) -> myarticle
    com.hxgwx.www.bean.ArticList search(java.lang.String) -> search
    com.hxgwx.www.bean.BaseBean publicArc(com.hxgwx.www.bean.SendARCBody) -> publicArc
    com.hxgwx.www.bean.CheckVersionBean checkVersion(java.lang.String) -> checkVersion
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove -> com.jeremyfeinstein.slidingmenu.lib.a:
    android.view.animation.Interpolator sInterpolator -> e
    android.view.View mContent -> f
    int mCurItem -> g
    android.widget.Scroller mScroller -> h
    boolean mScrollingCacheEnabled -> i
    boolean mScrolling -> j
    boolean mIsBeingDragged -> k
    boolean mIsUnableToDrag -> l
    int mTouchSlop -> m
    float mInitialMotionX -> n
    float mLastMotionX -> o
    float mLastMotionY -> p
    int mActivePointerId -> a
    android.view.VelocityTracker mVelocityTracker -> b
    int mMinimumVelocity -> q
    int mMaximumVelocity -> c
    int mFlingDistance -> r
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind mViewBehind -> s
    boolean mEnabled -> t
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mOnPageChangeListener -> u
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener -> v
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener mClosedListener -> w
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener mOpenedListener -> x
    java.util.List mIgnoredViews -> y
    int mTouchMode -> d
    boolean mQuickReturn -> z
    float mScrollX -> A
    void initCustomViewAbove() -> a
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setOnPageChangeListener
    void setOnOpenedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener setInternalPageChangeListener(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    int getDestScrollX(int) -> a
    int getLeftBound() -> getLeftBound
    int getRightBound() -> getRightBound
    int getContentLeft() -> getContentLeft
    boolean isMenuOpen() -> b
    boolean isInIgnoredView(android.view.MotionEvent) -> a
    int getBehindWidth() -> getBehindWidth
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void smoothScrollTo(int,int,int) -> a
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setCustomViewBehind(com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind) -> setCustomViewBehind
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setAboveOffset(int) -> setAboveOffset
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> c
    void onPageScrolled(int,float,int) -> a
    void completeScroll() -> e
    void setTouchMode(int) -> setTouchMode
    int getTouchMode() -> getTouchMode
    boolean thisTouchAllowed(android.view.MotionEvent) -> b
    boolean thisSlideAllowed(float) -> b
    int getPointerIndex(android.view.MotionEvent,int) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void determineDrag(android.view.MotionEvent) -> c
    void scrollTo(int,int) -> scrollTo
    int determineTargetPage(float,int,int) -> a
    float getPercentOpen() -> getPercentOpen
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> d
    void startDrag() -> f
    void endDrag() -> g
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> b
    boolean pageLeft() -> c
    boolean pageRight() -> d
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind access$0(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove) -> a
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$1 -> com.jeremyfeinstein.slidingmenu.lib.b:
    float getInterpolation(float) -> getInterpolation
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$2 -> com.jeremyfeinstein.slidingmenu.lib.c:
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove this$0 -> a
    void onPageSelected(int) -> a
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener -> com.jeremyfeinstein.slidingmenu.lib.d:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener -> com.jeremyfeinstein.slidingmenu.lib.e:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind -> com.jeremyfeinstein.slidingmenu.lib.f:
    int mTouchMode -> a
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove mViewAbove -> b
    android.view.View mContent -> c
    android.view.View mSecondaryContent -> d
    int mMarginThreshold -> e
    int mWidthOffset -> f
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer mTransformer -> g
    boolean mChildrenEnabled -> h
    int mMode -> i
    boolean mFadeEnabled -> j
    float mFadeDegree -> k
    android.graphics.Paint mFadePaint -> l
    float mScrollScale -> m
    android.graphics.drawable.Drawable mShadowDrawable -> n
    android.graphics.drawable.Drawable mSecondaryShadowDrawable -> o
    int mShadowWidth -> p
    boolean mSelectorEnabled -> q
    android.graphics.Bitmap mSelectorDrawable -> r
    android.view.View mSelectedView -> s
    void setCustomViewAbove(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove) -> setCustomViewAbove
    void setCanvasTransformer(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setCanvasTransformer
    void setWidthOffset(int) -> setWidthOffset
    void setMarginThreshold(int) -> setMarginThreshold
    int getMarginThreshold() -> getMarginThreshold
    int getBehindWidth() -> getBehindWidth
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setSecondaryContent(android.view.View) -> setSecondaryContent
    android.view.View getSecondaryContent() -> getSecondaryContent
    void setChildrenEnabled(boolean) -> setChildrenEnabled
    void scrollTo(int,int) -> scrollTo
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setScrollScale(float) -> setScrollScale
    float getScrollScale() -> getScrollScale
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    int getMenuPage(int) -> a
    void scrollBehindTo(android.view.View,int,int) -> a
    int getMenuLeft(android.view.View,int) -> a
    int getAbsLeftBound(android.view.View) -> a
    int getAbsRightBound(android.view.View) -> b
    boolean marginTouchAllowed(android.view.View,int) -> b
    void setTouchMode(int) -> setTouchMode
    boolean menuOpenTouchAllowed(android.view.View,int,float) -> a
    boolean menuTouchInQuickReturn(android.view.View,int,float) -> b
    boolean menuClosedSlideAllowed(float) -> a
    boolean menuOpenSlideAllowed(float) -> b
    void drawShadow(android.view.View,android.graphics.Canvas) -> a
    void drawFade(android.view.View,android.graphics.Canvas,float) -> a
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> b
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    int getSelectorTop() -> getSelectorTop
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
com.jeremyfeinstein.slidingmenu.lib.R -> com.jeremyfeinstein.slidingmenu.lib.g:
com.jeremyfeinstein.slidingmenu.lib.R$id -> com.jeremyfeinstein.slidingmenu.lib.h:
    int fullscreen -> fullscreen
    int left -> left
    int margin -> margin
    int right -> right
    int selected_view -> selected_view
    int slidingmenumain -> slidingmenumain
com.jeremyfeinstein.slidingmenu.lib.R$layout -> com.jeremyfeinstein.slidingmenu.lib.i:
    int slidingmenumain -> slidingmenumain
com.jeremyfeinstein.slidingmenu.lib.R$styleable -> com.jeremyfeinstein.slidingmenu.lib.j:
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu:
    boolean mActionbarOverlay -> a
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove mViewAbove -> b
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind mViewBehind -> c
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener mOpenListener -> d
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener mCloseListener -> e
    android.os.Handler mHandler -> f
    void attachToActivity(android.app.Activity,int) -> a
    void attachToActivity(android.app.Activity,int,boolean) -> a
    void setContent(int) -> setContent
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setMenu(int) -> setMenu
    void setMenu(android.view.View) -> setMenu
    android.view.View getMenu() -> getMenu
    void setSecondaryMenu(int) -> setSecondaryMenu
    void setSecondaryMenu(android.view.View) -> setSecondaryMenu
    android.view.View getSecondaryMenu() -> getSecondaryMenu
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setStatic(boolean) -> setStatic
    void showMenu() -> a
    void showMenu(boolean) -> a
    void showSecondaryMenu() -> b
    void showSecondaryMenu(boolean) -> b
    void showContent() -> c
    void showContent(boolean) -> c
    void toggle() -> d
    void toggle(boolean) -> d
    boolean isMenuShowing() -> e
    boolean isSecondaryMenuShowing() -> f
    int getBehindOffset() -> getBehindOffset
    void setBehindOffset(int) -> setBehindOffset
    void setBehindOffsetRes(int) -> setBehindOffsetRes
    void setAboveOffset(int) -> setAboveOffset
    void setAboveOffsetRes(int) -> setAboveOffsetRes
    void setBehindWidth(int) -> setBehindWidth
    void setBehindWidthRes(int) -> setBehindWidthRes
    float getBehindScrollScale() -> getBehindScrollScale
    void setBehindScrollScale(float) -> setBehindScrollScale
    int getTouchmodeMarginThreshold() -> getTouchmodeMarginThreshold
    void setTouchmodeMarginThreshold(int) -> setTouchmodeMarginThreshold
    void setBehindCanvasTransformer(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setBehindCanvasTransformer
    int getTouchModeAbove() -> getTouchModeAbove
    void setTouchModeAbove(int) -> setTouchModeAbove
    void setTouchModeBehind(int) -> setTouchModeBehind
    void setShadowDrawable(int) -> setShadowDrawable
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(int) -> setSecondaryShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidthRes(int) -> setShadowWidthRes
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    void setSelectorDrawable(int) -> setSelectorDrawable
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
    void setOnOpenListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener) -> setOnOpenListener
    void setOnCloseListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener) -> setOnCloseListener
    void setOnOpenedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void manageLayers(float) -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener access$0(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu) -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener access$1(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu) -> b
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$1 -> com.jeremyfeinstein.slidingmenu.lib.k:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$2 -> com.jeremyfeinstein.slidingmenu.lib.l:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu this$0 -> a
    int val$layerType -> b
    void run() -> run
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer -> com.jeremyfeinstein.slidingmenu.lib.m:
    void transformCanvas(android.graphics.Canvas,float) -> a
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener -> com.jeremyfeinstein.slidingmenu.lib.n:
    void onClose() -> a
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener -> com.jeremyfeinstein.slidingmenu.lib.o:
    void onClosed() -> a
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener -> com.jeremyfeinstein.slidingmenu.lib.p:
    void onOpen() -> onOpen
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener -> com.jeremyfeinstein.slidingmenu.lib.q:
    void onOpened() -> onOpened
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState:
    int mItem -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getItem() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState$1 -> com.jeremyfeinstein.slidingmenu.lib.r:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState createFromParcel(android.os.Parcel) -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivity -> com.jeremyfeinstein.slidingmenu.lib.a.a:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper -> com.jeremyfeinstein.slidingmenu.lib.a.b:
    android.app.Activity mActivity -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu mSlidingMenu -> b
    android.view.View mViewAbove -> c
    android.view.View mViewBehind -> d
    boolean mBroadcasting -> e
    boolean mOnPostCreateCalled -> f
    boolean mEnableSlide -> g
    void onCreate(android.os.Bundle) -> a
    void onPostCreate(android.os.Bundle) -> b
    void setSlidingActionBarEnabled(boolean) -> a
    android.view.View findViewById(int) -> a
    void onSaveInstanceState(android.os.Bundle) -> c
    void registerAboveContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> a
    void toggle() -> b
    void showContent() -> c
    void showMenu() -> d
    void showSecondaryMenu() -> e
    boolean onKeyUp(int,android.view.KeyEvent) -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu access$0(com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper) -> a
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper$1 -> com.jeremyfeinstein.slidingmenu.lib.a.c:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper this$0 -> a
    boolean val$open -> b
    boolean val$secondary -> c
    void run() -> run
com.jingzhong.asyntask2.Asyntask2 -> com.c.a.a:
    int POST_FINSH -> POST_FINSH
    int POST_PROGRESS -> POST_PROGRESS
    java.lang.Thread thread -> thread
    com.jingzhong.asyntask2.Asyntask2$internalHandler sHandler -> sHandler
    boolean isCancel -> isCancel
    void init() -> init
    java.lang.Object doInbackProgres(java.lang.Object[]) -> doInbackProgres
    void doProgress(java.lang.Object[]) -> doProgress
    void doResult(java.lang.Object) -> doResult
    void cancel() -> cancel
    boolean isCancel() -> isCancel
    void setCancel(boolean) -> setCancel
    void finsh(java.lang.Object) -> finsh
    void onPostProgress(java.lang.Object[]) -> onPostProgress
    void updateProgress(java.lang.Object[]) -> updateProgress
    void execute(java.lang.Object[]) -> execute
    void access$0(com.jingzhong.asyntask2.Asyntask2,java.lang.Object) -> access$0
    void access$1(com.jingzhong.asyntask2.Asyntask2,java.lang.Object[]) -> access$1
    com.jingzhong.asyntask2.Asyntask2$internalHandler access$2() -> access$2
com.jingzhong.asyntask2.Asyntask2$1 -> com.c.a.b:
    com.jingzhong.asyntask2.Asyntask2 this$0 -> a
    java.lang.Object[] val$params -> b
    void run() -> run
com.jingzhong.asyntask2.Asyntask2$AsynTaskResult -> com.c.a.c:
    java.lang.Object[] mData -> a
    com.jingzhong.asyntask2.Asyntask2 mTask -> b
com.jingzhong.asyntask2.Asyntask2$internalHandler -> com.c.a.d:
    void handleMessage(android.os.Message) -> handleMessage
com.jingzhong.asyntask2.annotation.CreateView -> com.c.a.a.a:
    java.lang.String value() -> a
com.jingzhong.asyntask2.utils.FileNameFilterUtils -> com.c.a.b.a:
    java.lang.String reg -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.jingzhong.asyntask2.utils.HttpUtils -> com.c.a.b.b:
    int fialeLenth -> a
    com.jingzhong.asyntask2.utils.HttpUtils$OnNetListenear onNetListenear -> b
    com.jingzhong.asyntask2.utils.HttpUtils getInstance() -> a
    java.util.Map exeGet(java.lang.String) -> a
com.jingzhong.asyntask2.utils.HttpUtils$OnNetListenear -> com.c.a.b.c:
    void onlistenear(int) -> a
com.jingzhong.asyntask2.utils.ThreadService -> com.c.a.b.d:
    int cpuNum -> b
    com.jingzhong.asyntask2.utils.ThreadService instance -> c
    int THREADNUM -> d
    int MAXTHREADNUM -> e
    int newThreadNum -> f
    java.util.concurrent.ExecutorService executorService -> g
    java.util.Queue invokeQueue -> h
    java.util.Stack mQueue -> i
    java.util.LinkedList residentTask -> j
    boolean isRuning -> a
    com.jingzhong.asyntask2.utils.ThreadService getInstance() -> a
    void executeThread(java.lang.Thread) -> a
    java.util.Queue access$0(com.jingzhong.asyntask2.utils.ThreadService) -> a
    java.util.Stack access$1(com.jingzhong.asyntask2.utils.ThreadService) -> b
    java.util.concurrent.ExecutorService access$2(com.jingzhong.asyntask2.utils.ThreadService) -> c
    java.util.LinkedList access$3(com.jingzhong.asyntask2.utils.ThreadService) -> d
    void access$4(com.jingzhong.asyntask2.utils.ThreadService,int) -> a
    int access$5(com.jingzhong.asyntask2.utils.ThreadService) -> e
com.jingzhong.asyntask2.utils.ThreadService$CpuFilter -> com.c.a.b.e:
    com.jingzhong.asyntask2.utils.ThreadService this$0 -> a
    boolean accept(java.io.File) -> accept
com.jingzhong.asyntask2.utils.ThreadService$TaskManager -> com.c.a.b.f:
    com.jingzhong.asyntask2.utils.ThreadService this$0 -> a
    void run() -> run
com.jingzhong.asyntask2.utils.Utils -> com.c.a.b.g:
    boolean hideInputMethod(android.content.Context,android.view.View) -> a
    int findId(java.lang.String,java.lang.Class) -> a
    void injectObject(java.lang.Object,android.app.Activity,java.lang.Class) -> a
    void injectObject(java.lang.Object,android.view.View,java.lang.Class) -> a
    java.lang.String getMyUUID() -> a
    java.lang.String autoSetPhoneMoberId(android.content.Context) -> a
    void showLongToast(android.content.Context,java.lang.String) -> a
    void gotoActivity(android.content.Context,java.lang.Class,android.content.Intent) -> a
    void showProgress(android.app.ProgressDialog,java.lang.String,android.view.View) -> a
    void cancelProgress(android.app.ProgressDialog) -> a
    java.lang.String checkFilePath(java.lang.String,android.content.Context,java.lang.String) -> a
com.lidroid.xutils.DbUtils -> com.d.a.a:
    java.util.HashMap daoMap -> a
    android.database.sqlite.SQLiteDatabase database -> b
    com.lidroid.xutils.DbUtils$DaoConfig daoConfig -> c
    boolean debug -> d
    boolean allowTransaction -> e
    java.util.concurrent.locks.Lock writeLock -> f
    boolean writeLocked -> g
    com.lidroid.xutils.DbUtils$FindTempCache findTempCache -> h
    com.lidroid.xutils.DbUtils getInstance(com.lidroid.xutils.DbUtils$DaoConfig) -> a
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,int,com.lidroid.xutils.DbUtils$DbUpgradeListener) -> a
    com.lidroid.xutils.DbUtils$DaoConfig getDaoConfig() -> a
    void saveOrUpdate(java.lang.Object) -> a
    void saveOrUpdateAll(java.util.List) -> a
    void save(java.lang.Object) -> b
    void deleteById(java.lang.Class,java.lang.Object) -> a
    void delete(java.lang.Object) -> c
    java.lang.Object findById(java.lang.Class,java.lang.Object) -> b
    java.lang.Object findFirst(com.lidroid.xutils.db.sqlite.Selector) -> a
    java.util.List findAll(com.lidroid.xutils.db.sqlite.Selector) -> b
    android.database.sqlite.SQLiteDatabase createDatabase(com.lidroid.xutils.DbUtils$DaoConfig) -> b
    void saveOrUpdateWithoutTransaction(java.lang.Object) -> d
    boolean saveBindingIdWithoutTransaction(java.lang.Object) -> e
    long getLastAutoIncrementId(java.lang.String) -> c
    void createTableIfNotExist(java.lang.Class) -> a
    boolean tableIsExist(java.lang.Class) -> b
    void dropDb() -> b
    void debugSql(java.lang.String) -> d
    void beginTransaction() -> c
    void setTransactionSuccessful() -> d
    void endTransaction() -> e
    void execNonQuery(com.lidroid.xutils.db.sqlite.SqlInfo) -> a
    void execNonQuery(java.lang.String) -> a
    android.database.Cursor execQuery(java.lang.String) -> b
com.lidroid.xutils.DbUtils$DaoConfig -> com.d.a.b:
    android.content.Context context -> a
    java.lang.String dbName -> b
    int dbVersion -> c
    com.lidroid.xutils.DbUtils$DbUpgradeListener dbUpgradeListener -> d
    java.lang.String dbDir -> e
    android.content.Context getContext() -> a
    java.lang.String getDbName() -> b
    void setDbName(java.lang.String) -> a
    int getDbVersion() -> c
    void setDbVersion(int) -> a
    com.lidroid.xutils.DbUtils$DbUpgradeListener getDbUpgradeListener() -> d
    void setDbUpgradeListener(com.lidroid.xutils.DbUtils$DbUpgradeListener) -> a
    java.lang.String getDbDir() -> e
com.lidroid.xutils.DbUtils$DbUpgradeListener -> com.d.a.c:
    void onUpgrade(com.lidroid.xutils.DbUtils,int,int) -> onUpgrade
com.lidroid.xutils.DbUtils$FindTempCache -> com.d.a.d:
    java.util.concurrent.ConcurrentHashMap cache -> b
    long seq -> c
    com.lidroid.xutils.DbUtils this$0 -> a
    void put(java.lang.String,java.lang.Object) -> a
    java.lang.Object get(java.lang.String) -> a
    void setSeq(long) -> a
com.lidroid.xutils.db.annotation.Check -> com.d.a.a.a.a:
    java.lang.String value() -> a
com.lidroid.xutils.db.annotation.Column -> com.d.a.a.a.b:
    java.lang.String column() -> a
    java.lang.String defaultValue() -> b
com.lidroid.xutils.db.annotation.Finder -> com.d.a.a.a.c:
    java.lang.String valueColumn() -> a
    java.lang.String targetColumn() -> b
com.lidroid.xutils.db.annotation.Foreign -> com.d.a.a.a.d:
    java.lang.String column() -> a
    java.lang.String foreign() -> b
com.lidroid.xutils.db.annotation.Id -> com.d.a.a.a.e:
    java.lang.String column() -> a
com.lidroid.xutils.db.annotation.NoAutoIncrement -> com.d.a.a.a.f:
com.lidroid.xutils.db.annotation.NotNull -> com.d.a.a.a.g:
com.lidroid.xutils.db.annotation.Table -> com.d.a.a.a.h:
    java.lang.String name() -> a
    java.lang.String execAfterTableCreated() -> b
com.lidroid.xutils.db.annotation.Transient -> com.d.a.a.a.i:
com.lidroid.xutils.db.annotation.Unique -> com.d.a.a.a.j:
com.lidroid.xutils.db.converter.BooleanColumnConverter -> com.d.a.a.b.a:
    java.lang.Boolean getFieldValue(android.database.Cursor,int) -> a
    java.lang.Boolean getFieldValue(java.lang.String) -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Boolean) -> a
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> a
    java.lang.Object getFieldValue(java.lang.String) -> b
    java.lang.Object getFieldValue(android.database.Cursor,int) -> b
com.lidroid.xutils.db.converter.ByteArrayColumnConverter -> com.d.a.a.b.b:
    byte[] getFieldValue(android.database.Cursor,int) -> a
    byte[] getFieldValue(java.lang.String) -> a
    java.lang.Object fieldValue2ColumnValue(byte[]) -> a
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> a
    java.lang.Object getFieldValue(java.lang.String) -> b
    java.lang.Object getFieldValue(android.database.Cursor,int) -> b
com.lidroid.xutils.db.converter.ByteColumnConverter -> com.d.a.a.b.c:
    java.lang.Byte getFieldValue(android.database.Cursor,int) -> a
    java.lang.Byte getFieldValue(java.lang.String) -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Byte) -> a
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> a
    java.lang.Object getFieldValue(java.lang.String) -> b
    java.lang.Object getFieldValue(android.database.Cursor,int) -> b
com.lidroid.xutils.db.converter.CharColumnConverter -> com.d.a.a.b.d:
    java.lang.Character getFieldValue(android.database.Cursor,int) -> a
    java.lang.Character getFieldValue(java.lang.String) -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Character) -> a
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> a
    java.lang.Object getFieldValue(java.lang.String) -> b
    java.lang.Object getFieldValue(android.database.Cursor,int) -> b
com.lidroid.xutils.db.converter.ColumnConverter -> com.d.a.a.b.e:
    java.lang.Object getFieldValue(android.database.Cursor,int) -> b
    java.lang.Object getFieldValue(java.lang.String) -> b
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> a
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> a
com.lidroid.xutils.db.converter.ColumnConverterFactory -> com.d.a.a.b.f:
    java.util.concurrent.ConcurrentHashMap columnType_columnConverter_map -> a
    com.lidroid.xutils.db.converter.ColumnConverter getColumnConverter(java.lang.Class) -> a
    com.lidroid.xutils.db.sqlite.ColumnDbType getDbColumnType(java.lang.Class) -> b
    boolean isSupportColumnConverter(java.lang.Class) -> c
com.lidroid.xutils.db.converter.DateColumnConverter -> com.d.a.a.b.g:
    java.util.Date getFieldValue(android.database.Cursor,int) -> a
    java.util.Date getFieldValue(java.lang.String) -> a
    java.lang.Object fieldValue2ColumnValue(java.util.Date) -> a
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> a
    java.lang.Object getFieldValue(java.lang.String) -> b
    java.lang.Object getFieldValue(android.database.Cursor,int) -> b
com.lidroid.xutils.db.converter.DoubleColumnConverter -> com.d.a.a.b.h:
    java.lang.Double getFieldValue(android.database.Cursor,int) -> a
    java.lang.Double getFieldValue(java.lang.String) -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Double) -> a
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> a
    java.lang.Object getFieldValue(java.lang.String) -> b
    java.lang.Object getFieldValue(android.database.Cursor,int) -> b
com.lidroid.xutils.db.converter.FloatColumnConverter -> com.d.a.a.b.i:
    java.lang.Float getFieldValue(android.database.Cursor,int) -> a
    java.lang.Float getFieldValue(java.lang.String) -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Float) -> a
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> a
    java.lang.Object getFieldValue(java.lang.String) -> b
    java.lang.Object getFieldValue(android.database.Cursor,int) -> b
com.lidroid.xutils.db.converter.IntegerColumnConverter -> com.d.a.a.b.j:
    java.lang.Integer getFieldValue(android.database.Cursor,int) -> a
    java.lang.Integer getFieldValue(java.lang.String) -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Integer) -> a
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> a
    java.lang.Object getFieldValue(java.lang.String) -> b
    java.lang.Object getFieldValue(android.database.Cursor,int) -> b
com.lidroid.xutils.db.converter.LongColumnConverter -> com.d.a.a.b.k:
    java.lang.Long getFieldValue(android.database.Cursor,int) -> a
    java.lang.Long getFieldValue(java.lang.String) -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Long) -> a
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> a
    java.lang.Object getFieldValue(java.lang.String) -> b
    java.lang.Object getFieldValue(android.database.Cursor,int) -> b
com.lidroid.xutils.db.converter.ShortColumnConverter -> com.d.a.a.b.l:
    java.lang.Short getFieldValue(android.database.Cursor,int) -> a
    java.lang.Short getFieldValue(java.lang.String) -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Short) -> a
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> a
    java.lang.Object getFieldValue(java.lang.String) -> b
    java.lang.Object getFieldValue(android.database.Cursor,int) -> b
com.lidroid.xutils.db.converter.SqlDateColumnConverter -> com.d.a.a.b.m:
    java.sql.Date getFieldValue(android.database.Cursor,int) -> a
    java.sql.Date getFieldValue(java.lang.String) -> a
    java.lang.Object fieldValue2ColumnValue(java.sql.Date) -> a
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> a
    java.lang.Object getFieldValue(java.lang.String) -> b
    java.lang.Object getFieldValue(android.database.Cursor,int) -> b
com.lidroid.xutils.db.converter.StringColumnConverter -> com.d.a.a.b.n:
    java.lang.String getFieldValue(android.database.Cursor,int) -> a
    java.lang.String getFieldValue(java.lang.String) -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.String) -> c
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> a
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> a
    java.lang.Object getFieldValue(java.lang.String) -> b
    java.lang.Object getFieldValue(android.database.Cursor,int) -> b
com.lidroid.xutils.db.sqlite.ColumnDbType -> com.d.a.a.c.a:
    com.lidroid.xutils.db.sqlite.ColumnDbType INTEGER -> a
    com.lidroid.xutils.db.sqlite.ColumnDbType REAL -> b
    com.lidroid.xutils.db.sqlite.ColumnDbType TEXT -> c
    com.lidroid.xutils.db.sqlite.ColumnDbType BLOB -> d
    java.lang.String value -> e
    com.lidroid.xutils.db.sqlite.ColumnDbType[] ENUM$VALUES -> f
    java.lang.String toString() -> toString
    com.lidroid.xutils.db.sqlite.ColumnDbType[] values() -> values
    com.lidroid.xutils.db.sqlite.ColumnDbType valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.db.sqlite.CursorUtils -> com.d.a.a.c.b:
    java.lang.Object getEntity(com.lidroid.xutils.DbUtils,android.database.Cursor,java.lang.Class,long) -> a
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache -> com.d.a.a.c.c:
    java.util.concurrent.ConcurrentHashMap cache -> a
    long seq -> b
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Class,java.lang.Object) -> a
    void setSeq(long) -> a
com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence -> com.d.a.a.c.d:
    long seq -> a
    java.lang.String FOREIGN_LAZY_LOADER_CLASS_NAME -> b
    java.lang.String FINDER_LAZY_LOADER_CLASS_NAME -> c
    long getSeq() -> a
com.lidroid.xutils.db.sqlite.FinderLazyLoader -> com.d.a.a.c.e:
    com.lidroid.xutils.db.table.Finder finderColumn -> a
    java.lang.Object finderValue -> b
    java.util.List getAllFromDb() -> a
    java.lang.Object getFirstFromDb() -> b
com.lidroid.xutils.db.sqlite.ForeignLazyLoader -> com.d.a.a.c.f:
    com.lidroid.xutils.db.table.Foreign foreignColumn -> a
    java.lang.Object columnValue -> b
    java.util.List getAllFromDb() -> a
    java.lang.Object getFirstFromDb() -> b
    java.lang.Object getColumnValue() -> c
com.lidroid.xutils.db.sqlite.Selector -> com.d.a.a.c.g:
    java.lang.Class entityType -> a
    java.lang.String tableName -> b
    com.lidroid.xutils.db.sqlite.WhereBuilder whereBuilder -> c
    java.util.List orderByList -> d
    int limit -> e
    int offset -> f
    com.lidroid.xutils.db.sqlite.Selector from(java.lang.Class) -> a
    com.lidroid.xutils.db.sqlite.Selector where(java.lang.String,java.lang.String,java.lang.Object) -> a
    com.lidroid.xutils.db.sqlite.Selector and(java.lang.String,java.lang.String,java.lang.Object) -> b
    com.lidroid.xutils.db.sqlite.Selector orderBy(java.lang.String,boolean) -> a
    com.lidroid.xutils.db.sqlite.Selector limit(int) -> a
    com.lidroid.xutils.db.sqlite.Selector offset(int) -> b
    java.lang.String toString() -> toString
    java.lang.Class getEntityType() -> a
com.lidroid.xutils.db.sqlite.Selector$OrderBy -> com.d.a.a.c.h:
    java.lang.String columnName -> b
    boolean desc -> c
    com.lidroid.xutils.db.sqlite.Selector this$0 -> a
    java.lang.String toString() -> toString
com.lidroid.xutils.db.sqlite.SqlInfo -> com.d.a.a.c.i:
    java.lang.String sql -> a
    java.util.LinkedList bindArgs -> b
    java.lang.String getSql() -> a
    void setSql(java.lang.String) -> a
    java.util.LinkedList getBindArgs() -> b
    java.lang.Object[] getBindArgsAsArray() -> c
    void addBindArgWithoutConverter(java.lang.Object) -> a
com.lidroid.xutils.db.sqlite.SqlInfoBuilder -> com.d.a.a.c.j:
    com.lidroid.xutils.db.sqlite.SqlInfo buildInsertSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> a
    com.lidroid.xutils.db.sqlite.SqlInfo buildReplaceSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> b
    java.lang.String buildDeleteSqlByTableName(java.lang.String) -> a
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> c
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class,java.lang.Object) -> a
    com.lidroid.xutils.db.sqlite.SqlInfo buildUpdateSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object,java.lang.String[]) -> a
    com.lidroid.xutils.db.sqlite.SqlInfo buildCreateTableSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class) -> a
    com.lidroid.xutils.db.table.KeyValue column2KeyValue(java.lang.Object,com.lidroid.xutils.db.table.Column) -> a
    java.util.List entity2KeyValueList(com.lidroid.xutils.DbUtils,java.lang.Object) -> d
com.lidroid.xutils.db.sqlite.WhereBuilder -> com.d.a.a.c.k:
    java.util.List whereItems -> a
    com.lidroid.xutils.db.sqlite.WhereBuilder b(java.lang.String,java.lang.String,java.lang.Object) -> a
    com.lidroid.xutils.db.sqlite.WhereBuilder and(java.lang.String,java.lang.String,java.lang.Object) -> b
    int getWhereItemSize() -> a
    java.lang.String toString() -> toString
    void appendCondition(java.lang.String,java.lang.String,java.lang.String,java.lang.Object) -> a
com.lidroid.xutils.db.table.Column -> com.d.a.a.d.a:
    com.lidroid.xutils.db.table.Table table -> f
    int index -> g
    java.lang.String columnName -> a
    java.lang.Object defaultValue -> h
    java.lang.reflect.Method getMethod -> b
    java.lang.reflect.Method setMethod -> c
    java.lang.reflect.Field columnField -> d
    com.lidroid.xutils.db.converter.ColumnConverter columnConverter -> e
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> a
    java.lang.Object getColumnValue(java.lang.Object) -> a
    java.lang.Object getFieldValue(java.lang.Object) -> b
    com.lidroid.xutils.db.table.Table getTable() -> a
    void setTable(com.lidroid.xutils.db.table.Table) -> a
    int getIndex() -> b
    java.lang.String getColumnName() -> c
    java.lang.Object getDefaultValue() -> d
    java.lang.reflect.Field getColumnField() -> e
    com.lidroid.xutils.db.converter.ColumnConverter getColumnConverter() -> f
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> g
com.lidroid.xutils.db.table.ColumnUtils -> com.d.a.a.d.b:
    java.util.HashSet DB_PRIMITIVE_TYPES -> a
    boolean isDbPrimitiveType(java.lang.Class) -> a
    java.lang.reflect.Method getColumnGetMethod(java.lang.Class,java.lang.reflect.Field) -> a
    java.lang.reflect.Method getColumnSetMethod(java.lang.Class,java.lang.reflect.Field) -> b
    java.lang.String getColumnNameByField(java.lang.reflect.Field) -> a
    java.lang.String getForeignColumnNameByField(java.lang.reflect.Field) -> b
    java.lang.String getColumnDefaultValue(java.lang.reflect.Field) -> c
    boolean isTransient(java.lang.reflect.Field) -> d
    boolean isForeign(java.lang.reflect.Field) -> e
    boolean isFinder(java.lang.reflect.Field) -> f
    boolean isUnique(java.lang.reflect.Field) -> g
    boolean isNotNull(java.lang.reflect.Field) -> h
    java.lang.String getCheck(java.lang.reflect.Field) -> i
    java.lang.Class getForeignEntityType(com.lidroid.xutils.db.table.Foreign) -> a
    java.lang.Class getFinderTargetEntityType(com.lidroid.xutils.db.table.Finder) -> a
    java.lang.Object convert2DbColumnValueIfNeeded(java.lang.Object) -> a
    boolean isStartWithIs(java.lang.String) -> a
    java.lang.reflect.Method getBooleanColumnGetMethod(java.lang.Class,java.lang.String) -> a
    java.lang.reflect.Method getBooleanColumnSetMethod(java.lang.Class,java.lang.reflect.Field) -> c
com.lidroid.xutils.db.table.Finder -> com.d.a.a.d.c:
    java.lang.String valueColumnName -> f
    java.lang.String targetColumnName -> g
    java.lang.Class getTargetEntityType() -> h
    java.lang.String getTargetColumnName() -> i
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> a
    java.lang.Object getColumnValue(java.lang.Object) -> a
    java.lang.Object getDefaultValue() -> d
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> g
com.lidroid.xutils.db.table.Foreign -> com.d.a.a.d.d:
    java.lang.String foreignColumnName -> f
    com.lidroid.xutils.db.converter.ColumnConverter foreignColumnConverter -> g
    java.lang.String getForeignColumnName() -> h
    java.lang.Class getForeignEntityType() -> i
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> a
    java.lang.Object getColumnValue(java.lang.Object) -> a
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> g
    java.lang.Object getDefaultValue() -> d
com.lidroid.xutils.db.table.Id -> com.d.a.a.d.e:
    java.lang.String columnFieldClassName -> f
    boolean isAutoIncrementChecked -> g
    boolean isAutoIncrement -> h
    java.util.HashSet INTEGER_TYPES -> i
    java.util.HashSet AUTO_INCREMENT_TYPES -> j
    boolean isAutoIncrement() -> h
    void setAutoIncrementId(java.lang.Object,long) -> a
    java.lang.Object getColumnValue(java.lang.Object) -> a
com.lidroid.xutils.db.table.KeyValue -> com.d.a.a.d.f:
    java.lang.String key -> a
    java.lang.Object value -> b
com.lidroid.xutils.db.table.Table -> com.d.a.a.d.g:
    com.lidroid.xutils.DbUtils db -> a
    java.lang.String tableName -> b
    com.lidroid.xutils.db.table.Id id -> c
    java.util.HashMap columnMap -> d
    java.util.HashMap finderMap -> e
    java.util.HashMap tableMap -> f
    boolean checkedDatabase -> g
    com.lidroid.xutils.db.table.Table get(com.lidroid.xutils.DbUtils,java.lang.Class) -> a
    void remove(com.lidroid.xutils.DbUtils,java.lang.String) -> a
    boolean isCheckedDatabase() -> a
    void setCheckedDatabase(boolean) -> a
com.lidroid.xutils.db.table.TableUtils -> com.d.a.a.d.h:
    java.util.concurrent.ConcurrentHashMap entityColumnsMap -> a
    java.util.concurrent.ConcurrentHashMap entityIdMap -> b
    java.lang.String getTableName(java.lang.Class) -> a
    java.lang.String getExecAfterTableCreated(java.lang.Class) -> b
    java.util.HashMap getColumnMap(java.lang.Class) -> c
    void addColumns2Map(java.lang.Class,java.lang.String,java.util.HashMap) -> a
    com.lidroid.xutils.db.table.Column getColumnOrId(java.lang.Class,java.lang.String) -> a
    com.lidroid.xutils.db.table.Id getId(java.lang.Class) -> d
    java.lang.String getPrimaryKeyFieldName(java.lang.Class) -> e
    java.lang.String getPrimaryKeyColumnName(java.lang.Class) -> f
com.lidroid.xutils.exception.BaseException -> com.d.a.b.a:
com.lidroid.xutils.exception.DbException -> com.d.a.b.b:
com.lidroid.xutils.util.IOUtils -> com.d.a.c.a:
    void closeQuietly(android.database.Cursor) -> a
com.lidroid.xutils.util.LogUtils -> com.d.a.c.b:
    java.lang.String customTagPrefix -> a
    boolean allowD -> b
    boolean allowE -> c
    boolean allowI -> d
    boolean allowV -> e
    boolean allowW -> f
    boolean allowWtf -> g
    com.lidroid.xutils.util.LogUtils$CustomLogger customLogger -> h
    java.lang.String generateTag(java.lang.StackTraceElement) -> a
    void d(java.lang.String) -> a
    void e(java.lang.String,java.lang.Throwable) -> a
com.lidroid.xutils.util.LogUtils$CustomLogger -> com.d.a.c.c:
    void d(java.lang.String,java.lang.String) -> a
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> a
com.lidroid.xutils.util.OtherUtils -> com.d.a.c.d:
    java.lang.StackTraceElement getCallerStackTraceElement() -> a
com.umeng.analytics.AnalyticsConfig -> com.umeng.a.a:
    java.lang.String a -> m
    java.lang.String b -> n
    java.lang.String mWrapperType -> a
    java.lang.String mWrapperVersion -> b
    int mVerticalType -> c
    java.lang.String GPU_VENDER -> d
    java.lang.String GPU_RENDERER -> e
    boolean sEncrypt -> f
    int sLatentWindow -> g
    double[] c -> o
    boolean ACTIVITY_DURATION_OPEN -> h
    boolean COMPRESS_DATA -> i
    boolean ENABLE_MEMORY_BUFFER -> j
    boolean CATCH_EXCEPTION -> k
    long kContinueSessionMillis -> l
    java.lang.String getAppkey(android.content.Context) -> a
    java.lang.String getChannel(android.content.Context) -> b
    java.lang.String getSDKVersion() -> a
    double[] getLocation() -> b
com.umeng.analytics.MobclickAgent -> com.umeng.a.b:
    com.umeng.analytics.d b -> a
    void onPageStart(java.lang.String) -> a
    void onPageEnd(java.lang.String) -> b
    void onPause(android.content.Context) -> a
    void onResume(android.content.Context) -> b
    void updateOnlineConfig(android.content.Context) -> c
com.umeng.analytics.ReportPolicy -> com.umeng.a.c:
com.umeng.analytics.ReportPolicy$a -> com.umeng.a.d:
    u.aly.ak a -> a
    u.aly.aa b -> b
    boolean a(boolean) -> a
    boolean a() -> a
com.umeng.analytics.ReportPolicy$b -> com.umeng.a.e:
    long a -> a
    long b -> b
    boolean a(boolean) -> a
    boolean a() -> a
com.umeng.analytics.ReportPolicy$c -> com.umeng.a.f:
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$d -> com.umeng.a.g:
    long a -> a
    long b -> b
    u.aly.aa c -> c
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$f -> com.umeng.a.h:
    long a -> a
    u.aly.aa b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$g -> com.umeng.a.i:
    boolean a(boolean) -> a
    boolean a() -> a
com.umeng.analytics.ReportPolicy$h -> com.umeng.a.j:
    android.content.Context a -> a
    boolean a(boolean) -> a
com.umeng.analytics.a -> com.umeng.a.k:
    java.lang.String[] f -> a
    java.lang.String[] g -> b
com.umeng.analytics.b -> com.umeng.a.l:
    byte[] a -> a
    byte[] a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    byte[] b(byte[]) -> b
    byte[] a(byte[],byte[]) -> a
    int a(int,java.lang.String) -> a
com.umeng.analytics.c -> com.umeng.a.m:
    void a() -> a
    void b() -> b
com.umeng.analytics.d -> com.umeng.a.n:
    com.umeng.analytics.onlineconfig.a a -> a
    android.content.Context b -> b
    com.umeng.analytics.c c -> c
    u.aly.n d -> d
    u.aly.ad e -> e
    u.aly.z f -> f
    u.aly.o g -> g
    u.aly.l h -> h
    boolean i -> i
    void f(android.content.Context) -> d
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void g(android.content.Context) -> e
    void h(android.content.Context) -> f
    void a(java.lang.Throwable) -> a
    void a(com.umeng.analytics.d,android.content.Context) -> a
    void b(com.umeng.analytics.d,android.content.Context) -> b
com.umeng.analytics.d$1 -> com.umeng.a.o:
    android.content.Context a -> a
    com.umeng.analytics.d b -> b
    void a() -> a
com.umeng.analytics.d$2 -> com.umeng.a.p:
    android.content.Context a -> a
    com.umeng.analytics.d b -> b
    void a() -> a
com.umeng.analytics.e -> com.umeng.a.q:
    java.lang.String[] a -> a
    java.lang.String[] a(android.content.Context) -> a
com.umeng.analytics.f -> com.umeng.a.r:
    java.util.List a -> a
    java.util.concurrent.ExecutorService b -> b
    long c -> c
    java.util.concurrent.ScheduledExecutorService d -> d
    void a(java.lang.Runnable) -> a
    void a() -> a
    void b(java.lang.Runnable) -> b
    void a(java.lang.Runnable,long) -> a
com.umeng.analytics.g -> com.umeng.a.s:
    void run() -> run
    void a() -> a
com.umeng.analytics.h -> com.umeng.a.t:
    com.umeng.analytics.h a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    com.umeng.analytics.h$a d -> d
    long e -> e
    long f -> f
    com.umeng.analytics.h a(android.content.Context) -> a
    boolean a(java.io.File) -> a
    java.lang.String[] a() -> a
    int[] c() -> b
    void a(int) -> a
    int d() -> c
    void b(int) -> b
    int e() -> d
    void c(int) -> c
    int d(int) -> d
    void a(int,int) -> a
    byte[] f() -> e
    void a(byte[]) -> a
    void g() -> f
    void b(byte[]) -> b
    boolean h() -> g
    com.umeng.analytics.h$a i() -> h
    android.content.SharedPreferences n() -> j
    android.content.SharedPreferences j() -> i
    java.lang.String o() -> k
    java.lang.String p() -> l
com.umeng.analytics.h$a -> com.umeng.a.u:
    int a -> a
    java.io.File b -> b
    java.io.FilenameFilter c -> c
    boolean a() -> a
    void a(com.umeng.analytics.h$b) -> a
    void a(byte[]) -> a
com.umeng.analytics.h$a$1 -> com.umeng.a.v:
    com.umeng.analytics.h$a a -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.umeng.analytics.h$b -> com.umeng.a.w:
    void a(java.io.File) -> a
    boolean b(java.io.File) -> b
    void c(java.io.File) -> c
com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener -> com.umeng.a.a.a:
    void onDataReceived(org.json.JSONObject) -> a
com.umeng.analytics.onlineconfig.a -> com.umeng.a.a.b:
    java.lang.String h -> a
    java.lang.String i -> b
    java.lang.String j -> c
    com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener k -> d
    com.umeng.analytics.onlineconfig.c l -> e
    long m -> f
    void a(android.content.Context) -> a
    void a(com.umeng.analytics.onlineconfig.c) -> a
    void a(org.json.JSONObject) -> a
    org.json.JSONObject b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
    void a(com.umeng.analytics.onlineconfig.a,org.json.JSONObject) -> a
    org.json.JSONObject a(com.umeng.analytics.onlineconfig.a,android.content.Context) -> a
    com.umeng.analytics.onlineconfig.c a(com.umeng.analytics.onlineconfig.a) -> a
    void a(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
com.umeng.analytics.onlineconfig.a$a -> com.umeng.a.a.c:
    org.json.JSONObject e -> e
    com.umeng.analytics.onlineconfig.a a -> a
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
com.umeng.analytics.onlineconfig.a$b -> com.umeng.a.a.d:
    android.content.Context a -> a
    com.umeng.analytics.onlineconfig.a b -> b
    void run() -> run
    boolean a() -> a
    void b() -> b
com.umeng.analytics.onlineconfig.b -> com.umeng.a.a.e:
    org.json.JSONObject a -> a
    boolean b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(org.json.JSONObject) -> a
    void a() -> a
com.umeng.analytics.onlineconfig.c -> com.umeng.a.a.f:
    void a(int,long) -> a
com.umeng.update.UmengDialogButtonListener -> com.umeng.update.a:
    void onClick(int) -> a
com.umeng.update.UmengDownloadListener -> com.umeng.update.b:
    void OnDownloadStart() -> a
    void OnDownloadUpdate(int) -> a
    void OnDownloadEnd(int,java.lang.String) -> a
com.umeng.update.UmengUpdateAgent -> com.umeng.update.c:
    com.umeng.update.UmengUpdateListener a -> a
    com.umeng.update.UmengDialogButtonListener b -> b
    com.umeng.update.UmengDownloadListener c -> c
    android.content.Context d -> d
    com.umeng.update.c e -> e
    android.os.Handler f -> f
    boolean g -> g
    boolean c() -> d
    void setUpdateFromPushMessage(boolean) -> a
    boolean getUpdateFromPushMessage() -> a
    void b(int,com.umeng.update.UpdateResponse) -> b
    void update(android.content.Context) -> a
    void b(android.content.Context) -> c
    void b(android.content.Context,com.umeng.update.UpdateResponse,int) -> b
    java.io.File downloadedFile(android.content.Context,com.umeng.update.UpdateResponse) -> a
    boolean isIgnore(android.content.Context,com.umeng.update.UpdateResponse) -> b
    void ignoreUpdate(android.content.Context,com.umeng.update.UpdateResponse) -> c
    void a(int,android.content.Context,com.umeng.update.UpdateResponse,java.io.File) -> a
    void a(android.content.Context,com.umeng.update.UpdateResponse,java.io.File) -> a
    void startInstall(android.content.Context,java.io.File) -> a
    void startDownload(android.content.Context,com.umeng.update.UpdateResponse) -> d
    boolean c(android.content.Context) -> d
    void b(android.content.Context,android.os.Message) -> b
    android.content.Context a() -> b
    void a(android.content.Context,com.umeng.update.UpdateResponse,int) -> a
    void a(android.content.Context,android.os.Message) -> a
    android.content.Context a(android.content.Context) -> b
    com.umeng.update.UmengUpdateListener b() -> c
    void a(int,com.umeng.update.UpdateResponse) -> a
com.umeng.update.UmengUpdateAgent$1 -> com.umeng.update.d:
    android.content.Context a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.update.UmengUpdateAgent$2 -> com.umeng.update.e:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$3 -> com.umeng.update.f:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$4 -> com.umeng.update.g:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$5 -> com.umeng.update.h:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$6 -> com.umeng.update.i:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$7 -> com.umeng.update.j:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$a -> com.umeng.update.k:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateListener -> com.umeng.update.l:
    void onUpdateReturned(int,com.umeng.update.UpdateResponse) -> a
com.umeng.update.UpdateConfig -> com.umeng.update.m:
    java.lang.String l -> a
    java.lang.String m -> b
    java.lang.String n -> c
    boolean o -> d
    boolean p -> e
    boolean q -> f
    boolean r -> g
    boolean s -> h
    boolean t -> i
    boolean u -> j
    int v -> k
    void setDebug(boolean) -> a
    java.lang.String getAppkey(android.content.Context) -> a
    java.lang.String getChannel(android.content.Context) -> b
    void saveIgnoreMd5(android.content.Context,java.lang.String) -> a
    java.lang.String getIgnoreMd5(android.content.Context) -> c
    boolean isUpdateOnlyWifi() -> a
    boolean isUpdateAutoPopup() -> b
    boolean isUpdateForce() -> c
    void setUpdateForce(boolean) -> b
    boolean isDeltaUpdate() -> d
    boolean isSilentDownload() -> e
    void setSilentDownload(boolean) -> c
    int getStyle() -> f
    boolean isUpdateCheck() -> g
    boolean isRichNotification() -> h
    java.lang.String getSlotId() -> i
com.umeng.update.UpdateDialogActivity -> com.umeng.update.UpdateDialogActivity:
    int a -> a
    com.umeng.update.UpdateResponse b -> b
    boolean c -> c
    java.io.File d -> d
    android.view.ViewGroup e -> e
    com.alimama.mobile.MMAdView f -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
com.umeng.update.UpdateDialogActivity$1 -> com.umeng.update.n:
    int a -> a
    int b -> b
    com.umeng.update.UpdateDialogActivity c -> c
    void onClick(android.view.View) -> onClick
com.umeng.update.UpdateDialogActivity$2 -> com.umeng.update.o:
    com.umeng.update.UpdateDialogActivity a -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.umeng.update.UpdateResponse -> com.umeng.update.p:
    boolean hasUpdate -> a
    java.lang.String updateLog -> b
    java.lang.String version -> c
    java.lang.String path -> d
    java.lang.String origin -> e
    java.lang.String new_md5 -> f
    java.lang.String size -> g
    java.lang.String target_size -> h
    boolean delta -> i
    java.lang.String patch_md5 -> j
    boolean display_ads -> k
    void a(org.json.JSONObject) -> a
    java.lang.String a(android.content.Context,boolean) -> a
com.umeng.update.b -> com.umeng.update.q:
    android.content.Context a -> a
    java.lang.String[] b -> b
    java.lang.String c -> c
    boolean shouldCompressData() -> a
    com.umeng.update.UpdateResponse a() -> b
com.umeng.update.c -> com.umeng.update.r:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.update.UmengDownloadListener c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    android.content.Context h -> h
    java.lang.String i -> i
    com.umeng.update.net.a j -> j
    boolean k -> k
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.umeng.update.UmengDownloadListener) -> a
    boolean a() -> b
    void b() -> c
    void c() -> d
    void a(com.umeng.update.net.a) -> a
    void onStart() -> a
    void onProgressUpdate(int) -> a
    void onEnd(int,int,java.lang.String) -> a
    void onStatus(int) -> b
    void a(android.content.Context,com.umeng.update.UpdateResponse,boolean,java.io.File) -> a
    com.umeng.update.c$a b(android.content.Context,com.umeng.update.UpdateResponse,boolean,java.io.File) -> b
com.umeng.update.c$a -> com.umeng.update.s:
    java.lang.String e -> e
    java.lang.String f -> f
    com.umeng.update.c a -> a
    com.umeng.update.c$a a(java.lang.CharSequence) -> a
    com.umeng.update.c$a b(java.lang.CharSequence) -> b
    com.umeng.update.c$a c(java.lang.CharSequence) -> c
    android.app.Notification a() -> a
com.umeng.update.d -> com.umeng.update.t:
    java.lang.String a -> a
    java.lang.String b -> e
    org.json.JSONObject c -> f
    org.json.JSONObject a(android.content.Context) -> a
    org.json.JSONObject toJson() -> c
    java.lang.String toGetUrl() -> d
com.umeng.update.net.DownloadingService -> com.umeng.update.net.DownloadingService:
    java.lang.String t -> d
    android.app.NotificationManager u -> e
    com.umeng.update.net.c v -> f
    android.content.Context A -> g
    android.os.Handler B -> h
    com.umeng.update.net.DownloadingService$a q -> a
    boolean r -> b
    java.util.Map E -> i
    android.util.SparseArray F -> j
    android.os.Messenger s -> c
    com.umeng.update.net.e G -> k
    boolean H -> l
    java.lang.Boolean I -> m
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onCreate() -> onCreate
    void d() -> d
    void a(com.umeng.update.net.a$a) -> a
    void a(java.lang.String) -> a
    void onDestroy() -> onDestroy
    void e() -> e
    java.lang.String a() -> a
    com.umeng.update.net.c a(com.umeng.update.net.DownloadingService) -> a
    android.util.SparseArray b() -> b
    android.content.Context b(com.umeng.update.net.DownloadingService) -> b
    java.util.Map c() -> c
    void a(com.umeng.update.net.DownloadingService,com.umeng.update.net.a$a) -> a
    android.app.NotificationManager a(com.umeng.update.net.DownloadingService,android.app.NotificationManager) -> a
    android.app.NotificationManager c(com.umeng.update.net.DownloadingService) -> c
    android.os.Handler d(com.umeng.update.net.DownloadingService) -> d
    void a(com.umeng.update.net.DownloadingService,java.lang.String) -> a
    java.lang.Boolean a(java.lang.Boolean) -> a
com.umeng.update.net.DownloadingService$1 -> com.umeng.update.net.a:
    com.umeng.update.net.DownloadingService a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.update.net.DownloadingService$2 -> com.umeng.update.net.b:
    android.util.SparseArray a -> a
    com.umeng.update.net.DownloadingService b -> b
    void a(int) -> a
    void a(int,int) -> a
    void a(int,java.lang.String) -> a
    void a(int,java.lang.Exception) -> a
com.umeng.update.net.DownloadingService$3 -> com.umeng.update.net.c:
    java.lang.String a -> a
    com.umeng.update.net.DownloadingService b -> b
    void run() -> run
com.umeng.update.net.DownloadingService$4 -> com.umeng.update.net.d:
    com.umeng.update.net.DownloadingService a -> a
    void run() -> run
com.umeng.update.net.DownloadingService$a -> com.umeng.update.net.e:
    void a(int) -> a
    void a(int,int) -> a
    void a(int,java.lang.String) -> a
    void a(int,java.lang.Exception) -> a
com.umeng.update.net.DownloadingService$b -> com.umeng.update.net.f:
    android.content.Context b -> b
    boolean c -> c
    java.io.File d -> d
    int e -> e
    long f -> f
    long g -> g
    int h -> h
    int i -> i
    com.umeng.update.net.DownloadingService$a j -> j
    com.umeng.update.net.a$a k -> k
    com.umeng.update.net.DownloadingService a -> a
    void run() -> run
    void a(int) -> a
    void a(boolean) -> a
    void a() -> a
    void b(int) -> b
    java.net.HttpURLConnection a(java.net.URL,java.io.File) -> a
    java.lang.String a(com.umeng.update.net.a$a) -> a
    void b() -> b
    void a(java.io.File,java.lang.String) -> a
    void a(java.lang.Exception) -> a
    android.content.Context a(com.umeng.update.net.DownloadingService$b) -> a
com.umeng.update.net.DownloadingService$b$1 -> com.umeng.update.net.g:
    com.umeng.update.net.DownloadingService$b a -> a
    void run() -> run
com.umeng.update.net.DownloadingService$c -> com.umeng.update.net.h:
    com.umeng.update.net.DownloadingService a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.update.net.a -> com.umeng.update.net.i:
    java.lang.String b -> b
    android.content.Context c -> c
    com.umeng.update.net.d d -> d
    android.os.Messenger e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String[] k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    android.os.Messenger a -> a
    android.content.ServiceConnection o -> o
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String[]) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void a() -> a
    java.lang.String b() -> b
    com.umeng.update.net.d a(com.umeng.update.net.a) -> a
    android.content.ServiceConnection b(com.umeng.update.net.a) -> b
    android.content.Context c(com.umeng.update.net.a) -> c
    android.os.Messenger a(com.umeng.update.net.a,android.os.Messenger) -> a
    java.lang.String d(com.umeng.update.net.a) -> d
    java.lang.String e(com.umeng.update.net.a) -> e
    java.lang.String f(com.umeng.update.net.a) -> f
    java.lang.String g(com.umeng.update.net.a) -> g
    java.lang.String h(com.umeng.update.net.a) -> h
    java.lang.String[] i(com.umeng.update.net.a) -> i
    boolean j(com.umeng.update.net.a) -> j
    boolean k(com.umeng.update.net.a) -> k
    boolean l(com.umeng.update.net.a) -> l
    android.os.Messenger m(com.umeng.update.net.a) -> m
com.umeng.update.net.a$1 -> com.umeng.update.net.j:
    com.umeng.update.net.a a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.umeng.update.net.a$a -> com.umeng.update.net.k:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    android.os.Bundle a() -> a
    com.umeng.update.net.a$a a(android.os.Bundle) -> a
com.umeng.update.net.a$b -> com.umeng.update.net.l:
    com.umeng.update.net.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.update.net.b -> com.umeng.update.net.m:
    java.lang.String a -> a
    android.content.Context i -> b
    com.umeng.update.net.b$a k -> c
    com.umeng.update.net.b a(android.content.Context) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,int) -> a
    void e(java.lang.String,java.lang.String) -> b
    void a(int) -> a
    void finalize() -> finalize
    java.lang.String a() -> a
com.umeng.update.net.b$1 -> com.umeng.update.net.n:
com.umeng.update.net.b$a -> com.umeng.update.net.o:
    com.umeng.update.net.b a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.umeng.update.net.b$b -> com.umeng.update.net.p:
    com.umeng.update.net.b a -> a
com.umeng.update.net.c -> com.umeng.update.net.q:
    java.lang.String e -> a
    android.util.SparseArray f -> b
    java.util.Map g -> c
    com.umeng.update.net.e h -> d
    int a(com.umeng.update.net.a$a) -> a
    com.umeng.update.net.c$a a(android.content.Context,com.umeng.update.net.a$a,int,int) -> a
    void a(android.content.Context,com.umeng.update.net.c$a,int,int) -> a
    boolean a(android.content.Context) -> a
    boolean a(com.umeng.update.net.a$a,boolean,android.os.Messenger) -> a
    int b(com.umeng.update.net.a$a) -> b
    void a(android.content.Context,int) -> a
    void b(android.content.Context,int) -> b
    void a(com.umeng.update.net.a$a,long,long,long) -> a
    void a(java.util.Map,boolean,java.lang.String[]) -> a
    boolean a(com.umeng.update.net.DownloadingService,android.content.Intent) -> a
    java.lang.String a() -> a
    java.util.Map a(com.umeng.update.net.c) -> a
com.umeng.update.net.c$1 -> com.umeng.update.net.r:
    java.lang.String[] a -> a
    boolean b -> b
    java.util.Map c -> c
    com.umeng.update.net.c d -> d
    void run() -> run
com.umeng.update.net.c$a -> com.umeng.update.net.s:
    com.umeng.update.net.c$a a(android.widget.RemoteViews) -> a
    com.umeng.update.net.c$a a(java.lang.CharSequence) -> a
    com.umeng.update.net.c$a b(java.lang.CharSequence) -> b
    com.umeng.update.net.c$a a(int,int,boolean) -> a
    com.umeng.update.net.c$a a() -> a
    com.umeng.update.net.c$a a(android.app.PendingIntent,android.app.PendingIntent) -> a
    com.umeng.update.net.c$a b() -> b
    com.umeng.update.net.c$a c() -> c
    android.app.Notification d() -> d
    void a(int,java.lang.String,android.app.PendingIntent) -> a
com.umeng.update.net.c$b -> com.umeng.update.net.t:
    com.umeng.update.net.DownloadingService$b a -> a
    com.umeng.update.net.c$a b -> b
    int c -> c
    int d -> d
    com.umeng.update.net.a$a e -> e
    long[] f -> f
    void a(android.util.SparseArray) -> a
    void b(android.util.SparseArray) -> b
com.umeng.update.net.c$c -> com.umeng.update.net.u:
    int a -> a
    java.lang.String b -> b
    com.umeng.update.net.a$a d -> d
    android.content.Context e -> e
    android.app.NotificationManager f -> f
    com.umeng.update.net.c c -> c
    void onPreExecute() -> onPreExecute
    java.lang.Integer a(java.lang.String[]) -> a
    void a(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.update.net.d -> com.umeng.update.net.v:
    void onStart() -> a
    void onProgressUpdate(int) -> a
    void onEnd(int,int,java.lang.String) -> a
    void onStatus(int) -> b
com.umeng.update.net.e -> com.umeng.update.net.w:
    java.lang.String b -> a
    android.content.Context c -> b
    void a(int) -> a
    java.util.List a() -> a
    boolean b() -> b
    void b(int) -> b
com.umeng.update.net.f -> com.umeng.update.net.x:
    java.lang.String a(int,java.lang.String) -> a
    android.app.PendingIntent b(android.content.Context,java.lang.String) -> a
com.umeng.update.net.j -> com.umeng.update.net.y:
    java.lang.String b -> b
    boolean a -> a
    java.util.Map f -> c
    java.lang.Thread g -> d
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.io.File a(java.lang.String,android.content.Context,boolean[]) -> a
    boolean a(java.lang.String,int,int,int) -> a
    boolean a(java.lang.String,int) -> a
    void a(java.io.File,long,long) -> a
    long a(java.io.File) -> a
    void b(java.io.File,long) -> b
    java.io.File b(android.content.Context,java.lang.String) -> b
    void a(android.content.Context,android.widget.ImageView,java.lang.String,boolean) -> a
    void a(android.content.Context,android.widget.ImageView,java.lang.String,boolean,com.umeng.update.net.j$a,android.view.animation.Animation,boolean) -> a
    boolean a(android.widget.ImageView,java.lang.String) -> a
    void b(android.content.Context,android.widget.ImageView,android.graphics.drawable.Drawable,boolean,com.umeng.update.net.j$a,android.view.animation.Animation,boolean,java.lang.String) -> b
    android.graphics.drawable.Drawable c(java.lang.String) -> c
    android.graphics.Bitmap a(android.graphics.Bitmap) -> a
    void a(java.io.File,long) -> a
    java.lang.Thread a(java.lang.Thread) -> a
    void a(android.content.Context,android.widget.ImageView,android.graphics.drawable.Drawable,boolean,com.umeng.update.net.j$a,android.view.animation.Animation,boolean,java.lang.String) -> a
    android.graphics.drawable.Drawable a(java.lang.String) -> a
    java.lang.String a() -> a
com.umeng.update.net.j$1 -> com.umeng.update.net.z:
    java.io.File a -> a
    long b -> b
    void run() -> run
com.umeng.update.net.j$a -> com.umeng.update.net.aa:
    void a(com.umeng.update.net.j$b) -> a
    void a(u.upd.f$a) -> a
com.umeng.update.net.j$b -> com.umeng.update.net.ab:
    com.umeng.update.net.j$b a -> a
    com.umeng.update.net.j$b b -> b
    com.umeng.update.net.j$b[] c -> c
    com.umeng.update.net.j$b[] values() -> values
    com.umeng.update.net.j$b valueOf(java.lang.String) -> valueOf
com.umeng.update.net.j$c -> com.umeng.update.net.ac:
    android.content.Context a -> a
    java.lang.String b -> b
    android.widget.ImageView c -> c
    com.umeng.update.net.j$b d -> d
    boolean e -> e
    com.umeng.update.net.j$a f -> f
    android.view.animation.Animation g -> g
    boolean h -> h
    java.io.File i -> i
    void onPreExecute() -> onPreExecute
    void a(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable a(java.lang.Object[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.update.util.DeltaUpdate -> com.umeng.update.util.DeltaUpdate:
    boolean a -> a
    boolean a() -> a
    int a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    int bspatch(java.lang.String,java.lang.String,java.lang.String) -> bspatch
com.umeng.update.util.b -> com.umeng.update.util.a:
    android.content.Context b -> b
    android.app.Notification c -> c
    android.app.Notification$Builder d -> d
    void e() -> e
    com.umeng.update.util.b b(android.widget.RemoteViews) -> b
    com.umeng.update.util.b a(android.app.PendingIntent) -> a
    com.umeng.update.util.b a(boolean) -> a
    com.umeng.update.util.b b(boolean) -> b
    com.umeng.update.util.b a(int) -> a
    com.umeng.update.util.b d(java.lang.CharSequence) -> d
    com.umeng.update.util.b a(long) -> a
net.youmi.android.AdBrowser -> net.youmi.android.AdBrowser:
    net.youmi.android.a.a.e.g.c a -> a
    net.youmi.android.a.a.i.a.b b -> b
    net.youmi.android.a.a.j.k c -> c
    android.widget.RelativeLayout d -> d
    net.youmi.android.a.a.j.b e -> e
    net.youmi.android.a.a.j.d f -> f
    net.youmi.android.a.a.e.a.b.a g -> g
    void onCreate(android.os.Bundle) -> onCreate
    void n() -> n
    void a(java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void k() -> k
    void o() -> o
    void a(net.youmi.android.a.a.j.b.f) -> a
    void a(java.lang.CharSequence) -> a
    void a(int) -> a
    void b(int) -> b
    void b(java.lang.CharSequence) -> b
    void c(int) -> c
    boolean l() -> l
    boolean b(java.lang.String) -> b
    boolean a(java.lang.String,byte[]) -> a
    boolean m() -> m
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onStop() -> onStop
    boolean a(int,int,float) -> a
net.youmi.android.AdManager -> net.youmi.android.AdManager:
    android.content.Context a -> a
    net.youmi.android.AdManager b -> b
    boolean c -> c
    boolean d -> d
    net.youmi.android.AdManager getInstance(android.content.Context) -> getInstance
    void init(java.lang.String,java.lang.String,boolean) -> init
    void init(java.lang.String,java.lang.String) -> init
    void testInit(java.lang.String,java.lang.String,boolean) -> testInit
    void setEnableDebugLog(boolean) -> setEnableDebugLog
    java.lang.String getOnlineConfig(java.lang.String,java.lang.String) -> getOnlineConfig
    java.lang.String syncGetOnlineConfig(java.lang.String,java.lang.String) -> syncGetOnlineConfig
    void asyncGetOnlineConfig(java.lang.String,net.youmi.android.onlineconfig.OnlineConfigCallBack) -> asyncGetOnlineConfig
    boolean syncCheckIsReachNtpTime(int,int,int) -> syncCheckIsReachNtpTime
    void asyncCheckIsReachNtpTime(int,int,int,net.youmi.android.onlineconfig.ntp.NtpResultListener) -> asyncCheckIsReachNtpTime
    net.youmi.android.update.AppUpdateInfo syncCheckAppUpdate() -> syncCheckAppUpdate
    void asyncCheckAppUpdate(net.youmi.android.update.CheckAppUpdateCallBack) -> asyncCheckAppUpdate
    net.youmi.android.update.AppUpdateInfo checkAppUpdate() -> checkAppUpdate
    void setUserDataCollect(boolean) -> setUserDataCollect
    boolean isInstallationSuccessTipsDisplayOnNotification() -> isInstallationSuccessTipsDisplayOnNotification
    void setIsInstallationSuccessTipsDisplayOnNotification(boolean) -> setIsInstallationSuccessTipsDisplayOnNotification
    boolean isDownloadTipsDisplayOnNotification() -> isDownloadTipsDisplayOnNotification
    void setIsDownloadTipsDisplayOnNotification(boolean) -> setIsDownloadTipsDisplayOnNotification
net.youmi.android.AdReceiver -> net.youmi.android.AdReceiver:
    int a -> a
    int b -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.youmi.android.AdService -> net.youmi.android.AdService:
    void onHandleIntent(android.content.Intent) -> onHandleIntent
net.youmi.android.ExpService -> net.youmi.android.ExpService:
    void onHandleIntent(android.content.Intent) -> onHandleIntent
net.youmi.android.a -> net.youmi.android.a:
    net.youmi.android.AdBrowser a -> a
    void onClick(android.view.View) -> onClick
net.youmi.android.a.a.a -> net.youmi.android.a.a.a:
    java.lang.String a -> a
    java.lang.String a() -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
net.youmi.android.a.a.a.a -> net.youmi.android.a.a.a.a:
    void a(android.content.Context,net.youmi.android.a.a.e.a.b.h,java.util.List) -> a
net.youmi.android.a.a.a.a.a -> net.youmi.android.a.a.a.a.a:
    int a -> a
    int b -> b
    java.lang.String c -> c
    net.youmi.android.a.a.a.a.f d -> d
    net.youmi.android.a.a.a.a.c e -> e
    net.youmi.android.a.a.a.a.g f -> f
    net.youmi.android.a.a.a.a.e g -> g
    net.youmi.android.a.a.a.a.d h -> h
    net.youmi.android.a.a.a.a.j i -> i
    net.youmi.android.a.a.a.a.h j -> j
    long k -> k
    int a() -> a
    int b() -> b
    long c() -> c
    void a(long) -> a
    java.lang.String d() -> d
    java.lang.String a(int,int) -> a
    net.youmi.android.a.a.a.a.f e() -> e
    void a(net.youmi.android.a.a.a.a.f) -> a
    net.youmi.android.a.a.a.a.c f() -> f
    void a(net.youmi.android.a.a.a.a.c) -> a
    net.youmi.android.a.a.a.a.g g() -> g
    void a(net.youmi.android.a.a.a.a.g) -> a
    void a(net.youmi.android.a.a.a.a.e) -> a
    net.youmi.android.a.a.a.a.e h() -> h
    void a(net.youmi.android.a.a.a.a.d) -> a
    net.youmi.android.a.a.a.a.d i() -> i
    net.youmi.android.a.a.a.a.j j() -> j
    void a(net.youmi.android.a.a.a.a.j) -> a
    net.youmi.android.a.a.a.a.h k() -> k
    void a(net.youmi.android.a.a.a.a.h) -> a
    java.lang.String l() -> l
    boolean a(java.lang.String) -> a
    long m() -> m
    java.lang.String n() -> n
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.a.b -> net.youmi.android.a.a.a.a.b:
    java.lang.String a -> a
    java.lang.String a(net.youmi.android.a.a.a.a.a) -> a
    boolean a(net.youmi.android.a.a.a.a.a,java.lang.String) -> a
net.youmi.android.a.a.a.a.c -> net.youmi.android.a.a.a.a.c:
    long a -> a
    java.util.ArrayList b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.util.ArrayList a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void f(java.lang.String) -> f
    java.lang.String g() -> g
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    java.lang.String h() -> h
    java.lang.String i() -> i
    void i(java.lang.String) -> i
    long j() -> j
    void a(long) -> a
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.a.d -> net.youmi.android.a.a.a.a.d:
    long a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    long a() -> a
    void a(long) -> a
    int b() -> b
    void a(int) -> a
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    int e() -> e
    void b(int) -> b
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.a.e -> net.youmi.android.a.a.a.a.e:
    long a -> a
    long b -> b
    java.lang.String c -> c
    long a() -> a
    void a(long) -> a
    void b(long) -> b
    long b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.a.f -> net.youmi.android.a.a.a.a.f:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    int g -> g
    long h -> h
    boolean a(android.content.Context,java.lang.String) -> a
    void a(boolean) -> a
    boolean a() -> a
    void b(boolean) -> b
    boolean b() -> b
    boolean c() -> c
    void c(boolean) -> c
    boolean d() -> d
    void d(boolean) -> d
    boolean e() -> e
    int f() -> f
    long g() -> g
    void a(long) -> a
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.a.g -> net.youmi.android.a.a.a.a.g:
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int a -> a
    long a() -> a
    void a(long) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    java.lang.String e() -> e
    void d(java.lang.String) -> d
    java.lang.String f() -> f
    void e(java.lang.String) -> e
    int g() -> g
    void a(int) -> a
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.a.h -> net.youmi.android.a.a.a.a.h:
    long a -> a
    int b -> b
    long a() -> a
    void a(long) -> a
    int b() -> b
    void a(int) -> a
net.youmi.android.a.a.a.a.i -> net.youmi.android.a.a.a.a.i:
    int a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    void a(int) -> a
    int c() -> c
    void b(int) -> b
net.youmi.android.a.a.a.a.j -> net.youmi.android.a.a.a.a.j:
    long a -> a
    java.util.List b -> b
    long a() -> a
    void a(long) -> a
    java.util.List b() -> b
    void a(net.youmi.android.a.a.a.a.i) -> a
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.b.a -> net.youmi.android.a.a.a.b.a:
    java.lang.String a -> a
    java.lang.String b -> b
    net.youmi.android.a.a.a.b.b c -> c
    net.youmi.android.a.a.a.b.c d -> d
    java.lang.String e -> e
    boolean f -> f
    java.lang.String g -> g
    long h -> h
    java.lang.String i -> i
    long j -> j
    boolean k -> k
    net.youmi.android.a.a.e.g.b l -> l
    java.lang.String m -> m
    long n -> n
    java.lang.String o -> o
    java.lang.String l() -> l
    boolean a(java.lang.String) -> a
    long m() -> m
    java.lang.String n() -> n
    java.lang.String a() -> a
    void b(java.lang.String) -> b
    long b() -> b
    void a(long) -> a
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    boolean e() -> e
    void a(boolean) -> a
    void d(java.lang.String) -> d
    java.lang.String f() -> f
    java.lang.String g() -> g
    void e(java.lang.String) -> e
    boolean h() -> h
    void b(boolean) -> b
    net.youmi.android.a.a.a.b.c i() -> i
    void a(net.youmi.android.a.a.a.b.c) -> a
    void b(long) -> b
    net.youmi.android.a.a.e.g.b j() -> j
    void a(net.youmi.android.a.a.e.g.b) -> a
net.youmi.android.a.a.a.b.b -> net.youmi.android.a.a.a.b.b:
    net.youmi.android.a.a.a.b.c a() -> a
    net.youmi.android.a.a.a.b.c a(org.json.JSONObject,net.youmi.android.a.a.a.b.c) -> a
net.youmi.android.a.a.a.b.c -> net.youmi.android.a.a.a.b.c:
    org.json.JSONObject a() -> a
    boolean a(org.json.JSONObject) -> a
net.youmi.android.a.a.a.b.d -> net.youmi.android.a.a.a.b.d:
    net.youmi.android.a.a.a.b.d a -> a
    net.youmi.android.a.a.a.b.d a(android.content.Context) -> a
    net.youmi.android.a.a.a.b.a a(android.content.Context,java.lang.String,net.youmi.android.a.a.a.b.b) -> a
    boolean a(android.content.Context,net.youmi.android.a.a.a.b.a) -> a
    boolean a(java.lang.String) -> a
net.youmi.android.a.a.b -> net.youmi.android.a.a.b:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
net.youmi.android.a.a.b.a -> net.youmi.android.a.a.b.a:
    net.youmi.android.a.b.c.g b -> b
    net.youmi.android.a.b.c.g c -> c
    net.youmi.android.a.b.c.g d -> d
    net.youmi.android.a.b.c.g e -> e
    net.youmi.android.a.b.c.g f -> f
    net.youmi.android.a.b.c.g a(android.content.Context) -> a
    net.youmi.android.a.b.c.g b(android.content.Context) -> b
    net.youmi.android.a.b.c.g c(android.content.Context) -> c
    net.youmi.android.a.b.c.g d(android.content.Context) -> d
    net.youmi.android.a.b.c.g e(android.content.Context) -> e
net.youmi.android.a.a.c -> net.youmi.android.a.a.c:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    void a(int) -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String b(java.lang.String,java.lang.String,java.lang.String) -> b
net.youmi.android.a.a.c.a -> net.youmi.android.a.a.c.a:
    android.webkit.WebViewClient a(net.youmi.android.a.a.i.a.b.f) -> a
    int a() -> a
    android.webkit.WebChromeClient a(android.content.Context,net.youmi.android.a.a.i.a.a.c) -> a
    void a(android.content.Context,android.webkit.WebSettings) -> a
    void a(android.content.Context) -> a
net.youmi.android.a.a.c.b -> net.youmi.android.a.a.c.b:
    net.youmi.android.a.a.i.a.a.c a -> a
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
net.youmi.android.a.a.c.c -> net.youmi.android.a.a.c.c:
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
net.youmi.android.a.a.c.d -> net.youmi.android.a.a.c.d:
    android.webkit.GeolocationPermissions$Callback a -> a
    java.lang.String b -> b
    net.youmi.android.a.a.c.c c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.youmi.android.a.a.c.e -> net.youmi.android.a.a.c.e:
    android.webkit.GeolocationPermissions$Callback a -> a
    java.lang.String b -> b
    net.youmi.android.a.a.c.c c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.youmi.android.a.a.c.f -> net.youmi.android.a.a.c.f:
    android.webkit.GeolocationPermissions$Callback a -> a
    java.lang.String b -> b
    net.youmi.android.a.a.c.c c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.youmi.android.a.a.c.g -> net.youmi.android.a.a.c.g:
    net.youmi.android.a.a.c.g a(net.youmi.android.a.a.i.a.a.c) -> a
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    void onHideCustomView() -> onHideCustomView
    android.graphics.Bitmap getDefaultVideoPoster() -> getDefaultVideoPoster
    android.view.View getVideoLoadingProgressView() -> getVideoLoadingProgressView
    void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
net.youmi.android.a.a.c.h -> net.youmi.android.a.a.c.h:
    net.youmi.android.a.a.i.a.b.f a -> a
    net.youmi.android.a.a.c.h a(net.youmi.android.a.a.i.a.b.f) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.youmi.android.a.a.c.i -> net.youmi.android.a.a.c.i:
    net.youmi.android.a.a.i.a.b.f a -> a
    net.youmi.android.a.a.c.i a(net.youmi.android.a.a.i.a.b.f) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.youmi.android.a.a.c.j -> net.youmi.android.a.a.c.j:
    void a(android.content.Context,android.webkit.WebSettings) -> a
net.youmi.android.a.a.d.a -> net.youmi.android.a.a.d.a:
    net.youmi.android.a.b.g.c.a a(net.youmi.android.a.b.g.e.a) -> a
    net.youmi.android.a.b.g.b.b a() -> a
    java.io.File a(java.lang.String,java.lang.String) -> a
net.youmi.android.a.a.d.a.a -> net.youmi.android.a.a.d.a.a:
    java.lang.String b() -> b
    java.io.File a(java.lang.String) -> a
    net.youmi.android.a.a.d.a.a a(android.content.Context,net.youmi.android.a.a.d.a.a,net.youmi.android.a.a.d.a.a,int,long) -> a
net.youmi.android.a.a.d.a.b -> net.youmi.android.a.a.d.a.b:
    net.youmi.android.a.a.d.a.a a -> a
    net.youmi.android.a.a.d.a.a b -> b
    net.youmi.android.a.a.d.a.a c -> c
    net.youmi.android.a.a.d.a.a d -> d
    net.youmi.android.a.a.d.a.a e -> e
    net.youmi.android.a.a.d.a.a a(android.content.Context) -> a
    net.youmi.android.a.a.d.a.a b(android.content.Context) -> b
    net.youmi.android.a.a.d.a.a a(android.content.Context,int) -> a
    net.youmi.android.a.a.d.a.a b(android.content.Context,int) -> b
    net.youmi.android.a.a.d.a.a c(android.content.Context,int) -> c
net.youmi.android.a.a.d.b -> net.youmi.android.a.a.d.b:
    net.youmi.android.a.a.d.b a -> a
    net.youmi.android.a.a.d.b a(android.content.Context) -> a
net.youmi.android.a.a.e.a -> net.youmi.android.a.a.e.a:
    net.youmi.android.a.a.e.a a -> a
    net.youmi.android.a.a.e.a b -> b
    net.youmi.android.a.a.e.a c -> c
    net.youmi.android.a.a.e.a[] d -> d
    net.youmi.android.a.a.e.a[] values() -> values
    net.youmi.android.a.a.e.a valueOf(java.lang.String) -> valueOf
net.youmi.android.a.a.e.a.a -> net.youmi.android.a.a.e.a.a:
    net.youmi.android.a.a.e.a.b.h a -> a
    net.youmi.android.a.a.e.a.b.f b -> b
    net.youmi.android.a.a.e.a.a.b c -> c
    net.youmi.android.a.a.e.a.b.i d -> d
    net.youmi.android.a.a.e.a.a.a e -> e
    void setYmWebBrowser(net.youmi.android.a.a.e.a.b.i) -> setYmWebBrowser
    void setExtendJsObject(net.youmi.android.a.a.e.a.a.a) -> setExtendJsObject
    boolean d(java.lang.String) -> d
    boolean i(java.lang.String) -> i
    boolean e(java.lang.String) -> e
    boolean w(java.lang.String) -> w
    boolean dd(java.lang.String) -> dd
    boolean di(java.lang.String) -> di
    boolean de(java.lang.String) -> de
    boolean dw(java.lang.String) -> dw
    java.lang.String a(int,int,java.lang.String) -> a
    net.youmi.android.a.a.e.a.b.g a(int) -> a
    net.youmi.android.a.a.e.a.b.g b(int) -> b
    net.youmi.android.a.a.e.a.b.g c(int) -> c
    net.youmi.android.a.a.e.a.b.g d(int) -> d
    net.youmi.android.a.a.e.a.b.g e(int) -> e
    net.youmi.android.a.a.e.a.b.g f(int) -> f
    net.youmi.android.a.a.e.a.b.g g(int) -> g
    net.youmi.android.a.a.e.a.b.g h(int) -> h
net.youmi.android.a.a.e.a.a.a -> net.youmi.android.a.a.e.a.a.a:
net.youmi.android.a.a.e.a.a.b -> net.youmi.android.a.a.e.a.a.b:
    boolean a(int) -> a
    net.youmi.android.a.a.e.a.b.g a(int,int) -> a
net.youmi.android.a.a.e.a.b -> net.youmi.android.a.a.e.a.b:
    java.lang.String a(int,int,java.lang.String) -> a
    boolean d(java.lang.String) -> d
    boolean i(java.lang.String) -> i
    boolean w(java.lang.String) -> w
    boolean e(java.lang.String) -> e
    boolean di(java.lang.String) -> di
    boolean de(java.lang.String) -> de
    boolean dw(java.lang.String) -> dw
    boolean dd(java.lang.String) -> dd
    net.youmi.android.a.a.e.a.b.g a(int) -> a
    net.youmi.android.a.a.e.a.b.g b(int) -> b
    net.youmi.android.a.a.e.a.b.g c(int) -> c
    net.youmi.android.a.a.e.a.b.g d(int) -> d
    net.youmi.android.a.a.e.a.b.g e(int) -> e
    net.youmi.android.a.a.e.a.b.g f(int) -> f
    net.youmi.android.a.a.e.a.b.g g(int) -> g
    net.youmi.android.a.a.e.a.b.g h(int) -> h
net.youmi.android.a.a.e.a.b.a -> net.youmi.android.a.a.e.a.b.a:
    android.app.Activity a -> a
    android.content.Context b -> b
    net.youmi.android.a.a.i.a.b.a c -> c
    net.youmi.android.a.a.e.g.c d -> d
    android.content.Context h() -> h
    android.app.Activity g() -> g
    android.content.Context a() -> a
    net.youmi.android.a.a.e.a i() -> i
    int k() -> k
    int l() -> l
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(net.youmi.android.a.a.e.g.b) -> a
    net.youmi.android.a.a.e.a j() -> j
    net.youmi.android.a.a.e.a a(net.youmi.android.a.a.e.g.d) -> a
    net.youmi.android.a.a.e.a a(net.youmi.android.a.a.e.g.g) -> a
    net.youmi.android.a.a.e.a b(net.youmi.android.a.a.e.g.g) -> b
    net.youmi.android.a.a.e.a a(net.youmi.android.a.a.e.g.a,net.youmi.android.a.a.e.g.f) -> a
    net.youmi.android.a.a.e.a a(android.content.Context,java.util.List) -> a
    net.youmi.android.a.a.e.a a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    net.youmi.android.a.a.e.a a(java.lang.String) -> a
    net.youmi.android.a.a.e.a a(int,net.youmi.android.a.a.e.g.b) -> a
    void a(net.youmi.android.a.a.i.a.b.a) -> a
    net.youmi.android.a.a.e.a a(net.youmi.android.a.a.e.g.c) -> a
    net.youmi.android.a.a.e.a c(int) -> c
    int m() -> m
net.youmi.android.a.a.e.a.b.b -> net.youmi.android.a.a.e.a.b.b:
    net.youmi.android.a.a.e.a.b.a a -> a
    void run() -> run
net.youmi.android.a.a.e.a.b.c -> net.youmi.android.a.a.e.a.b.c:
    net.youmi.android.a.a.e.a.b.a a -> a
    void run() -> run
net.youmi.android.a.a.e.a.b.d -> net.youmi.android.a.a.e.a.b.d:
    net.youmi.android.a.a.e.a.b.a a -> a
    void run() -> run
net.youmi.android.a.a.e.a.b.e -> net.youmi.android.a.a.e.a.b.e:
    net.youmi.android.a.a.e.g.a a -> a
    net.youmi.android.a.a.e.g.f b -> b
    net.youmi.android.a.a.e.a.b.a c -> c
    void run() -> run
net.youmi.android.a.a.e.a.b.f -> net.youmi.android.a.a.e.a.b.f:
    net.youmi.android.a.a.e.a f() -> f
    boolean a(java.lang.Runnable) -> a
net.youmi.android.a.a.e.a.b.g -> net.youmi.android.a.a.e.a.b.g:
    java.lang.String a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,java.lang.String) -> a
net.youmi.android.a.a.e.a.b.h -> net.youmi.android.a.a.e.a.b.h:
    android.content.Context h() -> h
    android.app.Activity g() -> g
    void a(net.youmi.android.a.a.i.a.b.a) -> a
    net.youmi.android.a.a.e.a i() -> i
    int k() -> k
    int m() -> m
    int l() -> l
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(net.youmi.android.a.a.e.g.b) -> a
    net.youmi.android.a.a.e.a j() -> j
    net.youmi.android.a.a.e.a a(net.youmi.android.a.a.e.g.d) -> a
    net.youmi.android.a.a.e.a a(net.youmi.android.a.a.e.g.c) -> a
    net.youmi.android.a.a.e.a b(net.youmi.android.a.a.e.g.g) -> b
    net.youmi.android.a.a.e.a a(net.youmi.android.a.a.e.g.a,net.youmi.android.a.a.e.g.f) -> a
    net.youmi.android.a.a.e.a a(android.content.Context,java.util.List) -> a
    net.youmi.android.a.a.e.a a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    net.youmi.android.a.a.e.a a(java.lang.String) -> a
    net.youmi.android.a.a.e.a a(int,net.youmi.android.a.a.e.g.b) -> a
    net.youmi.android.a.a.e.a c(int) -> c
    net.youmi.android.a.a.e.a a(net.youmi.android.a.a.e.g.g) -> a
net.youmi.android.a.a.e.a.b.i -> net.youmi.android.a.a.e.a.b.i:
net.youmi.android.a.a.e.a.b.j -> net.youmi.android.a.a.e.a.b.j:
    net.youmi.android.a.a.e.a.b.i a -> a
    net.youmi.android.a.a.e.a.a.a b -> b
    void a(net.youmi.android.a.a.e.a.b.i) -> a
    void a(net.youmi.android.a.a.e.a.a.a) -> a
    java.lang.String a(org.json.JSONObject) -> a
    org.json.JSONObject a(int) -> a
    java.lang.String b(int) -> b
net.youmi.android.a.a.e.a.b.k -> net.youmi.android.a.a.e.a.b.k:
    java.lang.String a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,java.lang.String) -> a
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f) -> a
net.youmi.android.a.a.e.a.b.l -> net.youmi.android.a.a.e.a.b.l:
    java.lang.String a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,java.lang.String) -> a
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.b.a -> net.youmi.android.a.a.e.b.a:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    boolean d -> d
    boolean a() -> a
    java.lang.String l() -> l
    boolean a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String b() -> b
    void a(long) -> a
    long m() -> m
    java.lang.String n() -> n
net.youmi.android.a.a.e.b.b -> net.youmi.android.a.a.e.b.b:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void b(java.lang.String) -> b
    java.lang.String a() -> a
    java.lang.String l() -> l
    boolean a(java.lang.String) -> a
    long m() -> m
    java.lang.String n() -> n
net.youmi.android.a.a.e.b.c -> net.youmi.android.a.a.e.b.c:
    net.youmi.android.a.b.c.i a -> a
    net.youmi.android.a.b.c.i a(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,long) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
net.youmi.android.a.a.e.b.d -> net.youmi.android.a.a.e.b.d:
    net.youmi.android.a.a.e.b.d a -> a
    net.youmi.android.a.a.e.b.d a(android.content.Context) -> a
    net.youmi.android.a.a.e.b.a a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,long) -> a
    boolean a(java.util.List) -> a
    boolean b(java.lang.String) -> b
net.youmi.android.a.a.e.b.e -> net.youmi.android.a.a.e.b.e:
    net.youmi.android.a.b.c.h a -> a
    net.youmi.android.a.b.c.h a(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,long) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
net.youmi.android.a.a.e.c.a.a -> net.youmi.android.a.a.e.c.a.a:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.a.b -> net.youmi.android.a.a.e.c.a.b:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.a.c -> net.youmi.android.a.a.e.c.a.c:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.a.d -> net.youmi.android.a.a.e.c.a.d:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.a.e -> net.youmi.android.a.a.e.c.a.e:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.a.f -> net.youmi.android.a.a.e.c.a.f:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.a.g -> net.youmi.android.a.a.e.c.a.g:
    int[] a -> a
net.youmi.android.a.a.e.c.a.h -> net.youmi.android.a.a.e.c.a.h:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String,int,int,java.lang.String,java.lang.String,net.youmi.android.a.a.e.g.b,net.youmi.android.a.a.e.a.b.h) -> a
    org.json.JSONObject a() -> a
    java.lang.String a(java.lang.String,int) -> a
    void a(android.content.Context,java.lang.String) -> a
net.youmi.android.a.a.e.c.a.i -> net.youmi.android.a.a.e.c.a.i:
    android.content.Context a -> a
    java.lang.String b -> b
    net.youmi.android.a.a.e.c.a.h c -> c
    void run() -> run
net.youmi.android.a.a.e.c.a.j -> net.youmi.android.a.a.e.c.a.j:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.a.k -> net.youmi.android.a.a.e.c.a.k:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.a.l -> net.youmi.android.a.a.e.c.a.l:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.a.m -> net.youmi.android.a.a.e.c.a.m:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.a.n -> net.youmi.android.a.a.e.c.a.n:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f) -> a
net.youmi.android.a.a.e.c.b.a -> net.youmi.android.a.a.e.c.b.a:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f) -> a
net.youmi.android.a.a.e.c.b.b -> net.youmi.android.a.a.e.c.b.b:
    int[] a -> a
net.youmi.android.a.a.e.c.b.c -> net.youmi.android.a.a.e.c.b.c:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.b.d -> net.youmi.android.a.a.e.c.b.d:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.b.e -> net.youmi.android.a.a.e.c.b.e:
    int[] a -> a
net.youmi.android.a.a.e.c.b.f -> net.youmi.android.a.a.e.c.b.f:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f) -> a
net.youmi.android.a.a.e.c.b.g -> net.youmi.android.a.a.e.c.b.g:
    int[] a -> a
net.youmi.android.a.a.e.c.b.h -> net.youmi.android.a.a.e.c.b.h:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.b.i -> net.youmi.android.a.a.e.c.b.i:
    int[] a -> a
net.youmi.android.a.a.e.c.b.j -> net.youmi.android.a.a.e.c.b.j:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.b.k -> net.youmi.android.a.a.e.c.b.k:
    int[] a -> a
net.youmi.android.a.a.e.c.b.l -> net.youmi.android.a.a.e.c.b.l:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.b.m -> net.youmi.android.a.a.e.c.b.m:
    int[] a -> a
net.youmi.android.a.a.e.c.b.n -> net.youmi.android.a.a.e.c.b.n:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f) -> a
net.youmi.android.a.a.e.c.b.o -> net.youmi.android.a.a.e.c.b.o:
    net.youmi.android.a.a.e.a.b.f a -> a
    net.youmi.android.a.a.e.c.b.n b -> b
    void run() -> run
net.youmi.android.a.a.e.c.b.p -> net.youmi.android.a.a.e.c.b.p:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.b.q -> net.youmi.android.a.a.e.c.b.q:
    android.content.Context a -> a
    net.youmi.android.a.a.e.g.h b -> b
    net.youmi.android.a.a.e.c.b.p c -> c
    void run() -> run
net.youmi.android.a.a.e.c.b.r -> net.youmi.android.a.a.e.c.b.r:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.b.s -> net.youmi.android.a.a.e.c.b.s:
    int[] a -> a
net.youmi.android.a.a.e.c.c.a -> net.youmi.android.a.a.e.c.c.a:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.c.b -> net.youmi.android.a.a.e.c.c.b:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.c.c -> net.youmi.android.a.a.e.c.c.c:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.c.d -> net.youmi.android.a.a.e.c.c.d:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.d.a -> net.youmi.android.a.a.e.c.d.a:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f) -> a
net.youmi.android.a.a.e.c.d.b -> net.youmi.android.a.a.e.c.d.b:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f) -> a
net.youmi.android.a.a.e.c.e.a -> net.youmi.android.a.a.e.c.e.a:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f) -> a
net.youmi.android.a.a.e.c.e.b -> net.youmi.android.a.a.e.c.e.b:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.e.c -> net.youmi.android.a.a.e.c.e.c:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.e.d -> net.youmi.android.a.a.e.c.e.d:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.e.e -> net.youmi.android.a.a.e.c.e.e:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.f.a -> net.youmi.android.a.a.e.c.f.a:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.f.b -> net.youmi.android.a.a.e.c.f.b:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    net.youmi.android.a.a.e.c.f.a d -> d
    void run() -> run
net.youmi.android.a.a.e.c.f.c -> net.youmi.android.a.a.e.c.f.c:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.g.a -> net.youmi.android.a.a.e.c.g.a:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f) -> a
net.youmi.android.a.a.e.c.g.b -> net.youmi.android.a.a.e.c.g.b:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.g.c -> net.youmi.android.a.a.e.c.g.c:
    int[] a -> a
net.youmi.android.a.a.e.c.g.d -> net.youmi.android.a.a.e.c.g.d:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.g.e -> net.youmi.android.a.a.e.c.g.e:
    int[] a -> a
net.youmi.android.a.a.e.c.h.a -> net.youmi.android.a.a.e.c.h.a:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.h.b -> net.youmi.android.a.a.e.c.h.b:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.a.a.e.c.h.c -> net.youmi.android.a.a.e.c.h.c:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
    java.lang.String a(android.content.Context,net.youmi.android.a.c.c.b,java.lang.String) -> a
net.youmi.android.a.a.e.d.a -> net.youmi.android.a.a.e.d.a:
    void a(java.lang.String,java.lang.String) -> a
net.youmi.android.a.a.e.d.b -> net.youmi.android.a.a.e.d.b:
    void a(java.lang.String) -> a
net.youmi.android.a.a.e.e.a -> net.youmi.android.a.a.e.e.a:
    net.youmi.android.a.a.e.e.a a -> a
    java.util.Hashtable b -> b
    net.youmi.android.a.a.e.e.a a() -> a
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
net.youmi.android.a.a.e.e.b -> net.youmi.android.a.a.e.e.b:
    net.youmi.android.a.a.e.e.b a -> a
    java.util.Hashtable b -> b
    net.youmi.android.a.a.e.e.b a() -> a
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
net.youmi.android.a.a.e.e.c -> net.youmi.android.a.a.e.e.c:
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
net.youmi.android.a.a.e.e.d -> net.youmi.android.a.a.e.e.d:
    android.content.Context a -> a
    java.lang.String b -> b
    android.webkit.WebView c -> c
    void run() -> run
net.youmi.android.a.a.e.f.a -> net.youmi.android.a.a.e.f.a:
    net.youmi.android.a.a.e.f.a a -> a
    java.util.HashSet b -> b
    net.youmi.android.a.a.e.f.a a() -> a
    java.util.HashSet b() -> b
    void a(net.youmi.android.a.a.e.d.a) -> a
    void b(net.youmi.android.a.a.e.d.a) -> b
    void a(java.lang.String,java.lang.String) -> a
net.youmi.android.a.a.e.f.b -> net.youmi.android.a.a.e.f.b:
    net.youmi.android.a.a.e.d.a a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    net.youmi.android.a.a.e.f.a d -> d
    void run() -> run
net.youmi.android.a.a.e.f.c -> net.youmi.android.a.a.e.f.c:
    android.content.Context a -> a
    java.util.HashMap b -> b
    net.youmi.android.a.a.e.f.c c -> c
    net.youmi.android.a.a.e.f.c a(android.content.Context) -> a
    boolean a(net.youmi.android.a.a.e.g.h) -> a
    void a(net.youmi.android.a.a.e.g.h,android.graphics.Bitmap) -> a
    void a(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
net.youmi.android.a.a.e.f.d -> net.youmi.android.a.a.e.f.d:
    android.content.Context a -> a
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    long g -> g
    boolean h -> h
    java.lang.String i -> i
    boolean j -> j
    int k -> k
    void run() -> run
    int a() -> a
    void a(int) -> a
net.youmi.android.a.a.e.f.e -> net.youmi.android.a.a.e.f.e:
    android.content.Context a -> a
    java.util.ArrayList b -> b
    java.lang.String c -> c
    long d -> d
    org.json.JSONArray e -> e
    java.lang.String f -> f
    net.youmi.android.a.a.e.a.b.h g -> g
    net.youmi.android.a.a.e.f.f h -> h
    void run() -> run
net.youmi.android.a.a.e.f.f -> net.youmi.android.a.a.e.f.f:
    net.youmi.android.a.a.e.f.e a -> a
    void b(net.youmi.android.a.b.g.e.a) -> b
    void b_(net.youmi.android.a.b.g.e.a) -> b_
    void c_(net.youmi.android.a.b.g.e.a) -> c_
    void e_(net.youmi.android.a.b.g.e.a) -> e_
    void d_(net.youmi.android.a.b.g.e.a) -> d_
    void a_(net.youmi.android.a.b.g.e.a) -> a_
net.youmi.android.a.a.e.f.g -> net.youmi.android.a.a.e.f.g:
    android.content.Context a -> a
    java.util.ArrayList b -> b
    java.lang.String c -> c
    long d -> d
    org.json.JSONArray e -> e
    java.lang.String f -> f
    net.youmi.android.a.a.e.a.b.h g -> g
    void run() -> run
net.youmi.android.a.a.e.g.a -> net.youmi.android.a.a.e.g.a:
    net.youmi.android.a.a.a.a.a a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    long f -> f
    java.lang.String g -> g
    boolean h -> h
    boolean i -> i
    net.youmi.android.a.a.e.g.b j -> j
    void a(long) -> a
    long a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    boolean e() -> e
    void a(boolean) -> a
    net.youmi.android.a.a.a.a.a f() -> f
    void a(net.youmi.android.a.a.a.a.a) -> a
    net.youmi.android.a.a.e.g.b g() -> g
    void a(net.youmi.android.a.a.e.g.b) -> a
    boolean h() -> h
    void b(boolean) -> b
    java.lang.String toString() -> toString
net.youmi.android.a.a.e.g.b -> net.youmi.android.a.a.e.g.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    boolean e() -> e
    java.lang.String f() -> f
    void e(java.lang.String) -> e
    java.lang.String toString() -> toString
net.youmi.android.a.a.e.g.c -> net.youmi.android.a.a.e.g.c:
    int a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    net.youmi.android.a.a.e.a.a.b g -> g
    int h -> h
    net.youmi.android.a.a.j.a i -> i
    boolean a() -> a
    java.lang.String b() -> b
    int c() -> c
    void a(int) -> a
    void a(java.lang.String) -> a
    void b(int) -> b
    int d() -> d
    int e() -> e
    int f() -> f
    int g() -> g
    net.youmi.android.a.a.e.a.a.b h() -> h
    void a(net.youmi.android.a.a.e.a.a.b) -> a
    int i() -> i
    void c(int) -> c
    net.youmi.android.a.a.j.a j() -> j
    void a(net.youmi.android.a.a.j.a) -> a
net.youmi.android.a.a.e.g.d -> net.youmi.android.a.a.e.g.d:
    java.util.ArrayList a -> a
    java.lang.String b -> b
    void a(java.lang.String) -> a
    boolean a(net.youmi.android.a.a.e.g.c) -> a
    net.youmi.android.a.a.e.g.c a(int) -> a
net.youmi.android.a.a.e.g.e -> net.youmi.android.a.a.e.g.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    void b(java.lang.String) -> b
    java.lang.String k() -> k
    void c(java.lang.String) -> c
    java.lang.String l() -> l
    int m() -> m
    java.lang.String n() -> n
    void d(java.lang.String) -> d
    java.lang.String o() -> o
    void e(java.lang.String) -> e
    java.lang.String p() -> p
    void f(java.lang.String) -> f
    java.lang.String q() -> q
    void g(java.lang.String) -> g
    boolean r() -> r
net.youmi.android.a.a.e.g.f -> net.youmi.android.a.a.e.g.f:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    boolean e -> e
    void e() -> e
    java.lang.String a() -> a
    long b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    boolean d() -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
net.youmi.android.a.a.e.g.g -> net.youmi.android.a.a.e.g.g:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    double e -> e
    double f -> f
    boolean g -> g
    void d(int) -> d
    int s() -> s
    void e(int) -> e
    int t() -> t
    void f(int) -> f
    int u() -> u
    void g(int) -> g
    int v() -> v
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    boolean w() -> w
    void a(boolean) -> a
    double x() -> x
    void a(double) -> a
    double y() -> y
    void b(double) -> b
net.youmi.android.a.a.e.g.h -> net.youmi.android.a.a.e.g.h:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void f(java.lang.String) -> f
    java.lang.String g() -> g
    void g(java.lang.String) -> g
    boolean h() -> h
net.youmi.android.a.a.f.a -> net.youmi.android.a.a.f.a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String a(android.content.Context) -> a
net.youmi.android.a.a.g.a.a -> net.youmi.android.a.a.g.a.a:
    boolean a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String) -> b
net.youmi.android.a.a.g.a.a.a -> net.youmi.android.a.a.g.a.a.a:
    net.youmi.android.a.a.g.a.a.a a -> a
    net.youmi.android.a.a.g.a.a.b b -> b
    net.youmi.android.a.a.g.a.a.a a(android.content.Context) -> a
    boolean a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.Cursor) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
    boolean a(java.util.List) -> a
    boolean a(net.youmi.android.a.a.g.a.b.a) -> a
    boolean b(net.youmi.android.a.a.g.a.b.a) -> b
    net.youmi.android.a.a.g.a.b.a a(java.lang.String) -> a
    net.youmi.android.a.a.g.a.b.a a(int) -> a
net.youmi.android.a.a.g.a.a.b -> net.youmi.android.a.a.g.a.a.b:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String a(android.content.Context) -> a
net.youmi.android.a.a.g.a.a.c -> net.youmi.android.a.a.g.a.a.c:
    net.youmi.android.a.a.g.a.a.c a -> a
    net.youmi.android.a.a.g.a.a.d b -> b
    net.youmi.android.a.a.g.a.a.c a(android.content.Context) -> a
    boolean a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.Cursor) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
    boolean a(net.youmi.android.a.a.g.a.b.b) -> a
    boolean b(net.youmi.android.a.a.g.a.b.b) -> b
    void a() -> a
    boolean c(net.youmi.android.a.a.g.a.b.b) -> c
    boolean a(java.lang.String) -> a
    void b() -> b
    java.util.List c() -> c
    net.youmi.android.a.a.g.a.b.b b(java.lang.String) -> b
    net.youmi.android.a.a.g.a.b.b d() -> d
net.youmi.android.a.a.g.a.a.d -> net.youmi.android.a.a.g.a.a.d:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String a(android.content.Context) -> a
net.youmi.android.a.a.g.a.b -> net.youmi.android.a.a.g.a.b:
    android.content.Context a -> a
    net.youmi.android.a.a.g.a.b.b b -> b
    void a() -> a
net.youmi.android.a.a.g.a.b.a -> net.youmi.android.a.a.g.a.b.a:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    java.lang.String g -> g
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    void a(int) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    int d() -> d
    void b(int) -> b
    int e() -> e
    void c(int) -> c
    int f() -> f
    void d(int) -> d
    java.lang.String g() -> g
    void c(java.lang.String) -> c
    java.lang.String toString() -> toString
net.youmi.android.a.a.g.a.b.b -> net.youmi.android.a.a.g.a.b.b:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    long d -> d
    long e -> e
    int f -> f
    int g -> g
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    long c() -> c
    void a(long) -> a
    long d() -> d
    void b(long) -> b
    long e() -> e
    void c(long) -> c
    int f() -> f
    void a(int) -> a
    int g() -> g
    void b(int) -> b
    java.lang.String toString() -> toString
net.youmi.android.a.a.g.a.c -> net.youmi.android.a.a.g.a.c:
    int b -> b
    int c -> c
    int a -> a
    android.content.Context d -> d
    int b() -> b
    void a() -> a
    net.youmi.android.a.a.g.d.a.d a(java.lang.String,net.youmi.android.a.a.e.g.b,int) -> a
    net.youmi.android.a.a.g.d.a.d a(java.lang.String,net.youmi.android.a.a.e.g.b,int,java.lang.String,long) -> a
    void a(java.lang.String) -> a
    void c() -> c
    void d() -> d
    void b(java.lang.String) -> b
    void a(java.lang.String,long) -> a
    android.content.Context a(net.youmi.android.a.a.g.a.c) -> a
net.youmi.android.a.a.g.a.d -> net.youmi.android.a.a.g.a.d:
    java.lang.String a -> a
    net.youmi.android.a.a.g.a.c b -> b
    void run() -> run
net.youmi.android.a.a.g.a.e -> net.youmi.android.a.a.g.a.e:
    void a(java.lang.String,int,int) -> a
net.youmi.android.a.a.g.a.f -> net.youmi.android.a.a.g.a.f:
    net.youmi.android.a.a.g.a.f a -> a
    net.youmi.android.a.a.g.a.f a() -> a
    void a(java.lang.String,int,int) -> a
net.youmi.android.a.a.g.a.g -> net.youmi.android.a.a.g.a.g:
    int d -> d
    android.app.PendingIntent e -> e
    int f -> f
    android.app.PendingIntent g -> g
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void a(android.content.Context,net.youmi.android.a.a.g.a.b.b) -> a
    void a(android.content.Context,net.youmi.android.a.a.g.a.b.b,long,long) -> a
    void b(android.content.Context,net.youmi.android.a.a.g.a.b.b) -> b
    void a(android.content.Context,long,long) -> a
    void a(android.content.Context,long) -> a
    void b(android.content.Context,long) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    android.app.PendingIntent e(android.content.Context) -> e
    android.app.PendingIntent f(android.content.Context) -> f
    int g(android.content.Context) -> g
    int h(android.content.Context) -> h
net.youmi.android.a.a.g.a.h -> net.youmi.android.a.a.g.a.h:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
net.youmi.android.a.a.g.b.a -> net.youmi.android.a.a.g.b.a:
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
net.youmi.android.a.a.g.c.a -> net.youmi.android.a.a.g.c.a:
    net.youmi.android.a.a.g.c.a e -> e
    net.youmi.android.a.a.g.c.g a -> a
    net.youmi.android.a.a.g.c.d b -> b
    net.youmi.android.a.a.g.c.e c -> c
    android.util.SparseArray f -> f
    android.util.SparseArray g -> g
    net.youmi.android.a.a.g.c.a a(android.content.Context) -> a
    void a_(net.youmi.android.a.b.g.e.a) -> a_
    void b(net.youmi.android.a.b.g.e.a) -> b
    void b_(net.youmi.android.a.b.g.e.a) -> b_
    void c_(net.youmi.android.a.b.g.e.a) -> c_
    void d_(net.youmi.android.a.b.g.e.a) -> d_
    void e_(net.youmi.android.a.b.g.e.a) -> e_
    void a(int) -> a
    void b(int) -> b
    void a(net.youmi.android.a.a.e.g.a,net.youmi.android.a.a.e.g.f) -> a
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    net.youmi.android.a.a.e.g.b r(net.youmi.android.a.b.g.e.a) -> r
    net.youmi.android.a.a.e.g.f h(net.youmi.android.a.b.g.e.a) -> h
    net.youmi.android.a.a.e.g.a f_(net.youmi.android.a.b.g.e.a) -> f_
    int j(net.youmi.android.a.b.g.e.a) -> j
net.youmi.android.a.a.g.c.b -> net.youmi.android.a.a.g.c.b:
    net.youmi.android.a.b.g.d.a a -> a
    int b -> b
    net.youmi.android.a.a.g.c.a c -> c
    void run() -> run
net.youmi.android.a.a.g.c.c -> net.youmi.android.a.a.g.c.c:
    android.content.Context a -> a
    android.app.NotificationManager b -> b
    android.app.Notification c -> c
    android.app.PendingIntent d -> d
    android.app.PendingIntent e -> e
    int f -> f
    net.youmi.android.a.a.a.a.g g -> g
    net.youmi.android.a.a.a.a.a h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    void b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean c(java.lang.String) -> c
    void a(int,long) -> a
    void a(java.lang.String) -> a
    void a() -> a
    void b(java.lang.String) -> b
net.youmi.android.a.a.g.c.d -> net.youmi.android.a.a.g.c.d:
    android.content.Context a -> a
    net.youmi.android.a.a.g.c.a b -> b
    java.util.HashMap c -> c
    void a(net.youmi.android.a.b.g.e.a) -> a
    void b(net.youmi.android.a.b.g.e.a) -> b
    void a(net.youmi.android.a.b.g.e.a,long,long,int,long) -> a
    void c(net.youmi.android.a.b.g.e.a) -> c
    void d(net.youmi.android.a.b.g.e.a) -> d
    void e(net.youmi.android.a.b.g.e.a) -> e
    void a(int) -> a
    net.youmi.android.a.a.g.c.c g(net.youmi.android.a.b.g.e.a) -> g
    int f(net.youmi.android.a.b.g.e.a) -> f
    void a(android.content.Context,int,java.lang.String) -> a
net.youmi.android.a.a.g.c.e -> net.youmi.android.a.a.g.c.e:
    android.content.Context a -> a
    net.youmi.android.a.a.g.c.a b -> b
    void a(net.youmi.android.a.b.g.e.a) -> a
    void b(net.youmi.android.a.b.g.e.a) -> b
    void a(net.youmi.android.a.b.g.e.a,long,long,int,long) -> a
    void c(net.youmi.android.a.b.g.e.a) -> c
    void d(net.youmi.android.a.b.g.e.a) -> d
    void e(net.youmi.android.a.b.g.e.a) -> e
    void a(int) -> a
    net.youmi.android.a.a.e.g.a f(net.youmi.android.a.b.g.e.a) -> f
    void a(java.lang.String) -> a
    android.content.Context a(net.youmi.android.a.a.g.c.e) -> a
net.youmi.android.a.a.g.c.f -> net.youmi.android.a.a.g.c.f:
    java.lang.String a -> a
    net.youmi.android.a.a.g.c.e b -> b
    void run() -> run
net.youmi.android.a.a.g.c.g -> net.youmi.android.a.a.g.c.g:
    net.youmi.android.a.a.g.c.a a -> a
    void a(net.youmi.android.a.b.g.e.a) -> a
    void b(net.youmi.android.a.b.g.e.a) -> b
    void c(net.youmi.android.a.b.g.e.a) -> c
    void d(net.youmi.android.a.b.g.e.a) -> d
    void e(net.youmi.android.a.b.g.e.a) -> e
    void a(net.youmi.android.a.b.g.e.a,long,long,int,long) -> a
    void a(int) -> a
    void a(net.youmi.android.a.a.e.g.a,net.youmi.android.a.a.e.g.f) -> a
    void a(net.youmi.android.a.b.g.e.a,int,int,long) -> a
    void a(net.youmi.android.a.a.e.g.a,net.youmi.android.a.a.e.g.f,int,int,long) -> a
net.youmi.android.a.a.g.c.h -> net.youmi.android.a.a.g.c.h:
    net.youmi.android.AdReceiver a -> a
    void a(android.content.Context) -> a
net.youmi.android.a.a.g.c.i -> net.youmi.android.a.a.g.c.i:
    java.lang.String a -> a
    android.content.Context b -> b
    int c -> c
    int d -> d
    void a(android.content.Context) -> a
    void a(java.lang.String) -> a
    void a() -> a
    void a(java.lang.String,int) -> a
    android.content.Context a(net.youmi.android.a.a.g.c.i) -> a
net.youmi.android.a.a.g.c.j -> net.youmi.android.a.a.g.c.j:
    java.lang.String a -> a
    int b -> b
    net.youmi.android.a.a.g.c.i c -> c
    void run() -> run
net.youmi.android.a.a.g.c.k -> net.youmi.android.a.a.g.c.k:
    int a -> a
    int b -> b
    org.json.JSONObject a() -> a
    boolean a(org.json.JSONObject) -> a
    int b() -> b
    void a(int) -> a
    int c() -> c
    void b(int) -> b
net.youmi.android.a.a.g.c.l -> net.youmi.android.a.a.g.c.l:
    net.youmi.android.a.a.g.c.l a -> a
    net.youmi.android.a.a.g.c.l b() -> b
    net.youmi.android.a.a.a.b.c a() -> a
net.youmi.android.a.a.g.c.m -> net.youmi.android.a.a.g.c.m:
    net.youmi.android.a.a.g.c.a a -> a
    net.youmi.android.a.b.g.e.a b -> b
    void run() -> run
    java.lang.String a(java.io.File) -> a
    void a(java.lang.String,net.youmi.android.a.a.e.g.a,net.youmi.android.a.b.g.e.a) -> a
    void a() -> a
    void b(java.io.File) -> b
net.youmi.android.a.a.g.d.a -> net.youmi.android.a.a.g.d.a:
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,net.youmi.android.a.a.e.g.b,int) -> a
    java.lang.String a(android.content.Context,net.youmi.android.a.a.e.g.b) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,int) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,int,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
net.youmi.android.a.a.g.d.a.a -> net.youmi.android.a.a.g.d.a.a:
    android.content.Context a -> a
    java.util.Queue b -> b
    net.youmi.android.a.a.g.d.a.a c -> c
    net.youmi.android.a.a.g.d.a.a a(android.content.Context) -> a
    boolean a(net.youmi.android.a.a.g.d.a.d) -> a
    net.youmi.android.a.a.g.d.a.d a() -> a
    net.youmi.android.a.a.g.d.a.d b() -> b
    boolean c() -> c
    boolean d() -> d
net.youmi.android.a.a.g.d.a.b -> net.youmi.android.a.a.g.d.a.b:
    net.youmi.android.a.a.g.d.a.b a -> a
    net.youmi.android.a.a.g.d.a.c b -> b
    net.youmi.android.a.a.g.d.a.b a(android.content.Context) -> a
    boolean a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.Cursor) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
    boolean a(net.youmi.android.a.a.g.d.a.d) -> a
    boolean b(net.youmi.android.a.a.g.d.a.d) -> b
    boolean a() -> a
    net.youmi.android.a.a.g.d.a.d a(java.lang.String) -> a
    java.util.List b() -> b
net.youmi.android.a.a.g.d.a.c -> net.youmi.android.a.a.g.d.a.c:
    java.lang.String a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String a(android.content.Context) -> a
net.youmi.android.a.a.g.d.a.d -> net.youmi.android.a.a.g.d.a.d:
    long a -> a
    java.lang.String b -> b
    int c -> c
    long d -> d
    long e -> e
    java.lang.String f -> f
    long g -> g
    java.lang.String h -> h
    boolean a() -> a
    java.lang.String toString() -> toString
net.youmi.android.a.a.g.d.a.e -> net.youmi.android.a.a.g.d.a.e:
    int a -> a
    android.content.Context b -> b
    boolean c -> c
    net.youmi.android.a.a.g.d.a.e d -> d
    net.youmi.android.a.a.g.d.a.e a(android.content.Context) -> a
    void a() -> a
    void a(java.lang.String,int) -> a
    void b(java.lang.String,int) -> b
    void c(java.lang.String,int) -> c
net.youmi.android.a.a.g.d.a.f -> net.youmi.android.a.a.g.d.a.f:
    net.youmi.android.a.a.g.d.a.h a -> a
    void run() -> run
net.youmi.android.a.a.g.d.a.g -> net.youmi.android.a.a.g.d.a.g:
    net.youmi.android.a.a.g.d.a.i a -> a
    void run() -> run
net.youmi.android.a.a.g.d.a.h -> net.youmi.android.a.a.g.d.a.h:
    android.content.Context a -> a
    net.youmi.android.a.a.e.g.b b -> b
    int[] c -> c
    long[] d -> d
    java.lang.String[] e -> e
    long[] f -> f
    net.youmi.android.a.a.g.d.a.d g -> g
    void a() -> a
net.youmi.android.a.a.g.d.a.i -> net.youmi.android.a.a.g.d.a.i:
    android.content.Context a -> a
    void a() -> a
net.youmi.android.a.a.g.d.b -> net.youmi.android.a.a.g.d.b:
    void a(java.lang.String,java.io.ByteArrayOutputStream) -> a
net.youmi.android.a.a.g.e.a -> net.youmi.android.a.a.g.e.a:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    boolean e -> e
    void run() -> run
    void a() -> a
    void a(android.content.Context,boolean) -> a
    java.lang.String b() -> b
    void a(android.content.Context) -> a
net.youmi.android.a.a.g.e.a.a -> net.youmi.android.a.a.g.e.a.a:
    void a(java.lang.String) -> a
net.youmi.android.a.a.g.e.a.b -> net.youmi.android.a.a.g.e.a.b:
    android.content.Context a -> a
    net.youmi.android.a.a.g.e.a.b b -> b
    net.youmi.android.a.a.g.e.a.b a(android.content.Context) -> a
    void a(java.lang.String) -> a
net.youmi.android.a.a.g.e.b -> net.youmi.android.a.a.g.e.b:
    java.lang.String a -> a
    net.youmi.android.a.a.g.e.b b -> b
    java.lang.String b(android.content.Context) -> b
    net.youmi.android.a.a.g.e.b a(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    boolean a(java.util.List) -> a
    java.util.List a() -> a
net.youmi.android.a.a.g.e.c -> net.youmi.android.a.a.g.e.c:
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.util.List) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
net.youmi.android.a.a.g.e.d -> net.youmi.android.a.a.g.e.d:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
net.youmi.android.a.a.g.e.e -> net.youmi.android.a.a.g.e.e:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
net.youmi.android.a.a.g.e.f -> net.youmi.android.a.a.g.e.f:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.a.a.g.e.g -> net.youmi.android.a.a.g.e.g:
    net.youmi.android.a.a.g.e.g a -> a
    android.content.IntentFilter b -> b
    void b(android.content.Context) -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
net.youmi.android.a.a.g.e.h -> net.youmi.android.a.a.g.e.h:
    java.lang.String a -> a
    java.lang.String b -> b
    org.json.JSONObject c -> c
    int d -> d
    android.content.Context e -> e
    void a() -> a
    java.util.HashMap b() -> b
    java.lang.String c() -> c
    void a(java.lang.String,int) -> a
    org.apache.http.Header a(java.lang.String,java.lang.String) -> a
net.youmi.android.a.a.g.e.i -> net.youmi.android.a.a.g.e.i:
    java.lang.String a -> a
    java.lang.String b -> b
    net.youmi.android.a.a.g.e.h c -> c
    java.lang.String getValue() -> getValue
    java.lang.String getName() -> getName
    org.apache.http.HeaderElement[] getElements() -> getElements
net.youmi.android.a.a.g.e.j -> net.youmi.android.a.a.g.e.j:
    android.content.Context a -> a
    java.lang.String b -> b
    void a() -> a
    java.lang.String b() -> b
net.youmi.android.a.a.g.e.k -> net.youmi.android.a.a.g.e.k:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.a.a.g.e.l -> net.youmi.android.a.a.g.e.l:
    android.content.Context a -> a
    boolean b -> b
    void run() -> run
net.youmi.android.a.a.g.e.m -> net.youmi.android.a.a.g.e.m:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.a.a.g.e.n -> net.youmi.android.a.a.g.e.n:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.a.a.g.f.a.a -> net.youmi.android.a.a.g.f.a.a:
    void a(android.content.Context) -> a
    void a(android.content.Intent) -> a
net.youmi.android.a.a.g.g.a -> net.youmi.android.a.a.g.g.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String a(android.content.Context) -> a
net.youmi.android.a.a.g.g.b -> net.youmi.android.a.a.g.g.b:
    net.youmi.android.a.a.g.g.a a -> a
    net.youmi.android.a.a.g.g.b b -> b
    net.youmi.android.a.a.g.g.b a(android.content.Context) -> a
    boolean a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.Cursor) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
    void a(net.youmi.android.a.a.g.g.c) -> a
    void b(net.youmi.android.a.a.g.g.c) -> b
    void a(java.lang.String) -> a
    java.util.List a() -> a
net.youmi.android.a.a.g.g.c -> net.youmi.android.a.a.g.g.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String toString() -> toString
net.youmi.android.a.a.g.g.d -> net.youmi.android.a.a.g.g.d:
    android.content.Context a -> a
    net.youmi.android.a.a.g.g.d b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.Timer e -> e
    net.youmi.android.a.a.g.g.d a(android.content.Context) -> a
    void a() -> a
    void f() -> f
    void b() -> b
    java.util.List c() -> c
    java.util.List d() -> d
    java.util.List a(java.util.List) -> a
    java.util.Timer e() -> e
    java.util.Timer a(java.util.Timer) -> a
    android.content.Context a(net.youmi.android.a.a.g.g.d) -> a
net.youmi.android.a.a.g.g.e -> net.youmi.android.a.a.g.g.e:
    net.youmi.android.a.a.g.g.d a -> a
    void run() -> run
net.youmi.android.a.a.g.g.f -> net.youmi.android.a.a.g.g.f:
    net.youmi.android.a.a.g.g.e a -> a
    void run() -> run
net.youmi.android.a.a.h.a -> net.youmi.android.a.a.h.a:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    java.util.HashMap c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.util.HashMap K() -> K
    java.util.HashMap L() -> L
    java.util.HashMap M() -> M
    java.util.HashMap N() -> N
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    java.lang.String m() -> m
    java.lang.String n() -> n
    java.lang.String o() -> o
    java.lang.String p() -> p
    java.lang.String q() -> q
    java.lang.String r() -> r
    java.lang.String s() -> s
    java.lang.String t() -> t
    java.lang.String u() -> u
    java.lang.String v() -> v
    java.lang.String w() -> w
    java.lang.String x() -> x
    java.lang.String y() -> y
    java.lang.String z() -> z
    java.lang.String A() -> A
    java.lang.String B() -> B
    java.lang.String C() -> C
    java.lang.String D() -> D
    java.lang.String E() -> E
    java.lang.String F() -> F
    java.lang.String G() -> G
    java.lang.String H() -> H
    java.lang.String I() -> I
    java.lang.String J() -> J
net.youmi.android.a.a.h.b -> net.youmi.android.a.a.h.b:
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    java.lang.String m() -> m
net.youmi.android.a.a.i.a.a -> net.youmi.android.a.a.i.a.a:
    android.webkit.WebView a -> a
    java.lang.String b -> b
    void run() -> run
net.youmi.android.a.a.i.a.a.a -> net.youmi.android.a.a.i.a.a.a:
    net.youmi.android.a.a.i.a.b a -> a
    net.youmi.android.a.a.j.d b -> b
    android.content.Context c -> c
    android.widget.RelativeLayout e -> e
    android.widget.RelativeLayout f -> f
    int g -> g
    int h -> h
    net.youmi.android.a.a.e.a.b.h d -> d
    net.youmi.android.a.a.e.g.g i -> i
    void a(android.content.Context,net.youmi.android.a.a.e.g.g,net.youmi.android.a.a.e.a.b.h,boolean) -> a
    void a(net.youmi.android.a.a.e.g.g) -> a
    void a(int,int,int,int) -> a
    void onBackPressed() -> onBackPressed
    boolean a(java.lang.Runnable) -> a
    net.youmi.android.a.a.e.a f() -> f
    void a(java.lang.String) -> a
    boolean l() -> l
    boolean b(java.lang.String) -> b
    boolean a(java.lang.String,byte[]) -> a
    boolean m() -> m
    void a() -> a
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void k() -> k
    void a(net.youmi.android.a.a.j.b.f) -> a
    void b() -> b
    void a(java.lang.CharSequence) -> a
    void a(int) -> a
    void b(int) -> b
    void b(java.lang.CharSequence) -> b
    void c(int) -> c
net.youmi.android.a.a.i.a.a.b -> net.youmi.android.a.a.i.a.a.b:
    net.youmi.android.a.a.i.a.a.a a -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
net.youmi.android.a.a.i.a.a.c -> net.youmi.android.a.a.i.a.a.c:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    net.youmi.android.a.a.i.a.b.f d -> d
    net.youmi.android.a.a.i.a.b.d e -> e
    net.youmi.android.a.a.e.a.b.h f -> f
    net.youmi.android.a.a.e.a.b.f g -> g
    net.youmi.android.a.a.e.a.b.h a() -> a
    void a(net.youmi.android.a.a.e.a.b.h) -> a
    net.youmi.android.a.a.e.a.b.f b() -> b
    void a(net.youmi.android.a.a.e.a.b.f) -> a
    int c() -> c
    void a(int) -> a
    java.lang.String d() -> d
    void a(java.lang.String) -> a
    java.lang.String e() -> e
    void b(java.lang.String) -> b
    net.youmi.android.a.a.i.a.b.d f() -> f
    void a(net.youmi.android.a.a.i.a.b.d) -> a
    void a(net.youmi.android.a.a.i.a.b.f) -> a
    net.youmi.android.a.a.i.a.b.f g() -> g
    android.app.Activity h() -> h
net.youmi.android.a.a.i.a.a.d -> net.youmi.android.a.a.i.a.a.d:
    net.youmi.android.a.a.j.k e -> e
    net.youmi.android.listener.Interface_WebViewDialogListener f -> f
    void a(net.youmi.android.listener.Interface_WebViewDialogListener) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    android.os.Bundle onSaveInstanceState() -> onSaveInstanceState
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    void onContentChanged() -> onContentChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void a(android.content.Context,net.youmi.android.a.a.e.g.g) -> a
    net.youmi.android.a.a.i.a.a.d b(android.content.Context,net.youmi.android.a.a.e.g.g) -> b
    void onClick(android.view.View) -> onClick
    boolean a(int,int,float) -> a
net.youmi.android.a.a.i.a.a.e -> net.youmi.android.a.a.i.a.a.e:
    android.app.Activity a -> a
    net.youmi.android.a.a.e.g.g b -> b
    void run() -> run
net.youmi.android.a.a.i.a.b -> net.youmi.android.a.a.i.a.b:
    net.youmi.android.a.a.e.d.b e -> e
    net.youmi.android.a.a.i.a.b.c f -> f
    net.youmi.android.a.a.i.a.b.e g -> g
    boolean a -> a
    boolean b -> b
    boolean c -> c
    java.lang.String d -> d
    android.widget.RelativeLayout h -> h
    net.youmi.android.a.a.i.a.i i -> i
    net.youmi.android.a.a.i.a.k j -> j
    net.youmi.android.a.a.i.a.j k -> k
    java.util.Timer l -> l
    net.youmi.android.a.a.j.b.l m -> m
    android.content.Context n -> n
    boolean o -> o
    net.youmi.android.a.a.i.a.f p -> p
    boolean a() -> a
    void reload() -> reload
    net.youmi.android.a.a.i.a.i b() -> b
    void loadUrl(java.lang.String) -> loadUrl
    void postUrl(java.lang.String,byte[]) -> postUrl
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,int) -> a
    void k() -> k
    void l() -> l
    void a(net.youmi.android.a.a.i.a.b.e) -> a
    void c(android.webkit.WebView,java.lang.String) -> c
    boolean c() -> c
    boolean d() -> d
    boolean canGoBack() -> canGoBack
    boolean canGoForward() -> canGoForward
    void clearHistory() -> clearHistory
    void e() -> e
    void g() -> g
    void h() -> h
    android.view.View getCurrentView() -> getCurrentView
    boolean b(android.webkit.WebView,java.lang.String) -> b
    net.youmi.android.a.a.e.a f() -> f
    boolean a(java.lang.Runnable) -> a
    void onClick(android.view.View) -> onClick
    void i() -> i
    void j() -> j
    net.youmi.android.a.a.i.a.k a(net.youmi.android.a.a.i.a.b) -> a
    net.youmi.android.a.a.i.a.f b(net.youmi.android.a.a.i.a.b) -> b
net.youmi.android.a.a.i.a.b.a -> net.youmi.android.a.a.i.a.b.a:
    boolean l() -> l
    boolean b(java.lang.String) -> b
    boolean a(java.lang.String,byte[]) -> a
    boolean m() -> m
    boolean a(int,int,float) -> a
net.youmi.android.a.a.i.a.b.b -> net.youmi.android.a.a.i.a.b.b:
    void i() -> i
    void j() -> j
net.youmi.android.a.a.i.a.b.c -> net.youmi.android.a.a.i.a.b.c:
    boolean c() -> c
    boolean d() -> d
    boolean canGoBack() -> canGoBack
    boolean canGoForward() -> canGoForward
    void loadUrl(java.lang.String) -> loadUrl
    void clearHistory() -> clearHistory
    android.view.View getCurrentView() -> getCurrentView
    void reload() -> reload
    void e() -> e
    void g() -> g
    void h() -> h
    void postUrl(java.lang.String,byte[]) -> postUrl
net.youmi.android.a.a.i.a.b.d -> net.youmi.android.a.a.i.a.b.d:
    void a(android.webkit.WebView,int) -> a
    void c(android.webkit.WebView,java.lang.String) -> c
net.youmi.android.a.a.i.a.b.e -> net.youmi.android.a.a.i.a.b.e:
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
net.youmi.android.a.a.i.a.b.f -> net.youmi.android.a.a.i.a.b.f:
    boolean b(android.webkit.WebView,java.lang.String) -> b
net.youmi.android.a.a.i.a.b.g -> net.youmi.android.a.a.i.a.b.g:
    net.youmi.android.a.a.i.a.b.g a -> a
    boolean b -> b
    boolean c -> c
    net.youmi.android.a.a.i.a.b.g a() -> a
    void b() -> b
    void c() -> c
    boolean d() -> d
    boolean e() -> e
    void f() -> f
net.youmi.android.a.a.i.a.c -> net.youmi.android.a.a.i.a.c:
    java.lang.String a -> a
    net.youmi.android.a.a.i.a.b b -> b
    void run() -> run
net.youmi.android.a.a.i.a.d -> net.youmi.android.a.a.i.a.d:
    long b -> b
    android.view.animation.DecelerateInterpolator c -> c
    net.youmi.android.a.a.i.a.b a -> a
    void run() -> run
    long a(net.youmi.android.a.a.i.a.d) -> a
    long a(net.youmi.android.a.a.i.a.d,long) -> a
    android.view.animation.DecelerateInterpolator b(net.youmi.android.a.a.i.a.d) -> b
net.youmi.android.a.a.i.a.e -> net.youmi.android.a.a.i.a.e:
    net.youmi.android.a.a.i.a.d a -> a
    void run() -> run
net.youmi.android.a.a.i.a.f -> net.youmi.android.a.a.i.a.f:
    java.lang.String a -> a
    byte[] b -> b
    int c -> c
    net.youmi.android.a.a.i.a.b d -> d
    java.lang.String toString() -> toString
net.youmi.android.a.a.i.a.g -> net.youmi.android.a.a.i.a.g:
    boolean a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    net.youmi.android.a.a.i.a.b.d f -> f
    net.youmi.android.a.a.i.a.b.f g -> g
    android.content.Context h -> h
    net.youmi.android.a.a.i.a.a.c i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    void a(android.content.Context,net.youmi.android.a.a.i.a.a.c,net.youmi.android.a.a.e.a.a) -> a
    void a() -> a
    void a(net.youmi.android.a.a.e.a.a,int) -> a
    void a(int) -> a
    void b() -> b
    void a(net.youmi.android.a.a.i.a.b.f) -> a
    void a(net.youmi.android.a.a.i.a.b.d) -> a
    void setEnableOffersJsCodeLoader(boolean) -> setEnableOffersJsCodeLoader
    void setEnableOffersJsFileLoader(boolean) -> setEnableOffersJsFileLoader
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,int) -> a
    void a(java.lang.String,java.lang.String) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void c(android.webkit.WebView,java.lang.String) -> c
    boolean c() -> c
    boolean d() -> d
    android.view.View getCurrentView() -> getCurrentView
    boolean b(android.webkit.WebView,java.lang.String) -> b
    void setUserAgentString(java.lang.String) -> setUserAgentString
    java.lang.String getUserAgentString() -> getUserAgentString
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void e() -> e
    void g() -> g
    void h() -> h
    android.content.Context a(net.youmi.android.a.a.i.a.g) -> a
net.youmi.android.a.a.i.a.h -> net.youmi.android.a.a.i.a.h:
    net.youmi.android.a.a.i.a.g a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
net.youmi.android.a.a.i.a.i -> net.youmi.android.a.a.i.a.i:
    net.youmi.android.a.a.i.a.g a(android.content.Context,java.lang.Object[]) -> a
    boolean a() -> a
    android.view.View b(android.content.Context,java.lang.Object[]) -> b
net.youmi.android.a.a.i.a.j -> net.youmi.android.a.a.i.a.j:
    android.widget.TextView a -> a
    android.widget.Button b -> b
    android.widget.Button c -> c
    void a(java.lang.String) -> a
    android.widget.Button a() -> a
    android.widget.Button b() -> b
net.youmi.android.a.a.i.a.k -> net.youmi.android.a.a.i.a.k:
    android.widget.ProgressBar a -> a
    android.widget.TextView b -> b
    net.youmi.android.a.a.i.a.m c -> c
    void a(java.lang.String) -> a
net.youmi.android.a.a.i.a.l -> net.youmi.android.a.a.i.a.l:
net.youmi.android.a.a.i.a.m -> net.youmi.android.a.a.i.a.m:
    net.youmi.android.a.a.i.a.k a -> a
    float b -> b
    int c -> c
    android.graphics.drawable.Drawable d -> d
    int e -> e
    int f -> f
    net.youmi.android.a.a.i.a.m a(int) -> a
    net.youmi.android.a.a.i.a.m a(float) -> a
    net.youmi.android.a.a.i.a.m a(android.graphics.drawable.Drawable) -> a
    net.youmi.android.a.a.i.a.m b(int) -> b
net.youmi.android.a.a.j.a -> net.youmi.android.a.a.j.a:
    java.lang.String a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    int e -> e
    boolean f -> f
net.youmi.android.a.a.j.a.a -> net.youmi.android.a.a.j.a.a:
    void a(java.lang.CharSequence) -> a
    void a(int) -> a
    void b(java.lang.CharSequence) -> b
    void b(int) -> b
    void c(int) -> c
net.youmi.android.a.a.j.a.b -> net.youmi.android.a.a.j.a.b:
    net.youmi.android.a.a.j.a.b a -> a
    net.youmi.android.a.a.j.a.b a() -> a
    void a(java.lang.CharSequence) -> a
    void a(int) -> a
    void b(int) -> b
    void b(java.lang.CharSequence) -> b
    void c(int) -> c
    void b() -> b
net.youmi.android.a.a.j.a.c -> net.youmi.android.a.a.j.a.c:
    java.util.List a -> a
    java.lang.CharSequence b -> b
    net.youmi.android.a.a.j.a.b c -> c
    void run() -> run
net.youmi.android.a.a.j.a.d -> net.youmi.android.a.a.j.a.d:
    java.util.List a -> a
    int b -> b
    net.youmi.android.a.a.j.a.b c -> c
    void run() -> run
net.youmi.android.a.a.j.a.e -> net.youmi.android.a.a.j.a.e:
    java.util.List a -> a
    int b -> b
    net.youmi.android.a.a.j.a.b c -> c
    void run() -> run
net.youmi.android.a.a.j.a.f -> net.youmi.android.a.a.j.a.f:
    java.util.List a -> a
    java.lang.CharSequence b -> b
    net.youmi.android.a.a.j.a.b c -> c
    void run() -> run
net.youmi.android.a.a.j.a.g -> net.youmi.android.a.a.j.a.g:
    java.util.List a -> a
    int b -> b
    net.youmi.android.a.a.j.a.b c -> c
    void run() -> run
net.youmi.android.a.a.j.b -> net.youmi.android.a.a.j.b:
    android.content.Context a -> a
    net.youmi.android.a.a.j.c b -> b
    android.view.View c -> c
    android.view.View d -> d
    android.view.View e -> e
    android.view.View f -> f
    android.view.View g -> g
    void a() -> a
    void a(android.widget.TableRow,int,android.view.View,android.widget.RelativeLayout$LayoutParams) -> a
    void setBackEnable(boolean) -> setBackEnable
    void setForwardEnable(boolean) -> setForwardEnable
    void onClick(android.view.View) -> onClick
net.youmi.android.a.a.j.b.a -> net.youmi.android.a.a.j.b.a:
    android.widget.ImageView a -> a
    android.widget.ImageView b -> b
    android.widget.TextView c -> c
    android.view.animation.Animation d -> d
    android.view.animation.Animation e -> e
    android.view.animation.Animation f -> f
    void a(android.content.Context) -> a
    void e() -> e
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void a(java.lang.String,boolean) -> a
net.youmi.android.a.a.j.b.b -> net.youmi.android.a.a.j.b.b:
net.youmi.android.a.a.j.b.c -> net.youmi.android.a.a.j.b.c:
    net.youmi.android.a.a.j.b.c a -> a
    net.youmi.android.a.a.j.b.c b -> b
    net.youmi.android.a.a.j.b.c c -> c
    net.youmi.android.a.a.j.b.c d -> d
    net.youmi.android.a.a.j.b.c[] e -> e
    net.youmi.android.a.a.j.b.c[] values() -> values
    net.youmi.android.a.a.j.b.c valueOf(java.lang.String) -> valueOf
net.youmi.android.a.a.j.b.d -> net.youmi.android.a.a.j.b.d:
    net.youmi.android.a.a.j.b.c a -> a
    net.youmi.android.a.a.j.b.c b -> b
    void setState(net.youmi.android.a.a.j.b.c) -> setState
    net.youmi.android.a.a.j.b.c getState() -> getState
    net.youmi.android.a.a.j.b.c getPreState() -> getPreState
    void a(net.youmi.android.a.a.j.b.c,net.youmi.android.a.a.j.b.c) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
net.youmi.android.a.a.j.b.e -> net.youmi.android.a.a.j.b.e:
    int[] a -> a
net.youmi.android.a.a.j.b.f -> net.youmi.android.a.a.j.b.f:
    float b -> b
    net.youmi.android.a.a.j.b.l c -> c
    net.youmi.android.a.a.j.b.d d -> d
    android.view.View a -> a
    int e -> e
    boolean f -> f
    int g -> g
    net.youmi.android.a.a.j.b.c h -> h
    net.youmi.android.a.a.j.b.m i -> i
    boolean j -> j
    boolean k -> k
    void a(android.content.Context,java.lang.Object[]) -> a
    void g() -> g
    void a(int,int) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void b() -> b
    void a(float) -> a
    void c() -> c
    void d() -> d
    boolean e() -> e
    void a(int) -> a
    void a(int,long,long) -> a
    android.view.View b(android.content.Context,java.lang.Object[]) -> b
    boolean a() -> a
    void setOnRefreshListener(net.youmi.android.a.a.j.b.l) -> setOnRefreshListener
    void f() -> f
    android.view.View getRefreshableView() -> getRefreshableView
    net.youmi.android.a.a.j.b.d getHeaderLoadingLayout() -> getHeaderLoadingLayout
    void a(net.youmi.android.a.a.j.b.f) -> a
    net.youmi.android.a.a.j.b.d b(net.youmi.android.a.a.j.b.f) -> b
    int c(net.youmi.android.a.a.j.b.f) -> c
    void a(net.youmi.android.a.a.j.b.f,int) -> a
    net.youmi.android.a.a.j.b.l d(net.youmi.android.a.a.j.b.f) -> d
    boolean a(net.youmi.android.a.a.j.b.f,boolean) -> a
net.youmi.android.a.a.j.b.g -> net.youmi.android.a.a.j.b.g:
    net.youmi.android.a.a.j.b.f a -> a
    void onGlobalLayout() -> onGlobalLayout
net.youmi.android.a.a.j.b.h -> net.youmi.android.a.a.j.b.h:
    net.youmi.android.a.a.j.b.f a -> a
    void run() -> run
net.youmi.android.a.a.j.b.i -> net.youmi.android.a.a.j.b.i:
    net.youmi.android.a.a.j.b.f a -> a
    void run() -> run
net.youmi.android.a.a.j.b.j -> net.youmi.android.a.a.j.b.j:
    net.youmi.android.a.a.j.b.f a -> a
    void run() -> run
net.youmi.android.a.a.j.b.k -> net.youmi.android.a.a.j.b.k:
    net.youmi.android.a.a.j.b.f a -> a
    void run() -> run
net.youmi.android.a.a.j.b.l -> net.youmi.android.a.a.j.b.l:
    void a(net.youmi.android.a.a.j.b.f) -> a
net.youmi.android.a.a.j.b.m -> net.youmi.android.a.a.j.b.m:
    android.view.animation.Interpolator b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    long g -> g
    boolean h -> h
    long i -> i
    net.youmi.android.a.a.j.b.f a -> a
    void run() -> run
    void a() -> a
net.youmi.android.a.a.j.c -> net.youmi.android.a.a.j.c:
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
net.youmi.android.a.a.j.c.a -> net.youmi.android.a.a.j.c.a:
    android.content.Context a -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,int,int) -> a
net.youmi.android.a.a.j.c.b -> net.youmi.android.a.a.j.c.b:
    android.content.Context a -> a
    android.widget.Toast b -> b
    void a(java.lang.String,int) -> a
    void a(java.lang.String,int,int) -> a
    void b(java.lang.String,int) -> b
    void a(java.lang.String,int,int,int) -> a
    void a() -> a
net.youmi.android.a.a.j.c.c -> net.youmi.android.a.a.j.c.c:
    android.graphics.drawable.NinePatchDrawable a -> a
    android.widget.RelativeLayout a(android.content.Context,java.lang.String,int) -> a
    android.graphics.drawable.NinePatchDrawable a(android.content.Context) -> a
net.youmi.android.a.a.j.d -> net.youmi.android.a.a.j.d:
    android.widget.RelativeLayout a -> a
    android.widget.LinearLayout b -> b
    android.widget.RelativeLayout c -> c
    android.widget.ImageView d -> d
    android.widget.TextView e -> e
    android.widget.TextView f -> f
    android.widget.TextView g -> g
    android.widget.TextView h -> h
    android.widget.TextView i -> i
    android.widget.TextView j -> j
    net.youmi.android.a.a.j.j k -> k
    android.view.GestureDetector l -> l
    android.view.GestureDetector m -> m
    android.view.View n -> n
    int o -> o
    net.youmi.android.a.a.j.a p -> p
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(android.content.Context,boolean) -> a
    void a() -> a
    void setLogoVisibility(int) -> setLogoVisibility
    void setPointsLayoutVisibility(int) -> setPointsLayoutVisibility
    void setBackBtnVisibiity(int) -> setBackBtnVisibiity
    void setTitle(java.lang.CharSequence) -> setTitle
    void setPointsUnit(java.lang.CharSequence) -> setPointsUnit
    void setPoints(int) -> setPoints
    void setTitleBackgroundColor(int) -> setTitleBackgroundColor
    java.lang.String a(int) -> a
    void onClick(android.view.View) -> onClick
    android.widget.TextView a(net.youmi.android.a.a.j.d) -> a
    android.view.GestureDetector b(net.youmi.android.a.a.j.d) -> b
    android.view.GestureDetector c(net.youmi.android.a.a.j.d) -> c
    net.youmi.android.a.a.j.j d(net.youmi.android.a.a.j.d) -> d
net.youmi.android.a.a.j.e -> net.youmi.android.a.a.j.e:
    int a -> a
    net.youmi.android.a.a.j.d b -> b
    void onGlobalLayout() -> onGlobalLayout
net.youmi.android.a.a.j.f -> net.youmi.android.a.a.j.f:
    net.youmi.android.a.a.j.e a -> a
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
net.youmi.android.a.a.j.g -> net.youmi.android.a.a.j.g:
    net.youmi.android.a.a.j.d a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
net.youmi.android.a.a.j.h -> net.youmi.android.a.a.j.h:
    net.youmi.android.a.a.j.d a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
net.youmi.android.a.a.j.i -> net.youmi.android.a.a.j.i:
    int b -> b
    float c -> c
    float d -> d
    float e -> e
    float f -> f
    net.youmi.android.a.a.j.d a -> a
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
net.youmi.android.a.a.j.j -> net.youmi.android.a.a.j.j:
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void k() -> k
net.youmi.android.a.a.j.k -> net.youmi.android.a.a.j.k:
net.youmi.android.a.a.j.l -> net.youmi.android.a.a.j.l:
    net.youmi.android.a.b.l.e a -> a
    android.view.animation.Animation b -> b
    net.youmi.android.a.a.j.l a(android.content.Context,android.view.View,int) -> a
    void a() -> a
net.youmi.android.a.b.a -> net.youmi.android.a.b.a:
net.youmi.android.a.b.a.a -> net.youmi.android.a.b.a.a:
    android.view.animation.Animation a(android.content.Context,int) -> a
    android.view.animation.Animation b(android.content.Context,int) -> b
    android.view.animation.AnimationSet a(android.content.Context,int,int,int) -> a
net.youmi.android.a.b.b.a -> net.youmi.android.a.b.b.a:
    char[] a -> a
    char[] b -> b
    byte a(char) -> a
    java.lang.String a(byte[]) -> a
net.youmi.android.a.b.b.b -> net.youmi.android.a.b.b.b:
    boolean a(org.json.JSONObject,java.lang.String) -> a
    org.json.JSONObject a(java.lang.String) -> a
    java.lang.String a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    boolean a(org.json.JSONObject,java.lang.String,boolean) -> a
    java.lang.String a(org.json.JSONArray,int,java.lang.String) -> a
    int a(org.json.JSONObject,java.lang.String,int) -> a
    long a(org.json.JSONObject,java.lang.String,long) -> a
    double a(org.json.JSONObject,java.lang.String,double) -> a
    org.json.JSONObject a(org.json.JSONObject,java.lang.String,org.json.JSONObject) -> a
    org.json.JSONObject a(org.json.JSONArray,int,org.json.JSONObject) -> a
    org.json.JSONArray a(org.json.JSONObject,java.lang.String,org.json.JSONArray) -> a
net.youmi.android.a.b.b.c -> net.youmi.android.a.b.b.c:
    java.util.Properties a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context,java.util.Properties,java.lang.String) -> a
net.youmi.android.a.b.b.d -> net.youmi.android.a.b.b.d:
    java.util.Random a -> a
    int a(int) -> a
net.youmi.android.a.b.b.e -> net.youmi.android.a.b.b.e:
    boolean a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
net.youmi.android.a.b.c.a -> net.youmi.android.a.b.c.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    boolean a(java.lang.String,byte[],long) -> a
    boolean a(java.util.List) -> a
    byte[] a(java.lang.String) -> a
    void a() -> a
    boolean b(java.lang.String) -> b
    void a(android.content.ContentValues,java.lang.String,java.lang.String) -> a
    void a(android.content.ContentValues,java.lang.String,byte[]) -> a
    void a(android.content.ContentValues,java.lang.String,long) -> a
    boolean a(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.database.sqlite.SQLiteDatabase,java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String) -> a
    boolean a(android.database.sqlite.SQLiteDatabase,java.lang.String,android.content.ContentValues) -> a
    boolean a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.Cursor) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
net.youmi.android.a.b.c.b -> net.youmi.android.a.b.c.b:
    java.lang.String a -> a
    byte[] b -> b
    long c -> c
    byte[] a() -> a
    java.lang.String b() -> b
    long c() -> c
net.youmi.android.a.b.c.c -> net.youmi.android.a.b.c.c:
    byte[] a(byte[],java.lang.String,int) -> a
    byte[] b(byte[],java.lang.String,int) -> b
net.youmi.android.a.b.c.d -> net.youmi.android.a.b.c.d:
    java.lang.String l() -> l
    boolean a(java.lang.String) -> a
    long m() -> m
    java.lang.String n() -> n
net.youmi.android.a.b.c.e -> net.youmi.android.a.b.c.e:
    java.lang.String a -> a
    net.youmi.android.a.b.c.g b -> b
    boolean a(java.lang.String,byte[],long,int) -> a
    byte[] a(java.lang.String,int) -> a
    boolean a(java.lang.String) -> a
    java.lang.String a() -> a
    net.youmi.android.a.b.c.g b() -> b
net.youmi.android.a.b.c.f -> net.youmi.android.a.b.c.f:
    net.youmi.android.a.b.c.i a -> a
    void b(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String,java.lang.String,long) -> a
    boolean a(android.content.Context,java.lang.String,boolean,long) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String,boolean) -> a
    java.lang.String a(android.content.Context) -> a
net.youmi.android.a.b.c.g -> net.youmi.android.a.b.c.g:
    net.youmi.android.a.b.c.g b -> b
    net.youmi.android.a.b.c.g f(android.content.Context) -> f
    boolean b(java.lang.String) -> b
    void a() -> a
    byte[] a(java.lang.String) -> a
    boolean a(java.util.List) -> a
    boolean a(java.lang.String,byte[],long) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
net.youmi.android.a.b.c.h -> net.youmi.android.a.b.c.h:
    net.youmi.android.a.b.c.i a -> a
    boolean a(net.youmi.android.a.b.c.d) -> a
    boolean b(net.youmi.android.a.b.c.d) -> b
    boolean c(java.lang.String) -> c
    int a() -> a
    net.youmi.android.a.b.c.g b() -> b
    java.lang.String c() -> c
net.youmi.android.a.b.c.i -> net.youmi.android.a.b.c.i:
    net.youmi.android.a.b.c.e a -> a
    int b -> b
    boolean a(java.lang.String,java.lang.String,long) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    int a() -> a
    java.lang.String b() -> b
    net.youmi.android.a.b.c.g c() -> c
net.youmi.android.a.b.d.a -> net.youmi.android.a.b.d.a:
    byte[] a(java.lang.String) -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    byte[] b(byte[]) -> b
    void a(java.io.InputStream,java.io.OutputStream,int) -> a
    void a(java.io.InputStream,java.io.OutputStream) -> a
    void b(java.io.InputStream,java.io.OutputStream) -> b
net.youmi.android.a.b.d.b -> net.youmi.android.a.b.d.b:
    char[] b -> b
    int[] c -> c
    char[] a -> a
    java.lang.String a(byte[],java.lang.String,int) -> a
    java.lang.String a(int) -> a
    java.lang.String a(java.lang.String) -> a
    int a(char) -> a
    char b(int) -> b
net.youmi.android.a.b.d.c -> net.youmi.android.a.b.d.c:
    java.io.InputStream a -> a
    int[] b -> b
    int c -> c
    boolean d -> d
    int read() -> read
    void a() -> a
    void close() -> close
net.youmi.android.a.b.d.d -> net.youmi.android.a.b.d.d:
    java.io.OutputStream a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    void write(int) -> write
    void close() -> close
    void a() -> a
net.youmi.android.a.b.d.e -> net.youmi.android.a.b.d.e:
    java.lang.String a -> a
    char b -> b
net.youmi.android.a.b.d.f -> net.youmi.android.a.b.d.f:
    byte[] a(byte[],java.lang.String) -> a
    byte[] b(byte[],java.lang.String) -> b
    void a(java.io.ByteArrayInputStream) -> a
    void a(java.io.ByteArrayOutputStream) -> a
    void a(java.util.zip.GZIPInputStream) -> a
    void a(java.util.zip.GZIPOutputStream) -> a
net.youmi.android.a.b.d.g -> net.youmi.android.a.b.d.g:
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.io.File) -> a
    boolean a(java.io.File,java.lang.String) -> a
net.youmi.android.a.b.d.h -> net.youmi.android.a.b.d.h:
    byte[] a() -> a
    java.security.Key a(java.lang.String) -> a
    byte[] a(byte[],java.lang.String,byte[]) -> a
    java.lang.String a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(byte[],java.lang.String,byte[]) -> b
    java.lang.String b(java.lang.String,java.lang.String,byte[]) -> b
net.youmi.android.a.b.d.i -> net.youmi.android.a.b.d.i:
    java.lang.String a(java.lang.String,java.lang.String) -> a
net.youmi.android.a.b.d.j -> net.youmi.android.a.b.d.j:
    java.lang.String a(java.lang.String) -> a
net.youmi.android.a.b.d.k -> net.youmi.android.a.b.d.k:
    int a(int,int,int,int,int,int[]) -> a
    byte[] a(byte[],byte[]) -> a
    int[] a(int[],int[]) -> a
    int[] a(byte[],boolean) -> a
    byte[] a(int[],boolean) -> a
net.youmi.android.a.b.d.l -> net.youmi.android.a.b.d.l:
    byte[] a(byte[]) -> a
net.youmi.android.a.b.e.a -> net.youmi.android.a.b.e.a:
    boolean a -> a
    void a(int,java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
net.youmi.android.a.b.e.b -> net.youmi.android.a.b.e.b:
net.youmi.android.a.b.e.c -> net.youmi.android.a.b.e.c:
    boolean a -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.Object,java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.Object,java.lang.Throwable) -> b
net.youmi.android.a.b.e.d -> net.youmi.android.a.b.e.d:
    java.lang.String b -> b
    java.lang.String a() -> a
    void a(java.lang.Throwable) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String,java.lang.Object[]) -> a
    void b(java.lang.Throwable) -> b
    void b(java.lang.String,java.lang.Throwable) -> b
net.youmi.android.a.b.f.a -> net.youmi.android.a.b.f.a:
    long a -> a
    java.nio.channels.SelectionKey b -> b
    void a(java.nio.channels.SelectionKey,long) -> a
    void a() -> a
net.youmi.android.a.b.f.b -> net.youmi.android.a.b.f.b:
    net.youmi.android.a.b.f.d[] a -> a
    void a(int,net.youmi.android.a.b.f.j) -> a
    int a(net.youmi.android.a.b.f.j) -> a
net.youmi.android.a.b.f.c -> net.youmi.android.a.b.f.c:
net.youmi.android.a.b.f.d -> net.youmi.android.a.b.f.d:
    net.youmi.android.a.b.f.j a -> a
    int b -> b
    net.youmi.android.a.b.f.d c -> c
net.youmi.android.a.b.f.e -> net.youmi.android.a.b.f.e:
    byte[] a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int a() -> a
    int b() -> b
    void c(int) -> c
    void a(int) -> a
    void c() -> c
    void d() -> d
    int e() -> e
    int f() -> f
    long g() -> g
    void a(byte[],int,int) -> a
    byte[] b(int) -> b
net.youmi.android.a.b.f.f -> net.youmi.android.a.b.f.f:
    byte[] a -> a
    int b -> b
    int c -> c
    int a() -> a
    void a(long,int) -> a
    void c(int) -> c
    void a(int) -> a
    void b(int) -> b
    void a(byte[],int,int) -> a
    byte[] b() -> b
net.youmi.android.a.b.f.g -> net.youmi.android.a.b.f.g:
    int a -> a
    net.youmi.android.a.b.f.h b -> b
    java.util.List[] c -> c
    net.youmi.android.a.b.f.i d -> d
    byte[] e -> e
    byte[] a() -> a
    byte[] a(net.youmi.android.a.b.f.e,int) -> a
    net.youmi.android.a.b.f.j a(net.youmi.android.a.b.f.j,net.youmi.android.a.b.f.j) -> a
    void a(net.youmi.android.a.b.f.i,int) -> a
    byte[] b() -> b
net.youmi.android.a.b.f.h -> net.youmi.android.a.b.f.h:
    int b -> b
    int c -> c
    int[] d -> d
    java.util.Random e -> e
    net.youmi.android.a.b.f.g a -> a
    void a(net.youmi.android.a.b.f.f) -> a
    int a() -> a
    int a(int) -> a
    java.lang.Object clone() -> clone
    void b(int) -> b
net.youmi.android.a.b.f.i -> net.youmi.android.a.b.f.i:
    net.youmi.android.a.b.f.j a -> a
    net.youmi.android.a.b.f.g b -> b
    void a(net.youmi.android.a.b.f.f,int,net.youmi.android.a.b.f.b) -> a
net.youmi.android.a.b.f.j -> net.youmi.android.a.b.f.j:
    byte[] c -> c
    long d -> d
    net.youmi.android.a.b.f.j a -> a
    net.youmi.android.a.b.f.j b -> b
    byte[] e -> e
    byte[] f -> f
    java.text.DecimalFormat g -> g
    void a(byte[],int,int) -> a
    net.youmi.android.a.b.f.j a(java.lang.String) -> a
    net.youmi.android.a.b.f.j a(java.lang.String,net.youmi.android.a.b.f.j) -> a
    void b(net.youmi.android.a.b.f.j,net.youmi.android.a.b.f.j) -> b
    int a(int) -> a
    int c() -> c
    void b(int) -> b
    void a(int,int) -> a
    int a() -> a
    void a(java.lang.String,byte[],int,int) -> a
    void b(byte[],int,int) -> b
    boolean b() -> b
    net.youmi.android.a.b.f.j a(net.youmi.android.a.b.f.j,net.youmi.android.a.b.f.j) -> a
    void a(net.youmi.android.a.b.f.f,net.youmi.android.a.b.f.b) -> a
    java.lang.String toString() -> toString
    java.lang.String a(boolean) -> a
    java.lang.String a(byte[],int) -> a
net.youmi.android.a.b.f.k -> net.youmi.android.a.b.f.k:
    java.lang.String[] a -> a
    net.youmi.android.a.b.f.j[] b -> b
    int c -> c
    net.youmi.android.a.b.f.k d -> d
    void a(java.lang.String,java.util.List) -> a
    void b(java.lang.String,java.util.List) -> b
    void a(java.util.List,java.util.List) -> a
    boolean d() -> d
    boolean e() -> e
    void f() -> f
    java.lang.String a() -> a
    net.youmi.android.a.b.f.k b() -> b
    void c() -> c
net.youmi.android.a.b.f.l -> net.youmi.android.a.b.f.l:
    java.net.InetSocketAddress a -> a
    java.net.InetSocketAddress b -> b
    long c -> c
    java.lang.String d -> d
    int e -> e
    net.youmi.android.a.b.f.g a(byte[]) -> a
    int b(net.youmi.android.a.b.f.g) -> b
    net.youmi.android.a.b.f.g a(net.youmi.android.a.b.f.g) -> a
net.youmi.android.a.b.f.m -> net.youmi.android.a.b.f.m:
    java.security.SecureRandom c -> c
    boolean d -> d
    boolean e -> e
    void a(java.net.InetSocketAddress) -> a
    void a(java.net.SocketAddress) -> a
    void b(java.net.SocketAddress) -> b
    void a(byte[]) -> a
    byte[] a(int) -> a
    byte[] a(java.net.SocketAddress,java.net.SocketAddress,byte[],int,long) -> a
    java.security.SecureRandom b() -> b
    boolean a(boolean) -> a
net.youmi.android.a.b.f.n -> net.youmi.android.a.b.f.n:
    void run() -> run
net.youmi.android.a.b.g.a -> net.youmi.android.a.b.g.a:
    boolean b(java.lang.String) -> b
    void k(net.youmi.android.a.b.g.e.a) -> k
    void l(net.youmi.android.a.b.g.e.a) -> l
    void m(net.youmi.android.a.b.g.e.a) -> m
    void n(net.youmi.android.a.b.g.e.a) -> n
    void o(net.youmi.android.a.b.g.e.a) -> o
    void p(net.youmi.android.a.b.g.e.a) -> p
    void a(net.youmi.android.a.b.g.d.a,net.youmi.android.a.b.g.e.a) -> a
    void b(net.youmi.android.a.b.g.d.a,net.youmi.android.a.b.g.e.a) -> b
    void c(net.youmi.android.a.b.g.d.a,net.youmi.android.a.b.g.e.a) -> c
    void d(net.youmi.android.a.b.g.d.a,net.youmi.android.a.b.g.e.a) -> d
    void e(net.youmi.android.a.b.g.d.a,net.youmi.android.a.b.g.e.a) -> e
    void a(net.youmi.android.a.b.g.d.a,net.youmi.android.a.b.g.e.a,long,long,int,long) -> a
    void f(net.youmi.android.a.b.g.d.a,net.youmi.android.a.b.g.e.a) -> f
    void a_(net.youmi.android.a.b.g.e.a) -> a_
    void b(net.youmi.android.a.b.g.e.a) -> b
    void b_(net.youmi.android.a.b.g.e.a) -> b_
    void c_(net.youmi.android.a.b.g.e.a) -> c_
    void d_(net.youmi.android.a.b.g.e.a) -> d_
    void e_(net.youmi.android.a.b.g.e.a) -> e_
    void a(java.lang.Object,net.youmi.android.a.b.g.e.a,long,long,int,long) -> a
    void a(java.lang.Object,net.youmi.android.a.b.g.e.a) -> a
    void b(java.lang.Object,net.youmi.android.a.b.g.e.a) -> b
    void c(java.lang.Object,net.youmi.android.a.b.g.e.a) -> c
    void d(java.lang.Object,net.youmi.android.a.b.g.e.a) -> d
    void e(java.lang.Object,net.youmi.android.a.b.g.e.a) -> e
    void f(java.lang.Object,net.youmi.android.a.b.g.e.a) -> f
net.youmi.android.a.b.g.a.a -> net.youmi.android.a.b.g.a.a:
    long a -> a
    long b -> b
    boolean c -> c
    java.lang.String d -> d
    java.io.File e -> e
    android.content.Context f -> f
    int a() -> a
    long b() -> b
    int c() -> c
    long d() -> d
net.youmi.android.a.b.g.a.b -> net.youmi.android.a.b.g.a.b:
    void a(java.lang.Runnable) -> a
net.youmi.android.a.b.g.a.c -> net.youmi.android.a.b.g.a.c:
    int a -> a
    int b -> b
    java.io.File c -> c
    java.io.File d -> d
    boolean e -> e
    int f -> f
    net.youmi.android.a.b.g.a.a g -> g
    int h -> h
    int i -> i
    android.content.Context j -> j
    void run() -> run
    void h() -> h
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    long e() -> e
    long f() -> f
    int g() -> g
net.youmi.android.a.b.g.a.d -> net.youmi.android.a.b.g.a.d:
    net.youmi.android.a.b.g.e.a a -> a
    net.youmi.android.a.b.g.d.e b -> b
    net.youmi.android.a.b.g.a.c c -> c
    net.youmi.android.a.b.g.d.b d -> d
    net.youmi.android.a.b.g.f.a e -> e
    net.youmi.android.a.b.g.f.g f -> f
    net.youmi.android.a.b.g.f.i g -> g
    net.youmi.android.a.b.g.f.c h -> h
    net.youmi.android.a.b.g.f.f i -> i
    net.youmi.android.a.b.g.f.e j -> j
    net.youmi.android.a.b.g.f.b k -> k
    net.youmi.android.a.b.g.f.d l -> l
    net.youmi.android.a.b.g.f.h m -> m
    android.content.Context n -> n
    void run() -> run
    void a(java.io.File) -> a
    void a(int) -> a
    boolean a() -> a
    net.youmi.android.a.b.g.f.a h() -> h
    net.youmi.android.a.b.g.f.a i() -> i
    net.youmi.android.a.b.g.f.a j() -> j
    net.youmi.android.a.b.g.f.a k() -> k
    net.youmi.android.a.b.g.f.a l() -> l
    net.youmi.android.a.b.g.f.a m() -> m
    net.youmi.android.a.b.g.f.a n() -> n
    net.youmi.android.a.b.g.f.a o() -> o
    int hashCode() -> hashCode
    boolean b() -> b
    java.io.File c() -> c
    java.io.File d() -> d
    net.youmi.android.a.b.g.e.a e() -> e
    net.youmi.android.a.b.g.d.b f() -> f
    net.youmi.android.a.b.g.a.c g() -> g
net.youmi.android.a.b.g.b -> net.youmi.android.a.b.g.b:
    android.content.Context a -> a
    net.youmi.android.a.b.g.c.a b -> b
    java.util.HashMap c -> c
    java.util.HashSet d -> d
    android.graphics.Bitmap a(java.lang.String) -> a
    android.graphics.Bitmap a(net.youmi.android.a.b.g.e.a) -> a
    void b(net.youmi.android.a.b.g.e.a) -> b
    android.graphics.Bitmap a(java.io.File) -> a
    boolean a(net.youmi.android.a.b.g.e.a,android.graphics.Bitmap) -> a
    void c(net.youmi.android.a.b.g.e.a) -> c
    void d(net.youmi.android.a.b.g.e.a) -> d
    void e(net.youmi.android.a.b.g.e.a) -> e
    void f(net.youmi.android.a.b.g.e.a) -> f
    void g(net.youmi.android.a.b.g.e.a) -> g
    void a(net.youmi.android.a.b.g.e.a,long,long,int,long) -> a
    void h_(net.youmi.android.a.b.g.e.a) -> h_
    boolean i(net.youmi.android.a.b.g.e.a) -> i
    boolean g_(net.youmi.android.a.b.g.e.a) -> g_
net.youmi.android.a.b.g.b.a -> net.youmi.android.a.b.g.b.a:
net.youmi.android.a.b.g.b.b -> net.youmi.android.a.b.g.b.b:
    java.lang.String a(net.youmi.android.a.b.g.e.a,java.lang.String) -> a
net.youmi.android.a.b.g.b.c -> net.youmi.android.a.b.g.b.c:
    net.youmi.android.a.b.g.b.c a -> a
    net.youmi.android.a.b.g.b.c a() -> a
    java.lang.String a(net.youmi.android.a.b.g.e.a,java.lang.String) -> a
net.youmi.android.a.b.g.c -> net.youmi.android.a.b.g.c:
    android.content.Context a -> a
    net.youmi.android.a.b.g.c.a b -> b
    java.util.HashSet c -> c
    boolean a(java.lang.String) -> a
    void c(net.youmi.android.a.b.g.e.a) -> c
    void d(net.youmi.android.a.b.g.e.a) -> d
    void a(net.youmi.android.a.b.g.e.a,long,long,int,long) -> a
    void h_(net.youmi.android.a.b.g.e.a) -> h_
    void e(net.youmi.android.a.b.g.e.a) -> e
    void f(net.youmi.android.a.b.g.e.a) -> f
    void g(net.youmi.android.a.b.g.e.a) -> g
    boolean o(net.youmi.android.a.b.g.e.a) -> o
    boolean i(net.youmi.android.a.b.g.e.a) -> i
    boolean g_(net.youmi.android.a.b.g.e.a) -> g_
    void a(net.youmi.android.a.b.g.e.a) -> a
    void b(net.youmi.android.a.b.g.e.a) -> b
    void b(net.youmi.android.a.b.g.e.a,long,long,int,long) -> b
    void k(net.youmi.android.a.b.g.e.a) -> k
    void l(net.youmi.android.a.b.g.e.a) -> l
    void m(net.youmi.android.a.b.g.e.a) -> m
    void n(net.youmi.android.a.b.g.e.a) -> n
net.youmi.android.a.b.g.c.a -> net.youmi.android.a.b.g.c.a:
    long a -> a
    long b -> b
    java.io.File c -> c
    void b() -> b
    java.io.File[] a() -> a
    java.lang.String b(java.lang.String) -> b
    java.io.File c(java.lang.String) -> c
    boolean a(java.io.File) -> a
    void c() -> c
    java.io.File a(net.youmi.android.a.b.g.c.a) -> a
    boolean a(net.youmi.android.a.b.g.c.a,java.io.File) -> a
    long b(net.youmi.android.a.b.g.c.a) -> b
net.youmi.android.a.b.g.c.b -> net.youmi.android.a.b.g.c.b:
    net.youmi.android.a.b.g.c.a a -> a
    void run() -> run
net.youmi.android.a.b.g.c.c -> net.youmi.android.a.b.g.c.c:
    net.youmi.android.a.b.g.c.a a -> a
    int a(java.io.File,java.io.File) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
net.youmi.android.a.b.g.d -> net.youmi.android.a.b.g.d:
    java.util.HashSet a -> a
    java.util.HashSet b -> b
    java.util.HashMap c -> c
    android.content.Context d -> d
    android.content.Context b() -> b
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    java.io.File a(net.youmi.android.a.b.g.e.a,java.lang.String) -> a
    boolean c(java.lang.String) -> c
    boolean i(net.youmi.android.a.b.g.e.a) -> i
    boolean g_(net.youmi.android.a.b.g.e.a) -> g_
    boolean q(net.youmi.android.a.b.g.e.a) -> q
    void c(net.youmi.android.a.b.g.e.a) -> c
    void d(net.youmi.android.a.b.g.e.a) -> d
    void e(net.youmi.android.a.b.g.e.a) -> e
    void f(net.youmi.android.a.b.g.e.a) -> f
    void g(net.youmi.android.a.b.g.e.a) -> g
    void h_(net.youmi.android.a.b.g.e.a) -> h_
    void a(net.youmi.android.a.b.g.e.a,long,long,int,long) -> a
    void a(net.youmi.android.a.b.g.g.a,net.youmi.android.a.b.g.e.a,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(net.youmi.android.a.b.g.g.a,net.youmi.android.a.b.g.e.a) -> a
    void a(net.youmi.android.a.b.g.g.a) -> a
    net.youmi.android.a.b.g.c.a a(net.youmi.android.a.b.g.e.a) -> a
    net.youmi.android.a.b.g.b.b a() -> a
    boolean b(java.lang.String) -> b
    void k(net.youmi.android.a.b.g.e.a) -> k
    void l(net.youmi.android.a.b.g.e.a) -> l
    void m(net.youmi.android.a.b.g.e.a) -> m
    void n(net.youmi.android.a.b.g.e.a) -> n
    void o(net.youmi.android.a.b.g.e.a) -> o
    void p(net.youmi.android.a.b.g.e.a) -> p
    void f(java.lang.Object,net.youmi.android.a.b.g.e.a) -> f
    void e(java.lang.Object,net.youmi.android.a.b.g.e.a) -> e
    void d(java.lang.Object,net.youmi.android.a.b.g.e.a) -> d
    void c(java.lang.Object,net.youmi.android.a.b.g.e.a) -> c
    void b(java.lang.Object,net.youmi.android.a.b.g.e.a) -> b
    void a(java.lang.Object,net.youmi.android.a.b.g.e.a) -> a
    void a(java.lang.Object,net.youmi.android.a.b.g.e.a,long,long,int,long) -> a
net.youmi.android.a.b.g.d.a -> net.youmi.android.a.b.g.d.a:
    void a(net.youmi.android.a.b.g.e.a) -> a
    void b(net.youmi.android.a.b.g.e.a) -> b
    void c(net.youmi.android.a.b.g.e.a) -> c
    void d(net.youmi.android.a.b.g.e.a) -> d
    void e(net.youmi.android.a.b.g.e.a) -> e
    void a(net.youmi.android.a.b.g.e.a,long,long,int,long) -> a
    void a(int) -> a
net.youmi.android.a.b.g.d.b -> net.youmi.android.a.b.g.d.b:
    boolean i(net.youmi.android.a.b.g.e.a) -> i
    boolean g_(net.youmi.android.a.b.g.e.a) -> g_
net.youmi.android.a.b.g.d.c -> net.youmi.android.a.b.g.d.c:
    void a(net.youmi.android.a.b.g.e.a,long,long,int,long) -> a
    void d(net.youmi.android.a.b.g.e.a) -> d
    void c(net.youmi.android.a.b.g.e.a) -> c
net.youmi.android.a.b.g.d.d -> net.youmi.android.a.b.g.d.d:
    void e(net.youmi.android.a.b.g.e.a) -> e
    void f(net.youmi.android.a.b.g.e.a) -> f
    void h_(net.youmi.android.a.b.g.e.a) -> h_
    void g(net.youmi.android.a.b.g.e.a) -> g
net.youmi.android.a.b.g.d.e -> net.youmi.android.a.b.g.d.e:
    void a(net.youmi.android.a.b.g.e.a) -> a
    void b(net.youmi.android.a.b.g.e.a) -> b
    void c(net.youmi.android.a.b.g.e.a) -> c
    void d(net.youmi.android.a.b.g.e.a) -> d
    void a(net.youmi.android.a.b.g.e.a,int,long,long,long) -> a
    void e(net.youmi.android.a.b.g.e.a) -> e
    void f(net.youmi.android.a.b.g.e.a) -> f
net.youmi.android.a.b.g.d.f -> net.youmi.android.a.b.g.d.f:
    void a(net.youmi.android.a.b.g.g.a,net.youmi.android.a.b.g.e.a,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(net.youmi.android.a.b.g.g.a,net.youmi.android.a.b.g.e.a) -> a
    void a(net.youmi.android.a.b.g.g.a) -> a
net.youmi.android.a.b.g.d.g -> net.youmi.android.a.b.g.d.g:
    void a(java.lang.String,android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
net.youmi.android.a.b.g.e -> net.youmi.android.a.b.g.e:
    net.youmi.android.a.b.g.e a -> a
    int b -> b
    int c -> c
    java.util.HashMap d -> d
    net.youmi.android.a.b.g.e a() -> a
    boolean a(android.content.Context,net.youmi.android.a.b.g.e.a,net.youmi.android.a.b.g.d.b) -> a
    void a(net.youmi.android.a.b.g.e.a) -> a
    void b(net.youmi.android.a.b.g.e.a) -> b
    void c(net.youmi.android.a.b.g.e.a) -> c
    void d(net.youmi.android.a.b.g.e.a) -> d
    void a(net.youmi.android.a.b.g.e.a,int,long,long,long) -> a
    void e(net.youmi.android.a.b.g.e.a) -> e
    void f(net.youmi.android.a.b.g.e.a) -> f
net.youmi.android.a.b.g.e.a -> net.youmi.android.a.b.g.e.a:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    boolean d -> d
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.io.File i -> i
    java.io.File j -> j
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    boolean d() -> d
    void a(long) -> a
    long e() -> e
    void a(java.lang.String) -> a
    java.lang.String f() -> f
    void b(java.lang.String) -> b
    java.io.File g() -> g
    void a(java.io.File) -> a
    java.io.File h() -> h
    void b(java.io.File) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
net.youmi.android.a.b.g.f.a -> net.youmi.android.a.b.g.f.a:
    java.lang.String a -> a
    boolean b -> b
    int c -> c
    void a(android.content.Context,net.youmi.android.a.b.g.a.d,net.youmi.android.a.b.g.e.a,net.youmi.android.a.b.g.d.e) -> a
net.youmi.android.a.b.g.f.b -> net.youmi.android.a.b.g.f.b:
    void a(android.content.Context,net.youmi.android.a.b.g.a.d,net.youmi.android.a.b.g.e.a,net.youmi.android.a.b.g.d.e) -> a
net.youmi.android.a.b.g.f.c -> net.youmi.android.a.b.g.f.c:
    void a(android.content.Context,net.youmi.android.a.b.g.a.d,net.youmi.android.a.b.g.e.a,net.youmi.android.a.b.g.d.e) -> a
net.youmi.android.a.b.g.f.d -> net.youmi.android.a.b.g.f.d:
    void a(android.content.Context,net.youmi.android.a.b.g.a.d,net.youmi.android.a.b.g.e.a,net.youmi.android.a.b.g.d.e) -> a
net.youmi.android.a.b.g.f.e -> net.youmi.android.a.b.g.f.e:
    void a(android.content.Context,net.youmi.android.a.b.g.a.d,net.youmi.android.a.b.g.e.a,net.youmi.android.a.b.g.d.e) -> a
net.youmi.android.a.b.g.f.f -> net.youmi.android.a.b.g.f.f:
    long e -> e
    boolean f -> f
    long d -> d
    void a(android.content.Context,net.youmi.android.a.b.g.a.d,net.youmi.android.a.b.g.e.a,net.youmi.android.a.b.g.d.e) -> a
net.youmi.android.a.b.g.f.g -> net.youmi.android.a.b.g.f.g:
    void a(android.content.Context,net.youmi.android.a.b.g.a.d,net.youmi.android.a.b.g.e.a,net.youmi.android.a.b.g.d.e) -> a
net.youmi.android.a.b.g.f.h -> net.youmi.android.a.b.g.f.h:
    long d -> d
    int e -> e
    boolean f -> f
    void a(android.content.Context,net.youmi.android.a.b.g.a.d,net.youmi.android.a.b.g.e.a,net.youmi.android.a.b.g.d.e) -> a
net.youmi.android.a.b.g.f.i -> net.youmi.android.a.b.g.f.i:
    void a(android.content.Context,net.youmi.android.a.b.g.a.d,net.youmi.android.a.b.g.e.a,net.youmi.android.a.b.g.d.e) -> a
net.youmi.android.a.b.g.g.a -> net.youmi.android.a.b.g.g.a:
    net.youmi.android.a.b.g.d.f a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    void a() -> a
    void b() -> b
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
    void run() -> run
net.youmi.android.a.b.g.g.b -> net.youmi.android.a.b.g.g.b:
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
net.youmi.android.a.b.g.g.c -> net.youmi.android.a.b.g.g.c:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.youmi.android.a.b.h.a -> net.youmi.android.a.b.h.a:
net.youmi.android.a.b.h.b -> net.youmi.android.a.b.h.b:
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(byte[],java.lang.String) -> a
net.youmi.android.a.b.h.c -> net.youmi.android.a.b.h.c:
    java.util.concurrent.Executor a -> a
    java.util.concurrent.Executor a() -> a
    java.util.concurrent.Executor b() -> b
net.youmi.android.a.b.h.d -> net.youmi.android.a.b.h.d:
    java.util.concurrent.atomic.AtomicInteger a -> a
    java.util.concurrent.atomic.AtomicInteger b -> b
    java.lang.ThreadGroup c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
net.youmi.android.a.b.h.e -> net.youmi.android.a.b.h.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String a() -> a
    java.lang.String m(android.content.Context) -> m
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String n(android.content.Context) -> n
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String o(android.content.Context) -> o
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    void p(android.content.Context) -> p
    java.lang.String h(android.content.Context) -> h
    int i(android.content.Context) -> i
    int j(android.content.Context) -> j
    int e() -> e
    java.lang.String k(android.content.Context) -> k
    void l(android.content.Context) -> l
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
net.youmi.android.a.b.h.f -> net.youmi.android.a.b.h.f:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.a.b.h.g -> net.youmi.android.a.b.h.g:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String a(java.lang.String) -> a
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
net.youmi.android.a.b.h.h -> net.youmi.android.a.b.h.h:
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
net.youmi.android.a.b.i.a -> net.youmi.android.a.b.i.a:
    android.content.Context a -> a
    org.apache.http.client.methods.HttpUriRequest b -> b
    org.apache.http.client.HttpClient c -> c
    net.youmi.android.a.b.i.b d -> d
    net.youmi.android.a.b.i.c e -> e
    long f -> f
    long g -> g
    long a() -> a
    void a(net.youmi.android.a.b.i.c) -> a
    void a(net.youmi.android.a.b.i.b) -> a
    void b() -> b
    org.apache.http.HttpResponse e() -> e
    void c() -> c
    void a(int,java.lang.Exception) -> a
    void a(org.apache.http.HttpResponse,long) -> a
    void a(org.apache.http.HttpResponse) -> a
    long d() -> d
net.youmi.android.a.b.i.a.a -> net.youmi.android.a.b.i.a.a:
    org.json.JSONObject a -> a
    android.content.Context b -> b
    void run() -> run
net.youmi.android.a.b.i.a.b -> net.youmi.android.a.b.i.a.b:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    int a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
net.youmi.android.a.b.i.b -> net.youmi.android.a.b.i.b:
    int b -> b
    org.apache.http.Header[] a -> a
    int c -> c
    long d -> d
    java.lang.String e -> e
    long f -> f
    boolean g -> g
    boolean h -> h
    org.apache.http.Header[] i -> i
    java.lang.Exception j -> j
    int a() -> a
    void a(int) -> a
    org.apache.http.Header[] b() -> b
    void a(org.apache.http.Header[]) -> a
    int c() -> c
    void b(int) -> b
    void a(java.lang.String) -> a
    long d() -> d
    void a(long) -> a
    long e() -> e
    void b(long) -> b
    boolean f() -> f
    void a(boolean) -> a
    org.apache.http.Header[] g() -> g
    void b(org.apache.http.Header[]) -> b
    void a(java.lang.Exception) -> a
net.youmi.android.a.b.i.c -> net.youmi.android.a.b.i.c:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    java.util.List d -> d
    byte[] e -> e
    java.util.List f -> f
    java.lang.String g -> g
    java.net.InetAddress h -> h
    java.lang.String i -> i
    boolean a() -> a
    void a(boolean) -> a
    java.util.List b() -> b
    void a(java.util.List) -> a
    java.util.List c() -> c
    void b(java.util.List) -> b
    java.lang.String d() -> d
    java.lang.String e() -> e
    void a(java.lang.String) -> a
    java.lang.String f() -> f
    java.lang.String a(java.util.Map) -> a
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    boolean j() -> j
    void a(byte[]) -> a
    byte[] k() -> k
    java.lang.String l() -> l
    void b(java.lang.String) -> b
net.youmi.android.a.b.i.d -> net.youmi.android.a.b.i.d:
    net.youmi.android.a.b.i.c a -> a
    java.lang.String getValue() -> getValue
    java.lang.String getName() -> getName
    org.apache.http.HeaderElement[] getElements() -> getElements
net.youmi.android.a.b.i.e -> net.youmi.android.a.b.i.e:
    void a(java.lang.String) -> a
net.youmi.android.a.b.i.f -> net.youmi.android.a.b.i.f:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    int f -> f
    java.lang.String g -> g
    int h -> h
    long i -> i
    void a() -> a
    void a(android.content.Context,org.json.JSONObject) -> a
    boolean a(java.lang.String) -> a
net.youmi.android.a.b.i.g -> net.youmi.android.a.b.i.g:
    void a(android.content.Context,org.json.JSONObject,java.lang.String,int) -> a
net.youmi.android.a.b.i.h -> net.youmi.android.a.b.i.h:
    void a(android.content.Context,org.json.JSONObject,java.lang.String,int) -> a
net.youmi.android.a.b.i.i -> net.youmi.android.a.b.i.i:
    java.lang.String a -> a
    java.lang.String a() -> a
    org.apache.http.params.HttpParams a(android.content.Context) -> a
    org.apache.http.impl.client.DefaultHttpClient b(android.content.Context) -> b
    org.apache.http.impl.client.DefaultHttpClient a(android.content.Context,net.youmi.android.a.b.i.e) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    long a(android.content.Context,java.lang.String) -> a
net.youmi.android.a.b.i.j -> net.youmi.android.a.b.i.j:
    net.youmi.android.a.b.i.e a -> a
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
net.youmi.android.a.b.i.k -> net.youmi.android.a.b.i.k:
    boolean a(android.content.Context) -> a
    boolean d(android.content.Context) -> d
    int b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    android.net.NetworkInfo e(android.content.Context) -> e
net.youmi.android.a.b.j.a -> net.youmi.android.a.b.j.a:
    java.util.List a -> a
    java.util.List g() -> g
    void a(java.lang.Object) -> a
    void b(java.lang.Object) -> b
net.youmi.android.a.b.k.a -> net.youmi.android.a.b.k.a:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    int c() -> c
net.youmi.android.a.b.k.a.a -> net.youmi.android.a.b.k.a.a:
    void a() -> a
    void a(int) -> a
    void a(int,int) -> a
    void b() -> b
net.youmi.android.a.b.k.b -> net.youmi.android.a.b.k.b:
    android.graphics.Bitmap a(java.lang.String) -> a
    android.graphics.drawable.NinePatchDrawable a(android.content.Context,java.lang.String,java.lang.String) -> a
net.youmi.android.a.b.k.b.a -> net.youmi.android.a.b.k.b.a:
    java.io.File a -> a
    java.lang.String b -> b
    net.youmi.android.a.b.k.a.a c -> c
    void run() -> run
    void a() -> a
    void a(int) -> a
    void a(int,int) -> a
    void b() -> b
    net.youmi.android.a.b.k.a.a a(net.youmi.android.a.b.k.b.a) -> a
net.youmi.android.a.b.k.b.b -> net.youmi.android.a.b.k.b.b:
    net.youmi.android.a.b.k.b.a a -> a
    void run() -> run
net.youmi.android.a.b.k.b.c -> net.youmi.android.a.b.k.b.c:
    int a -> a
    net.youmi.android.a.b.k.b.a b -> b
    void run() -> run
net.youmi.android.a.b.k.b.d -> net.youmi.android.a.b.k.b.d:
    int a -> a
    int b -> b
    net.youmi.android.a.b.k.b.a c -> c
    void run() -> run
net.youmi.android.a.b.k.b.e -> net.youmi.android.a.b.k.b.e:
    net.youmi.android.a.b.k.b.a a -> a
    void run() -> run
net.youmi.android.a.b.k.c -> net.youmi.android.a.b.k.c:
    boolean a(android.content.Context,java.lang.Class) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    android.content.pm.ActivityInfo b(android.content.Context,java.lang.String) -> b
    boolean b(android.content.Context,java.lang.Class) -> b
    boolean c(android.content.Context,java.lang.String) -> c
    android.content.pm.ServiceInfo d(android.content.Context,java.lang.String) -> d
    boolean c(android.content.Context,java.lang.Class) -> c
    boolean e(android.content.Context,java.lang.String) -> e
    android.content.pm.ActivityInfo f(android.content.Context,java.lang.String) -> f
net.youmi.android.a.b.k.d -> net.youmi.android.a.b.k.d:
    long a() -> a
    long b() -> b
net.youmi.android.a.b.k.e -> net.youmi.android.a.b.k.e:
    int a(android.content.Context,float) -> a
net.youmi.android.a.b.k.f -> net.youmi.android.a.b.k.f:
    int a -> a
    int b -> b
    boolean c -> c
    int d -> d
    int e -> e
    float f -> f
    int g -> g
    int h -> h
    net.youmi.android.a.b.k.f a(android.content.Context) -> a
    net.youmi.android.a.b.k.f b(android.content.Context) -> b
    boolean a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    int e() -> e
    float f() -> f
    int g() -> g
    int h() -> h
    int a(int) -> a
    float a(float) -> a
net.youmi.android.a.b.k.g -> net.youmi.android.a.b.k.g:
    boolean a(java.io.File,java.lang.String) -> a
    boolean a(java.io.File,java.io.File) -> a
    void a(java.io.File) -> a
    java.io.File b(java.io.File) -> b
net.youmi.android.a.b.k.h -> net.youmi.android.a.b.k.h:
    boolean a(android.content.Context,java.lang.String,int,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String,int) -> a
    boolean b(android.content.Context,java.lang.String,int) -> b
    boolean c(android.content.Context,java.lang.String,int) -> c
    boolean d(android.content.Context,java.lang.String,int) -> d
    android.content.Intent a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String) -> b
    boolean b(android.content.Context,java.lang.String,int,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
net.youmi.android.a.b.k.i -> net.youmi.android.a.b.k.i:
    void a(android.content.Context) -> a
    android.content.Intent a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
net.youmi.android.a.b.k.j -> net.youmi.android.a.b.k.j:
    java.lang.String a(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    net.youmi.android.a.b.k.a b(android.content.Context,java.lang.String) -> b
    android.content.pm.PackageInfo c(android.content.Context,java.lang.String) -> c
    int a(android.content.Context,java.lang.String,int) -> a
    android.content.Intent d(android.content.Context,java.lang.String) -> d
    void e(android.content.Context,java.lang.String) -> e
net.youmi.android.a.b.k.k -> net.youmi.android.a.b.k.k:
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
    boolean e(android.content.Context) -> e
    boolean f(android.content.Context) -> f
    boolean g(android.content.Context) -> g
    boolean h(android.content.Context) -> h
    boolean i(android.content.Context) -> i
    boolean j(android.content.Context) -> j
net.youmi.android.a.b.k.l -> net.youmi.android.a.b.k.l:
    boolean a(android.content.Context) -> a
net.youmi.android.a.b.k.m -> net.youmi.android.a.b.k.m:
    net.youmi.android.a.b.k.m a -> a
    android.os.Handler b -> b
    net.youmi.android.a.b.k.m a() -> a
    boolean b() -> b
    boolean a(java.lang.Runnable) -> a
    boolean a(java.lang.Runnable,long) -> a
net.youmi.android.a.b.k.n -> net.youmi.android.a.b.k.n:
    boolean a() -> a
    boolean a(android.content.Context) -> a
    boolean a(android.content.Context,long) -> a
    long b() -> b
    java.lang.String c() -> c
    long b(android.content.Context) -> b
net.youmi.android.a.b.k.o -> net.youmi.android.a.b.k.o:
    android.app.NotificationManager a(android.content.Context) -> a
    android.telephony.TelephonyManager b(android.content.Context) -> b
    android.net.wifi.WifiManager c(android.content.Context) -> c
    android.view.WindowManager d(android.content.Context) -> d
    android.app.AlarmManager e(android.content.Context) -> e
    android.app.ActivityManager f(android.content.Context) -> f
net.youmi.android.a.b.k.p -> net.youmi.android.a.b.k.p:
    void a(java.io.File,java.lang.String,net.youmi.android.a.b.k.a.a) -> a
net.youmi.android.a.b.l.a -> net.youmi.android.a.b.l.a:
    void a(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    int[] a() -> a
    int[] b() -> b
    int[] c() -> c
    int[] d() -> d
    int[] e() -> e
    int[] f() -> f
net.youmi.android.a.b.l.b -> net.youmi.android.a.b.l.b:
    net.youmi.android.a.b.l.a a -> a
net.youmi.android.a.b.l.c -> net.youmi.android.a.b.l.c:
    net.youmi.android.a.b.l.a a -> a
net.youmi.android.a.b.l.d -> net.youmi.android.a.b.l.d:
net.youmi.android.a.b.l.e -> net.youmi.android.a.b.l.e:
    android.view.WindowManager a -> a
    android.view.WindowManager$LayoutParams b -> b
    android.widget.LinearLayout c -> c
    android.view.View d -> d
    boolean a() -> a
    boolean b() -> b
    void a(android.view.animation.Animation) -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
net.youmi.android.a.c.a -> net.youmi.android.a.c.a:
    void a(java.lang.Runnable) -> a
net.youmi.android.a.c.a.a -> net.youmi.android.a.c.a.a:
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
net.youmi.android.a.c.b -> net.youmi.android.a.c.b:
    int a() -> a
net.youmi.android.a.c.b.a -> net.youmi.android.a.c.b.a:
    java.lang.String b -> b
    java.lang.String a() -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Object[]) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.Object[]) -> b
    void b(java.lang.String,java.lang.Throwable) -> b
    void a(java.lang.Throwable) -> a
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void c(java.lang.String,java.lang.Object[]) -> c
    void b(java.lang.Throwable) -> b
net.youmi.android.a.c.c.a -> net.youmi.android.a.c.c.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    java.lang.String g -> g
    boolean h -> h
    java.lang.String a() -> a
    java.lang.String a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    void b(android.content.Context,java.lang.String) -> b
    java.lang.String c(android.content.Context) -> c
    void c(android.content.Context,java.lang.String) -> c
    boolean d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    int f(android.content.Context) -> f
    void a(android.content.Context,int) -> a
    int g(android.content.Context) -> g
    int h(android.content.Context) -> h
    void a(boolean) -> a
    boolean b() -> b
net.youmi.android.a.c.c.b -> net.youmi.android.a.c.c.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    boolean e -> e
    java.lang.String f -> f
    java.lang.String f() -> f
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
    boolean g() -> g
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
net.youmi.android.a.c.d.a -> net.youmi.android.a.c.d.a:
net.youmi.android.a.c.d.b -> net.youmi.android.a.c.d.b:
    java.lang.String h -> h
    long i -> i
    void a(org.apache.http.HttpResponse) -> a
    void c() -> c
    java.lang.String a(org.apache.http.HttpResponse,java.lang.String,boolean) -> a
    java.lang.String e() -> e
    long d() -> d
net.youmi.android.a.c.d.c -> net.youmi.android.a.c.d.c:
    java.lang.String a(android.content.Context,java.lang.String,java.util.List,boolean,org.apache.http.Header[],net.youmi.android.a.b.i.a.b) -> a
    java.lang.String a(android.content.Context,java.lang.String,boolean) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.util.List,net.youmi.android.a.b.i.a.b) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String,net.youmi.android.a.b.i.a.b) -> a
    java.lang.String a(android.content.Context,java.lang.String,byte[],org.apache.http.Header[],net.youmi.android.a.b.i.a.b) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean,org.apache.http.Header[],net.youmi.android.a.b.i.a.b) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.util.List,byte[],java.lang.String,org.apache.http.Header[],net.youmi.android.a.b.i.a.b) -> a
net.youmi.android.b -> net.youmi.android.b:
    net.youmi.android.AdBrowser a -> a
    void run() -> run
net.youmi.android.b.a -> net.youmi.android.b.a:
    net.youmi.android.b.a a(java.lang.String) -> a
    net.youmi.android.b.a b(java.lang.String) -> b
    net.youmi.android.b.a a(long) -> a
    net.youmi.android.b.e a(net.youmi.android.b.k) -> a
net.youmi.android.b.a.a -> net.youmi.android.b.a.a:
    boolean a(long,long) -> a
net.youmi.android.b.a.b -> net.youmi.android.b.a.b:
    java.lang.String a(java.lang.String) -> a
net.youmi.android.b.b -> net.youmi.android.b.b:
    java.util.HashMap a -> a
    net.youmi.android.b.f a() -> a
    net.youmi.android.b.a b() -> b
    net.youmi.android.b.b c() -> c
    net.youmi.android.b.b c(java.lang.String) -> c
    net.youmi.android.b.b d(java.lang.String) -> d
    net.youmi.android.b.b e(java.lang.String) -> e
    net.youmi.android.b.b f(java.lang.String) -> f
    net.youmi.android.b.e a(net.youmi.android.b.k) -> a
net.youmi.android.b.c -> net.youmi.android.b.c:
    java.lang.String a -> a
    net.youmi.android.b.c b -> b
    net.youmi.android.b.c a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    boolean a(net.youmi.android.b.e) -> a
    boolean a(java.util.List) -> a
    boolean b(java.util.List) -> b
    java.util.List a(int,int) -> a
net.youmi.android.b.d -> net.youmi.android.b.d:
    void a(android.content.Context) -> a
    boolean b(android.content.Context,net.youmi.android.b.e) -> b
    boolean b(android.content.Context,java.util.List) -> b
    org.apache.http.params.HttpParams b(android.content.Context) -> b
    boolean a(android.content.Context,net.youmi.android.b.e) -> a
    boolean a(android.content.Context,java.util.List) -> a
net.youmi.android.b.e -> net.youmi.android.b.e:
    int a -> a
    java.lang.String b -> b
    int c -> c
    long d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    void a(int) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    long d() -> d
    void a(long) -> a
    int e() -> e
    void b(int) -> b
net.youmi.android.b.f -> net.youmi.android.b.f:
    net.youmi.android.b.f a(long) -> a
    net.youmi.android.b.f b(long) -> b
    net.youmi.android.b.f d() -> d
    net.youmi.android.b.e a(net.youmi.android.b.k) -> a
net.youmi.android.b.g -> net.youmi.android.b.g:
    net.youmi.android.b.k a -> a
    android.content.Context b -> b
    int c -> c
    void run() -> run
net.youmi.android.b.h -> net.youmi.android.b.h:
    java.lang.String a -> a
    net.youmi.android.b.h b -> b
    net.youmi.android.b.h a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    net.youmi.android.b.i a(int,java.lang.String) -> a
    boolean a(net.youmi.android.b.i) -> a
    boolean a(java.util.List) -> a
    java.util.List a(android.database.Cursor) -> a
net.youmi.android.b.i -> net.youmi.android.b.i:
    int a -> a
    java.lang.String b -> b
    int c -> c
    long d -> d
    int a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    long c() -> c
    void a(long) -> a
    int d() -> d
    void b(int) -> b
net.youmi.android.b.j -> net.youmi.android.b.j:
    java.util.concurrent.ExecutorService a -> a
    android.content.Context b -> b
    net.youmi.android.b.e c -> c
    java.util.List d -> d
    void a(android.content.Context,java.util.List) -> a
    void run() -> run
net.youmi.android.b.k -> net.youmi.android.b.k:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.util.Queue f -> f
    java.util.concurrent.ExecutorService g -> g
    java.lang.String a(java.lang.String) -> a
    void a(int) -> a
    net.youmi.android.b.k a(net.youmi.android.b.b) -> a
    java.lang.String a() -> a
    boolean b(net.youmi.android.b.b) -> b
    void b() -> b
    void c(net.youmi.android.b.b) -> c
net.youmi.android.banner.AdSize -> net.youmi.android.banner.AdSize:
    int FILL_PARENT -> FILL_PARENT
    int WRAP_CONTENT -> WRAP_CONTENT
    int LANDSPACE_AD_HEIGHT -> LANDSPACE_AD_HEIGHT
    int PORAIT_AD_HEIGHT -> PORAIT_AD_HEIGHT
    int LARGE_AD_HEIGHT -> LARGE_AD_HEIGHT
    net.youmi.android.banner.AdSize SIZE_320x50 -> SIZE_320x50
    net.youmi.android.banner.AdSize SIZE_300x250 -> SIZE_300x250
    net.youmi.android.banner.AdSize SIZE_468x60 -> SIZE_468x60
    net.youmi.android.banner.AdSize SIZE_728x90 -> SIZE_728x90
    net.youmi.android.banner.AdSize FIT_SCREEN -> FIT_SCREEN
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int getAdWidth() -> getAdWidth
    int getAdHeight() -> getAdHeight
    int resizeWidth(android.content.Context) -> resizeWidth
    int resizeHeight(android.content.Context) -> resizeHeight
net.youmi.android.banner.AdView -> net.youmi.android.banner.AdView:
    net.youmi.android.banner.AdViewListener a -> a
    net.youmi.android.banner.e e -> e
    java.lang.String f -> f
    android.content.Context g -> g
    net.youmi.android.banner.AdSize b -> b
    int c -> c
    int d -> d
    int h -> h
    boolean i -> i
    void a() -> a
    void setAdListener(net.youmi.android.banner.AdViewListener) -> setAdListener
    boolean a(android.content.Context) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    int getVisibility() -> getVisibility
    void setVisibility(int) -> setVisibility
net.youmi.android.banner.AdViewListener -> net.youmi.android.banner.AdViewListener:
    void onReceivedAd(net.youmi.android.banner.AdView) -> onReceivedAd
    void onSwitchedAd(net.youmi.android.banner.AdView) -> onSwitchedAd
    void onFailedToReceivedAd(net.youmi.android.banner.AdView) -> onFailedToReceivedAd
net.youmi.android.banner.BannerManager -> net.youmi.android.banner.BannerManager:
    java.lang.String PROTOCOLVERSION -> PROTOCOLVERSION
    int b -> b
    java.util.HashMap a -> a
    int a() -> a
    void a(int) -> a
    java.lang.String checkPermissions(android.content.Context) -> checkPermissions
    net.youmi.android.banner.h getBannerObject(int) -> getBannerObject
    void setBannerObject(int,net.youmi.android.banner.h) -> setBannerObject
    boolean checkBannerAdConfig(android.content.Context) -> checkBannerAdConfig
net.youmi.android.banner.a -> net.youmi.android.banner.a:
    android.content.Context f -> f
    net.youmi.android.a.a.i.a.g a -> a
    net.youmi.android.a.a.e.a.b.h b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    net.youmi.android.banner.b g -> g
    int h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(net.youmi.android.banner.b) -> a
    void a(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    net.youmi.android.a.a.i.a.g e() -> e
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    net.youmi.android.a.a.e.a f() -> f
    boolean a(java.lang.Runnable) -> a
    boolean b(android.webkit.WebView,java.lang.String) -> b
    void a(android.webkit.WebView,int) -> a
    void c(android.webkit.WebView,java.lang.String) -> c
net.youmi.android.banner.b -> net.youmi.android.banner.b:
    void a(int) -> a
net.youmi.android.banner.c -> net.youmi.android.banner.c:
    android.content.Context d -> d
    net.youmi.android.banner.d e -> e
    net.youmi.android.a.a.i.a.g a -> a
    net.youmi.android.a.a.e.a.b.h b -> b
    java.lang.String c -> c
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    void a(net.youmi.android.banner.d) -> a
    void a(int,java.lang.String,java.lang.String,java.lang.String) -> a
    void a() -> a
    void b() -> b
    net.youmi.android.a.a.i.a.g c() -> c
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    net.youmi.android.a.a.e.a f() -> f
    boolean a(java.lang.Runnable) -> a
    boolean b(android.webkit.WebView,java.lang.String) -> b
    void a(android.webkit.WebView,int) -> a
    void c(android.webkit.WebView,java.lang.String) -> c
net.youmi.android.banner.d -> net.youmi.android.banner.d:
    void b(int) -> b
net.youmi.android.banner.e -> net.youmi.android.banner.e:
    android.content.Context a -> a
    int i -> i
    android.os.Handler b -> b
    net.youmi.android.banner.AdView c -> c
    int d -> d
    int j -> j
    java.util.Timer k -> k
    net.youmi.android.banner.f l -> l
    int e -> e
    net.youmi.android.banner.g f -> f
    net.youmi.android.banner.a g -> g
    net.youmi.android.banner.c h -> h
    net.youmi.android.a.a.e.a a(net.youmi.android.a.a.e.g.g) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void b(int) -> b
    void a(int) -> a
    void b(net.youmi.android.banner.h) -> b
    void a(net.youmi.android.banner.h) -> a
    java.lang.String n() -> n
    void b(java.lang.String) -> b
    void e() -> e
    void f() -> f
    android.app.Activity g() -> g
    android.content.Context h() -> h
    net.youmi.android.a.a.e.a a(android.content.Context,java.util.List) -> a
    net.youmi.android.a.a.e.a a(net.youmi.android.a.a.e.g.a,net.youmi.android.a.a.e.g.f) -> a
    net.youmi.android.a.a.e.a a(net.youmi.android.a.a.e.g.d) -> a
    net.youmi.android.a.a.e.a b(net.youmi.android.a.a.e.g.g) -> b
    net.youmi.android.a.a.e.a i() -> i
    net.youmi.android.a.a.e.a j() -> j
    net.youmi.android.a.a.e.a a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    net.youmi.android.a.a.e.a a(java.lang.String) -> a
    java.lang.String a(net.youmi.android.a.a.e.g.b) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    net.youmi.android.a.a.e.a a(int,net.youmi.android.a.a.e.g.b) -> a
    int k() -> k
    int l() -> l
    void a(net.youmi.android.a.a.i.a.b.a) -> a
    net.youmi.android.a.a.e.a a(net.youmi.android.a.a.e.g.c) -> a
    net.youmi.android.a.a.e.a c(int) -> c
    java.lang.String o() -> o
    int m() -> m
    int a(net.youmi.android.banner.e) -> a
    void a(net.youmi.android.banner.e,net.youmi.android.banner.h) -> a
net.youmi.android.banner.f -> net.youmi.android.banner.f:
    net.youmi.android.banner.e a -> a
    void run() -> run
net.youmi.android.banner.g -> net.youmi.android.banner.g:
    net.youmi.android.banner.e a -> a
    void handleMessage(android.os.Message) -> handleMessage
net.youmi.android.banner.h -> net.youmi.android.banner.h:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    int a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    java.lang.String e() -> e
    void d(java.lang.String) -> d
    java.lang.String f() -> f
    void e(java.lang.String) -> e
    void b(int) -> b
    java.lang.String g() -> g
    void f(java.lang.String) -> f
net.youmi.android.c -> net.youmi.android.c:
    android.content.Context a -> a
    java.util.List b -> b
    net.youmi.android.ExpService c -> c
    void run() -> run
net.youmi.android.c.a.a -> net.youmi.android.c.a.a:
    long a -> a
    long b -> b
    boolean c -> c
    java.lang.String d -> d
    java.io.File e -> e
    android.content.Context f -> f
    int a() -> a
net.youmi.android.c.a.b -> net.youmi.android.c.a.b:
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String c -> c
    java.lang.String j -> j
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a(android.content.Context,net.youmi.android.banner.AdSize) -> a
    java.lang.String a(android.content.Context,java.lang.String,boolean) -> a
    java.lang.String a(android.content.Context,net.youmi.android.a.a.e.g.b) -> a
net.youmi.android.c.a.c -> net.youmi.android.c.a.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    android.graphics.Bitmap a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    java.lang.String m() -> m
    java.lang.String n() -> n
    java.lang.String o() -> o
    java.lang.String p() -> p
    java.lang.String q() -> q
    java.lang.String r() -> r
net.youmi.android.c.a.d -> net.youmi.android.c.a.d:
    android.graphics.Bitmap a(android.graphics.Bitmap,int) -> a
    android.graphics.drawable.BitmapDrawable a(android.content.Context,android.graphics.drawable.BitmapDrawable,int) -> a
net.youmi.android.c.a.e -> net.youmi.android.c.a.e:
net.youmi.android.c.a.f -> net.youmi.android.c.a.f:
    java.lang.String a(int) -> a
net.youmi.android.c.a.g -> net.youmi.android.c.a.g:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String b() -> b
    java.io.File a(android.content.Context,java.lang.String) -> a
    java.io.File a(android.content.Context,java.lang.String,java.io.File) -> a
    void a(java.lang.String) -> a
    int a(java.io.File) -> a
    long b(java.io.File) -> b
    boolean c() -> c
    boolean a() -> a
net.youmi.android.c.a.h -> net.youmi.android.c.a.h:
    void a(boolean,int) -> a
net.youmi.android.c.a.i -> net.youmi.android.c.a.i:
    java.io.InputStream c -> c
    int d -> d
    int a -> a
    int b -> b
    boolean e -> e
    int f -> f
    int g -> g
    int[] h -> h
    int[] i -> i
    int[] j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    boolean o -> o
    boolean p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    android.graphics.Bitmap z -> z
    android.graphics.Bitmap A -> A
    net.youmi.android.c.a.j B -> B
    boolean C -> C
    byte[] D -> D
    int E -> E
    int F -> F
    int G -> G
    boolean H -> H
    int I -> I
    int J -> J
    short[] K -> K
    byte[] L -> L
    byte[] M -> M
    byte[] N -> N
    net.youmi.android.c.a.j O -> O
    int P -> P
    net.youmi.android.c.a.h Q -> Q
    byte[] R -> R
    java.lang.String S -> S
    boolean T -> T
    void a(byte[]) -> a
    void a(java.io.InputStream) -> a
    void a(java.lang.String,boolean) -> a
    boolean a(java.lang.String) -> a
    java.lang.String e() -> e
    void a(android.graphics.Bitmap,java.lang.String) -> a
    void run() -> run
    void a() -> a
    int b() -> b
    android.graphics.Bitmap c() -> c
    void f() -> f
    android.graphics.Bitmap a(int) -> a
    net.youmi.android.c.a.j b(int) -> b
    net.youmi.android.c.a.j d() -> d
    int g() -> g
    int h() -> h
    void i() -> i
    boolean j() -> j
    void k() -> k
    int l() -> l
    int m() -> m
    int[] c(int) -> c
    void n() -> n
    void o() -> o
    void p() -> p
    void q() -> q
    void r() -> r
    void s() -> s
    int t() -> t
    void u() -> u
    void v() -> v
net.youmi.android.c.a.j -> net.youmi.android.c.a.j:
    android.graphics.Bitmap a -> a
    int b -> b
    java.lang.String c -> c
    net.youmi.android.c.a.j d -> d
net.youmi.android.c.a.k -> net.youmi.android.c.a.k:
    net.youmi.android.c.a.i a -> a
    android.graphics.Bitmap b -> b
    boolean c -> c
    boolean d -> d
    net.youmi.android.c.a.n e -> e
    android.content.Context f -> f
    boolean g -> g
    android.view.View h -> h
    net.youmi.android.c.a.o i -> i
    android.os.Handler j -> j
    void setGifDecoderImage(byte[]) -> setGifDecoderImage
    void setGifDecoderImage(java.io.InputStream) -> setGifDecoderImage
    void setAsBackground(android.view.View) -> setAsBackground
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void setGifImage(byte[]) -> setGifImage
    void setGifImage(java.io.InputStream) -> setGifImage
    void setGifImage(int) -> setGifImage
    void a() -> a
    void setGifImageType(net.youmi.android.c.a.o) -> setGifImageType
    void a(boolean,int) -> a
    void b() -> b
    void c() -> c
    android.view.View a(net.youmi.android.c.a.k) -> a
    android.graphics.Bitmap b(net.youmi.android.c.a.k) -> b
    void c(net.youmi.android.c.a.k) -> c
    net.youmi.android.c.a.i d(net.youmi.android.c.a.k) -> d
    boolean e(net.youmi.android.c.a.k) -> e
    android.graphics.Bitmap a(net.youmi.android.c.a.k,android.graphics.Bitmap) -> a
    void f(net.youmi.android.c.a.k) -> f
    boolean g(net.youmi.android.c.a.k) -> g
    android.os.Handler h(net.youmi.android.c.a.k) -> h
net.youmi.android.c.a.l -> net.youmi.android.c.a.l:
    net.youmi.android.c.a.k a -> a
    void handleMessage(android.os.Message) -> handleMessage
net.youmi.android.c.a.m -> net.youmi.android.c.a.m:
    int[] a -> a
net.youmi.android.c.a.n -> net.youmi.android.c.a.n:
    net.youmi.android.c.a.k a -> a
    void run() -> run
net.youmi.android.c.a.o -> net.youmi.android.c.a.o:
    net.youmi.android.c.a.o a -> a
    net.youmi.android.c.a.o b -> b
    net.youmi.android.c.a.o c -> c
    int d -> d
    net.youmi.android.c.a.o[] e -> e
    net.youmi.android.c.a.o[] values() -> values
    net.youmi.android.c.a.o valueOf(java.lang.String) -> valueOf
net.youmi.android.c.a.p -> net.youmi.android.c.a.p:
    float a -> a
    float b -> b
    android.view.ViewTreeObserver$OnPreDrawListener c -> c
    void setYFraction(float) -> setYFraction
    void setXFraction(float) -> setXFraction
    void setGlide(float) -> setGlide
    void setGlideBack(float) -> setGlideBack
    void setLeftGlideBack(float) -> setLeftGlideBack
    void setCube(float) -> setCube
    void setCubeBack(float) -> setCubeBack
    void setRotateDown(float) -> setRotateDown
    void setRotateUp(float) -> setRotateUp
    void setAccordionPivotZero(float) -> setAccordionPivotZero
    void setAccordionPivotWidth(float) -> setAccordionPivotWidth
    void setTableHorizontalPivotZero(float) -> setTableHorizontalPivotZero
    void setTableHorizontalPivotWidth(float) -> setTableHorizontalPivotWidth
    void setTableVerticalPivotZero(float) -> setTableVerticalPivotZero
    void setTableVerticalPivotHeight(float) -> setTableVerticalPivotHeight
    void setZoomFromCornerPivotHG(float) -> setZoomFromCornerPivotHG
    void setZoomFromCornerPivotZero(float) -> setZoomFromCornerPivotZero
    void setZoomFromCornerPivotWidth(float) -> setZoomFromCornerPivotWidth
    void setZoomFromCornerPivotHeight(float) -> setZoomFromCornerPivotHeight
    void setZoomSlideHorizontal(float) -> setZoomSlideHorizontal
    void setZoomSlideVertical(float) -> setZoomSlideVertical
    android.view.ViewTreeObserver$OnPreDrawListener a(net.youmi.android.c.a.p) -> a
    float b(net.youmi.android.c.a.p) -> b
    float c(net.youmi.android.c.a.p) -> c
net.youmi.android.c.a.q -> net.youmi.android.c.a.q:
    net.youmi.android.c.a.p a -> a
    boolean onPreDraw() -> onPreDraw
net.youmi.android.c.a.r -> net.youmi.android.c.a.r:
    net.youmi.android.c.a.p a -> a
    boolean onPreDraw() -> onPreDraw
net.youmi.android.c.a.s -> net.youmi.android.c.a.s:
    void a(android.content.Context,android.view.View) -> a
    void a(android.content.Context,android.view.View,long) -> a
    android.animation.AnimatorSet b(android.content.Context,android.view.View,long) -> b
    void c(android.content.Context,android.view.View,long) -> c
    android.animation.AnimatorSet d(android.content.Context,android.view.View,long) -> d
net.youmi.android.c.a.t -> net.youmi.android.c.a.t:
    boolean a(android.content.Context,java.lang.String) -> a
net.youmi.android.c.a.u -> net.youmi.android.c.a.u:
    java.lang.String a -> a
    java.lang.String a() -> a
net.youmi.android.c.a.v -> net.youmi.android.c.a.v:
    java.lang.Object g -> g
    void run() -> run
net.youmi.android.listener.Interface_ActivityListener -> net.youmi.android.listener.Interface_ActivityListener:
    void onActivityDestroy(android.content.Context) -> onActivityDestroy
net.youmi.android.listener.Interface_WebViewDialogListener -> net.youmi.android.listener.Interface_WebViewDialogListener:
    void onDialogClose() -> onDialogClose
net.youmi.android.listener.a -> net.youmi.android.listener.a:
    net.youmi.android.listener.a a -> a
    android.util.SparseArray b -> b
    net.youmi.android.listener.a a() -> a
    android.util.SparseArray b() -> b
    void a(int,net.youmi.android.listener.Interface_ActivityListener) -> a
    void a(android.content.Context,int) -> a
    boolean c() -> c
    void d() -> d
net.youmi.android.offers.EarnPointsOrderInfo -> net.youmi.android.offers.EarnPointsOrderInfo:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    long h -> h
    int i -> i
    java.lang.String getOrderID() -> getOrderID
    void a(java.lang.String) -> a
    int getChannelId() -> getChannelId
    void a(int) -> a
    java.lang.String getCustomUserID() -> getCustomUserID
    void b(java.lang.String) -> b
    int getStatus() -> getStatus
    void b(int) -> b
    java.lang.String getMessage() -> getMessage
    void c(java.lang.String) -> c
    java.lang.String getAppName() -> getAppName
    void d(java.lang.String) -> d
    int getPoints() -> getPoints
    void c(int) -> c
    long getSettlingTime() -> getSettlingTime
    void a(long) -> a
    int a() -> a
    void d(int) -> d
net.youmi.android.offers.EarnPointsOrderList -> net.youmi.android.offers.EarnPointsOrderList:
    java.util.ArrayList a -> a
    java.lang.String b -> b
    java.lang.String getCurrencyName() -> getCurrencyName
    void a(java.lang.String) -> a
    boolean a(net.youmi.android.offers.EarnPointsOrderInfo) -> a
    void a() -> a
    net.youmi.android.offers.EarnPointsOrderInfo get(int) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
net.youmi.android.offers.OffersBrowserConfig -> net.youmi.android.offers.OffersBrowserConfig:
    boolean isUsingSdkPointsUnitApi -> isUsingSdkPointsUnitApi
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    void setBrowserTitleText(java.lang.String) -> setBrowserTitleText
    java.lang.String getBrowserTitleText() -> getBrowserTitleText
    void setPointsUnit(java.lang.String) -> setPointsUnit
    java.lang.String getPointsUnit() -> getPointsUnit
    void setBrowserTitleBackgroundColor(int) -> setBrowserTitleBackgroundColor
    int getBrowserTitleBackgroundColor() -> getBrowserTitleBackgroundColor
net.youmi.android.offers.OffersManager -> net.youmi.android.offers.OffersManager:
    int STYLE_SPOT_CENTER -> STYLE_SPOT_CENTER
    int STYLE_SPOT_TOP_DOWN_REVERSE -> STYLE_SPOT_TOP_DOWN_REVERSE
    net.youmi.android.offers.e a -> a
    android.content.Context b -> b
    net.youmi.android.offers.OffersManager c -> c
    boolean d -> d
    net.youmi.android.offers.OffersManager getInstance(android.content.Context) -> getInstance
    void onAppLaunch() -> onAppLaunch
    void onAppExit() -> onAppExit
    void a() -> a
    void b() -> b
    boolean checkOffersAdConfig() -> checkOffersAdConfig
    boolean checkOffersAdConfig(boolean) -> checkOffersAdConfig
    boolean a(boolean) -> a
    android.content.Intent getShowOffersWallIntent(int) -> getShowOffersWallIntent
    android.content.Intent a(int,int) -> a
    void showOffersWall() -> showOffersWall
    void showOffersWall(net.youmi.android.listener.Interface_ActivityListener) -> showOffersWall
    void showOffersWallDialog(android.app.Activity,net.youmi.android.offers.OffersWallDialogListener) -> showOffersWallDialog
    void showOffersWallDialog(android.app.Activity) -> showOffersWallDialog
    void showOffersWallDialog(android.app.Activity,int,int,net.youmi.android.offers.OffersWallDialogListener) -> showOffersWallDialog
    void showOffersWallDialog(android.app.Activity,int,int) -> showOffersWallDialog
    void showOffersWallDialog(android.app.Activity,double,double,net.youmi.android.offers.OffersWallDialogListener) -> showOffersWallDialog
    void showOffersWallDialog(android.app.Activity,double,double) -> showOffersWallDialog
    void setCustomUserId(java.lang.String) -> setCustomUserId
    java.lang.String getCustomUserId() -> getCustomUserId
    void setUsingServerCallBack(boolean) -> setUsingServerCallBack
    boolean isUsingServerCallBack() -> isUsingServerCallBack
    android.content.Context a(net.youmi.android.offers.OffersManager) -> a
net.youmi.android.offers.OffersWallDialogListener -> net.youmi.android.offers.OffersWallDialogListener:
net.youmi.android.offers.PointsChangeNotify -> net.youmi.android.offers.PointsChangeNotify:
    void onPointBalanceChange(int) -> onPointBalanceChange
net.youmi.android.offers.PointsEarnNotify -> net.youmi.android.offers.PointsEarnNotify:
    void onPointEarn(android.content.Context,net.youmi.android.offers.EarnPointsOrderList) -> onPointEarn
net.youmi.android.offers.PointsManager -> net.youmi.android.offers.PointsManager:
    android.content.Context a -> a
    net.youmi.android.offers.PointsManager b -> b
    boolean c -> c
    boolean d -> d
    net.youmi.android.offers.PointsManager getInstance(android.content.Context) -> getInstance
    int queryPoints() -> queryPoints
    boolean awardPoints(int) -> awardPoints
    boolean spendPoints(int) -> spendPoints
    void registerNotify(net.youmi.android.offers.PointsChangeNotify) -> registerNotify
    void unRegisterNotify(net.youmi.android.offers.PointsChangeNotify) -> unRegisterNotify
    void registerPointsEarnNotify(net.youmi.android.offers.PointsEarnNotify) -> registerPointsEarnNotify
    void unRegisterPointsEarnNotify(net.youmi.android.offers.PointsEarnNotify) -> unRegisterPointsEarnNotify
    void setEnableEarnPointsNotification(boolean) -> setEnableEarnPointsNotification
    boolean isEnableEarnPointsNotification() -> isEnableEarnPointsNotification
    void setEnableEarnPointsToastTips(boolean) -> setEnableEarnPointsToastTips
    boolean isEnableEarnPointsToastTips() -> isEnableEarnPointsToastTips
net.youmi.android.offers.PointsReceiver -> net.youmi.android.offers.PointsReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    java.lang.String getActionName_EarnPoints(android.content.Context) -> getActionName_EarnPoints
    java.lang.String getActionName_ViewPoints(android.content.Context) -> getActionName_ViewPoints
    void onEarnPoints(android.content.Context,net.youmi.android.offers.EarnPointsOrderList) -> onEarnPoints
    void onViewPoints(android.content.Context) -> onViewPoints
net.youmi.android.offers.a -> net.youmi.android.offers.a:
    java.lang.String a -> a
    net.youmi.android.offers.OffersManager b -> b
    void run() -> run
net.youmi.android.offers.a.a -> net.youmi.android.offers.a.a:
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
    boolean a(android.content.Context) -> a
net.youmi.android.offers.b -> net.youmi.android.offers.b:
    java.util.HashSet a -> a
    net.youmi.android.offers.b b -> b
    net.youmi.android.offers.b a() -> a
    void a(java.lang.String,java.lang.String) -> a
    void onPointEarn(android.content.Context,net.youmi.android.offers.EarnPointsOrderList) -> onPointEarn
net.youmi.android.offers.b.a -> net.youmi.android.offers.b.a:
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
net.youmi.android.offers.b.b -> net.youmi.android.offers.b.b:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
net.youmi.android.offers.c -> net.youmi.android.offers.c:
    android.content.Context a -> a
    net.youmi.android.offers.c b -> b
    net.youmi.android.offers.c a(android.content.Context) -> a
    void a(net.youmi.android.offers.EarnPointsOrderList) -> a
    android.content.Context a(net.youmi.android.offers.c) -> a
net.youmi.android.offers.c.a -> net.youmi.android.offers.c.a:
    boolean a(int) -> a
    net.youmi.android.a.a.e.a.b.g a(int,int) -> a
net.youmi.android.offers.c.a.a -> net.youmi.android.offers.c.a.a:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.offers.c.a.b -> net.youmi.android.offers.c.a.b:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.offers.c.a.c -> net.youmi.android.offers.c.a.c:
    int[] a -> a
net.youmi.android.offers.c.a.d -> net.youmi.android.offers.c.a.d:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.offers.c.a.e -> net.youmi.android.offers.c.a.e:
    org.json.JSONObject a(net.youmi.android.a.a.e.a.b.h,net.youmi.android.a.a.e.a.b.f,org.json.JSONObject) -> a
net.youmi.android.offers.c.b.a -> net.youmi.android.offers.c.b.a:
    android.content.Context a -> a
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    java.lang.String k -> k
    java.util.List l -> l
    java.util.List m -> m
    java.util.List n -> n
    java.util.List o -> o
    void run() -> run
    boolean a() -> a
    java.lang.String b() -> b
    java.lang.String a(java.lang.String) -> a
    void c() -> c
    boolean d() -> d
    void e() -> e
    java.lang.String f() -> f
    void a(int,java.lang.String) -> a
net.youmi.android.offers.d -> net.youmi.android.offers.d:
    net.youmi.android.offers.PointsEarnNotify a -> a
    net.youmi.android.offers.EarnPointsOrderList b -> b
    net.youmi.android.offers.c c -> c
    void run() -> run
net.youmi.android.offers.d.a.a -> net.youmi.android.offers.d.a.a:
    java.lang.String b(android.content.Context,java.lang.String) -> b
net.youmi.android.offers.d.b.a -> net.youmi.android.offers.d.b.a:
    java.util.HashSet a -> a
    net.youmi.android.offers.d.b.a b -> b
    net.youmi.android.offers.d.b.a a() -> a
    void a(java.lang.String,java.lang.String) -> a
    void onPointBalanceChange(int) -> onPointBalanceChange
net.youmi.android.offers.d.b.b -> net.youmi.android.offers.d.b.b:
    android.content.Context a -> a
    net.youmi.android.offers.d.b.b b -> b
    net.youmi.android.offers.d.b.b a(android.content.Context) -> a
    void a() -> a
net.youmi.android.offers.d.b.c -> net.youmi.android.offers.d.b.c:
    net.youmi.android.offers.PointsChangeNotify a -> a
    int b -> b
    net.youmi.android.offers.d.b.b c -> c
    void run() -> run
net.youmi.android.offers.d.b.d -> net.youmi.android.offers.d.b.d:
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
net.youmi.android.offers.d.b.e -> net.youmi.android.offers.d.b.e:
    net.youmi.android.offers.d.b.e a -> a
    android.content.Context b -> b
    int c -> c
    int d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    net.youmi.android.offers.d.b.e a(android.content.Context) -> a
    int a() -> a
    boolean a(int) -> a
    boolean b(int) -> b
    void b() -> b
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    void c() -> c
    int d(android.content.Context) -> d
    boolean a(android.content.Context,int) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    int d() -> d
    boolean e() -> e
    boolean f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    java.lang.String m() -> m
    java.lang.String a(java.lang.String,java.lang.String) -> a
net.youmi.android.offers.d.b.f -> net.youmi.android.offers.d.b.f:
    void a(android.content.Context,net.youmi.android.offers.EarnPointsOrderInfo) -> a
    void a(android.content.Context,net.youmi.android.offers.EarnPointsOrderInfo,net.youmi.android.a.b.k.a) -> a
    void b(android.content.Context,net.youmi.android.offers.EarnPointsOrderInfo,net.youmi.android.a.b.k.a) -> b
net.youmi.android.offers.d.b.g -> net.youmi.android.offers.d.b.g:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    void run() -> run
net.youmi.android.offers.d.b.h -> net.youmi.android.offers.d.b.h:
    android.app.PendingIntent a -> a
    int b -> b
    void a(android.content.Context) -> a
    void a(android.content.Context,long) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    android.app.PendingIntent e(android.content.Context) -> e
    int f(android.content.Context) -> f
    android.app.PendingIntent d(android.content.Context) -> d
net.youmi.android.offers.d.b.i -> net.youmi.android.offers.d.b.i:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.offers.d.b.j -> net.youmi.android.offers.d.b.j:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.offers.d.b.k -> net.youmi.android.offers.d.b.k:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    long a(android.content.Context,java.lang.String) -> a
    boolean d(android.content.Context) -> d
net.youmi.android.offers.d.c.a -> net.youmi.android.offers.d.c.a:
    net.youmi.android.offers.d.c.b a -> a
    void a() -> a
    void a(android.content.Context) -> a
net.youmi.android.offers.d.c.b -> net.youmi.android.offers.d.c.b:
    net.youmi.android.a.a.i.a.g a -> a
    net.youmi.android.a.a.e.g.c b -> b
    int b() -> b
    void a() -> a
    boolean m() -> m
    boolean l() -> l
    boolean b(java.lang.String) -> b
    boolean a(java.lang.String,byte[]) -> a
    net.youmi.android.a.a.e.a f() -> f
    boolean a(java.lang.Runnable) -> a
    boolean a(int,int,float) -> a
net.youmi.android.offers.e -> net.youmi.android.offers.e:
    void onEarnPoints(android.content.Context,net.youmi.android.offers.EarnPointsOrderList) -> onEarnPoints
    void onViewPoints(android.content.Context) -> onViewPoints
net.youmi.android.offers.e.a -> net.youmi.android.offers.e.a:
    android.content.Intent a(android.content.Context,int,int) -> a
    boolean a(android.content.Context,net.youmi.android.offers.OffersWallDialogListener) -> a
    boolean a(android.content.Context,double,double,net.youmi.android.offers.OffersWallDialogListener) -> a
    boolean a(android.content.Context,int,int,net.youmi.android.offers.OffersWallDialogListener) -> a
    net.youmi.android.a.a.e.g.g a(android.content.Context) -> a
    java.lang.String a(android.content.Context,int,int,boolean) -> a
net.youmi.android.offers.f -> net.youmi.android.offers.f:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,org.json.JSONObject) -> a
    boolean a(org.json.JSONObject) -> a
    void b(android.content.Context,org.json.JSONObject) -> b
    void a(android.content.Context,net.youmi.android.offers.EarnPointsOrderList) -> a
    void b(android.content.Context,net.youmi.android.offers.EarnPointsOrderList) -> b
    void c(android.content.Context,org.json.JSONObject) -> c
    void c(android.content.Context,net.youmi.android.offers.EarnPointsOrderList) -> c
net.youmi.android.offers.f.a -> net.youmi.android.offers.f.a:
    boolean a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
net.youmi.android.offers.f.a.a -> net.youmi.android.offers.f.a.a:
    net.youmi.android.a.b.c.g b -> b
    net.youmi.android.a.b.c.g g(android.content.Context) -> g
net.youmi.android.offers.f.a.b -> net.youmi.android.offers.f.a.b:
    net.youmi.android.a.b.c.i a -> a
    void a(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,long) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
net.youmi.android.offers.f.b -> net.youmi.android.offers.f.b:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void b(android.content.Context,java.lang.String,boolean) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    boolean d(android.content.Context) -> d
    void a(android.content.Context,java.lang.String,boolean) -> a
    boolean c(android.content.Context) -> c
net.youmi.android.offers.f.c -> net.youmi.android.offers.f.c:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.offers.f.d -> net.youmi.android.offers.f.d:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.offers.f.e -> net.youmi.android.offers.f.e:
    net.youmi.android.offers.f.e a -> a
    android.content.Context b -> b
    int c -> c
    java.lang.String d -> d
    net.youmi.android.offers.f.e a(android.content.Context) -> a
    void a(int) -> a
    void b(java.lang.String) -> b
    void a(net.youmi.android.a.b.g.e.a) -> a
    void b(net.youmi.android.a.b.g.e.a) -> b
    void b(net.youmi.android.a.b.g.e.a,long,long,int,long) -> b
    void k(net.youmi.android.a.b.g.e.a) -> k
    void l(net.youmi.android.a.b.g.e.a) -> l
    void m(net.youmi.android.a.b.g.e.a) -> m
    void n(net.youmi.android.a.b.g.e.a) -> n
    boolean a(java.io.File) -> a
    void o(net.youmi.android.a.b.g.e.a) -> o
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    android.content.Context a() -> a
    void a(net.youmi.android.offers.f.e,java.lang.String) -> a
net.youmi.android.offers.f.f -> net.youmi.android.offers.f.f:
    long a -> a
    java.io.File b -> b
    net.youmi.android.a.b.g.e.a c -> c
    net.youmi.android.offers.f.e d -> d
    void a() -> a
    void a(int) -> a
    void a(int,int) -> a
    void b() -> b
net.youmi.android.offers.f.g -> net.youmi.android.offers.f.g:
    java.lang.String a -> a
    net.youmi.android.offers.f.e b -> b
    void run() -> run
net.youmi.android.offers.g -> net.youmi.android.offers.g:
    android.content.Context a -> a
    net.youmi.android.offers.EarnPointsOrderList b -> b
    net.youmi.android.offers.f c -> c
    void run() -> run
net.youmi.android.onlineconfig.OnlineConfigCallBack -> net.youmi.android.onlineconfig.OnlineConfigCallBack:
    void onGetOnlineConfigSuccessful(java.lang.String,java.lang.String) -> onGetOnlineConfigSuccessful
    void onGetOnlineConfigFailed(java.lang.String) -> onGetOnlineConfigFailed
net.youmi.android.onlineconfig.a -> net.youmi.android.onlineconfig.a:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    java.lang.String l() -> l
    boolean a(java.lang.String) -> a
    void a(long) -> a
    long m() -> m
    java.lang.String n() -> n
    java.lang.String a() -> a
    void b(java.lang.String) -> b
net.youmi.android.onlineconfig.b -> net.youmi.android.onlineconfig.b:
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
net.youmi.android.onlineconfig.c -> net.youmi.android.onlineconfig.c:
    net.youmi.android.onlineconfig.c a -> a
    net.youmi.android.onlineconfig.c a(android.content.Context) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,long) -> a
net.youmi.android.onlineconfig.d -> net.youmi.android.onlineconfig.d:
    net.youmi.android.onlineconfig.OnlineConfigCallBack a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    void run() -> run
    java.lang.String a(net.youmi.android.onlineconfig.d) -> a
    net.youmi.android.onlineconfig.OnlineConfigCallBack b(net.youmi.android.onlineconfig.d) -> b
net.youmi.android.onlineconfig.e -> net.youmi.android.onlineconfig.e:
    java.lang.String a -> a
    net.youmi.android.onlineconfig.d b -> b
    void run() -> run
net.youmi.android.onlineconfig.ntp.NtpResultListener -> net.youmi.android.onlineconfig.ntp.NtpResultListener:
    void onCheckNtpFinish(boolean) -> onCheckNtpFinish
net.youmi.android.onlineconfig.ntp.a -> net.youmi.android.onlineconfig.ntp.a:
    java.lang.String[] a -> a
    int b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    boolean a() -> a
    java.lang.String a(double) -> a
    void b() -> b
net.youmi.android.onlineconfig.ntp.b -> net.youmi.android.onlineconfig.ntp.b:
    byte a -> a
    byte b -> b
    byte c -> c
    short d -> d
    byte e -> e
    byte f -> f
    double g -> g
    double h -> h
    byte[] i -> i
    double j -> j
    double k -> k
    double l -> l
    double m -> m
    byte[] a() -> a
    java.lang.String toString() -> toString
    short a(byte) -> a
    double a(byte[],int) -> a
    void a(byte[],int,double) -> a
    java.lang.String a(double) -> a
    java.lang.String a(byte[],short,byte) -> a
net.youmi.android.onlineconfig.ntp.c -> net.youmi.android.onlineconfig.ntp.c:
    int a -> a
    int b -> b
    int c -> c
    net.youmi.android.onlineconfig.ntp.NtpResultListener d -> d
    void run() -> run
    net.youmi.android.onlineconfig.ntp.NtpResultListener a(net.youmi.android.onlineconfig.ntp.c) -> a
net.youmi.android.onlineconfig.ntp.d -> net.youmi.android.onlineconfig.ntp.d:
    boolean a -> a
    net.youmi.android.onlineconfig.ntp.c b -> b
    void run() -> run
net.youmi.android.spot.ExitSpotDialog -> net.youmi.android.spot.ExitSpotDialog:
    int b -> b
    boolean c -> c
    android.content.Context d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    int i -> i
    int j -> j
    java.lang.String k -> k
    int a -> a
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    net.youmi.android.spot.ExitSpotListener s -> s
    android.widget.RelativeLayout t -> t
    android.widget.RelativeLayout u -> u
    android.widget.Button v -> v
    android.widget.Button w -> w
    int x -> x
    int y -> y
    int z -> z
    boolean A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    float E -> E
    long F -> F
    void a() -> a
    int a(float) -> a
    void b() -> b
    void onClick(android.view.View) -> onClick
    boolean showDialog(int) -> showDialog
net.youmi.android.spot.ExitSpotListener -> net.youmi.android.spot.ExitSpotListener:
    void exit() -> exit
net.youmi.android.spot.SplashView -> net.youmi.android.spot.SplashView:
    int c -> c
    long SPLASH_SHOW_TIME -> SPLASH_SHOW_TIME
    android.content.Context d -> d
    android.widget.ImageView e -> e
    android.widget.RelativeLayout f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    int j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    int a -> a
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    net.youmi.android.spot.SpotDialogListener t -> t
    net.youmi.android.spot.i u -> u
    java.lang.Class v -> v
    android.widget.ImageButton w -> w
    android.widget.RelativeLayout x -> x
    boolean y -> y
    boolean z -> z
    long A -> A
    int B -> B
    android.graphics.Bitmap closeBtnBitmap -> closeBtnBitmap
    java.lang.String C -> C
    android.graphics.drawable.Drawable D -> D
    android.os.Handler handler -> handler
    java.lang.Runnable b -> b
    boolean showSplash(boolean,java.lang.String,int) -> showSplash
    void a(int) -> a
    void init(java.lang.String) -> init
    android.view.View getSplashView() -> getSplashView
    android.widget.ImageView getSplashImage() -> getSplashImage
    void showFail() -> showFail
    void handleClick() -> handleClick
    void sendShowLog() -> sendShowLog
    void a() -> a
    int a(float) -> a
    void showAnimation() -> showAnimation
    boolean isOpenAnimation() -> isOpenAnimation
    void setOpenAnimation(boolean) -> setOpenAnimation
    net.youmi.android.spot.SpotDialogListener getSpotListener() -> getSpotListener
    void setSpotListener(net.youmi.android.spot.SpotDialogListener) -> setSpotListener
    void initDisclkLayout() -> initDisclkLayout
    void b() -> b
    android.widget.ImageView a(net.youmi.android.spot.SplashView) -> a
    int b(net.youmi.android.spot.SplashView) -> b
    android.widget.RelativeLayout c(net.youmi.android.spot.SplashView) -> c
    android.content.Context d(net.youmi.android.spot.SplashView) -> d
    android.widget.ImageButton e(net.youmi.android.spot.SplashView) -> e
    boolean f(net.youmi.android.spot.SplashView) -> f
    java.lang.String g(net.youmi.android.spot.SplashView) -> g
    java.lang.String h(net.youmi.android.spot.SplashView) -> h
    java.lang.Class i(net.youmi.android.spot.SplashView) -> i
    void j(net.youmi.android.spot.SplashView) -> j
    net.youmi.android.spot.SpotDialogListener k(net.youmi.android.spot.SplashView) -> k
    boolean a(net.youmi.android.spot.SplashView,boolean) -> a
net.youmi.android.spot.SpotDialogListener -> net.youmi.android.spot.SpotDialogListener:
    void onShowSuccess() -> onShowSuccess
    void onShowFailed() -> onShowFailed
    void onSpotClosed() -> onSpotClosed
net.youmi.android.spot.SpotManager -> net.youmi.android.spot.SpotManager:
    java.lang.String CACHE_PIC_TAG -> CACHE_PIC_TAG
    java.lang.String o -> o
    java.lang.String p -> p
    boolean IS_KITKAT -> IS_KITKAT
    java.lang.String PROTOCOLVERSION -> PROTOCOLVERSION
    int NORMAL_SPOT -> NORMAL_SPOT
    int NORMAL_NOTIME_SPOT -> NORMAL_NOTIME_SPOT
    int SPLASH_SPOT -> SPLASH_SPOT
    int EXIT_SPOT -> EXIT_SPOT
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    long q -> q
    java.lang.String g -> g
    long r -> r
    long s -> s
    int t -> t
    int u -> u
    long v -> v
    boolean h -> h
    boolean i -> i
    boolean j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String abtest -> abtest
    boolean w -> w
    boolean x -> x
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    net.youmi.android.spot.ExitSpotDialog C -> C
    int D -> D
    java.lang.String CheckTag -> CheckTag
    int E -> E
    int F -> F
    java.lang.String G -> G
    int ANIM_NONE -> ANIM_NONE
    int ANIM_SIMPLE -> ANIM_SIMPLE
    int ANIM_ADVANCE -> ANIM_ADVANCE
    int H -> H
    long m -> m
    net.youmi.android.spot.SpotManager I -> I
    android.content.Context J -> J
    android.app.Activity K -> K
    net.youmi.android.spot.a L -> L
    net.youmi.android.spot.SplashView M -> M
    android.content.BroadcastReceiver N -> N
    boolean n -> n
    void setLoading(boolean) -> setLoading
    net.youmi.android.spot.SpotManager getInstance(android.content.Context) -> getInstance
    void setSpotTimeout(long) -> setSpotTimeout
    long getSpotTimeout() -> getSpotTimeout
    void loadSplashSpotAds() -> loadSplashSpotAds
    void loadSpotAds() -> loadSpotAds
    void loadExitSpot() -> loadExitSpot
    void a(boolean,boolean) -> a
    void a(boolean,boolean,net.youmi.android.spot.SpotDialogListener,boolean) -> a
    void showSplashSpotAds(android.content.Context,java.lang.Class) -> showSplashSpotAds
    void showSplashSpotAds(android.content.Context,net.youmi.android.spot.SplashView,net.youmi.android.spot.SpotDialogListener) -> showSplashSpotAds
    void asyncLoadNextSplash() -> asyncLoadNextSplash
    void a() -> a
    void a(android.content.Context) -> a
    void a(net.youmi.android.spot.SplashView,net.youmi.android.spot.SpotDialogListener) -> a
    void a(net.youmi.android.spot.SpotDialogListener,int) -> a
    boolean a(android.content.Context,int) -> a
    boolean showExitSpot(android.content.Context,int,net.youmi.android.spot.ExitSpotListener) -> showExitSpot
    void reDraw(android.content.Context,int) -> reDraw
    void showSpotAds(android.content.Context,net.youmi.android.spot.SpotDialogListener) -> showSpotAds
    void showSpotAds(android.content.Context) -> showSpotAds
    void b(android.content.Context,net.youmi.android.spot.SpotDialogListener) -> b
    void a(android.content.Context,net.youmi.android.spot.SpotDialogListener) -> a
    void cacheNextAd() -> cacheNextAd
    boolean a(int) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(boolean) -> a
    boolean disMiss() -> disMiss
    boolean onStop() -> onStop
    boolean checkSpotAdConfig(android.content.Context) -> checkSpotAdConfig
    void setAnimationType(int) -> setAnimationType
    void onDestroy() -> onDestroy
    void b() -> b
    void setfinishActivity(android.app.Activity) -> setfinishActivity
    void setSpotOrientation(int) -> setSpotOrientation
    void checkPermission(android.content.Context) -> checkPermission
    void a(java.lang.String) -> a
    void initExitSpotStyle(int,int,java.lang.String) -> initExitSpotStyle
    void checkSDKProcess(java.lang.String,java.lang.String) -> checkSDKProcess
    void b(java.lang.String) -> b
    boolean a(net.youmi.android.spot.SpotManager,boolean) -> a
    android.content.Context a(net.youmi.android.spot.SpotManager) -> a
    void b(net.youmi.android.spot.SpotManager) -> b
net.youmi.android.spot.a -> net.youmi.android.spot.a:
    int m -> m
    int n -> n
    int o -> o
    android.content.Context p -> p
    android.view.WindowManager a -> a
    android.view.WindowManager$LayoutParams q -> q
    android.widget.RelativeLayout$LayoutParams r -> r
    android.widget.RelativeLayout b -> b
    android.widget.RelativeLayout s -> s
    boolean t -> t
    android.widget.ImageButton u -> u
    net.youmi.android.spot.SpotDialogListener v -> v
    net.youmi.android.spot.e w -> w
    boolean x -> x
    long y -> y
    android.graphics.drawable.BitmapDrawable c -> c
    boolean z -> z
    boolean A -> A
    int d -> d
    int e -> e
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    int J -> J
    int K -> K
    int L -> L
    java.lang.String M -> M
    boolean N -> N
    int O -> O
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int P -> P
    int Q -> Q
    android.widget.ImageView R -> R
    org.json.JSONObject S -> S
    android.graphics.Bitmap k -> k
    float[] T -> T
    int[] U -> U
    java.lang.String V -> V
    float W -> W
    android.os.Handler l -> l
    boolean a() -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    void b() -> b
    void c() -> c
    boolean g() -> g
    boolean d() -> d
    void h() -> h
    void i() -> i
    int a(float) -> a
    void j() -> j
    void e() -> e
    void f() -> f
    void a(int) -> a
    void k() -> k
    byte[] a(java.io.File) -> a
    void run() -> run
    android.widget.ImageButton a(net.youmi.android.spot.a) -> a
    boolean a(net.youmi.android.spot.a,boolean) -> a
    android.widget.ImageView b(net.youmi.android.spot.a) -> b
    android.content.Context c(net.youmi.android.spot.a) -> c
    boolean b(net.youmi.android.spot.a,boolean) -> b
    void d(net.youmi.android.spot.a) -> d
    int e(net.youmi.android.spot.a) -> e
    void f(net.youmi.android.spot.a) -> f
    android.widget.RelativeLayout g(net.youmi.android.spot.a) -> g
    boolean h(net.youmi.android.spot.a) -> h
net.youmi.android.spot.b -> net.youmi.android.spot.b:
    net.youmi.android.spot.a a -> a
    void run() -> run
net.youmi.android.spot.c -> net.youmi.android.spot.c:
    net.youmi.android.spot.a a -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
net.youmi.android.spot.d -> net.youmi.android.spot.d:
    net.youmi.android.spot.a a -> a
    void run() -> run
net.youmi.android.spot.e -> net.youmi.android.spot.e:
    net.youmi.android.spot.a a -> a
    void onClick(android.view.View) -> onClick
net.youmi.android.spot.f -> net.youmi.android.spot.f:
    void a(android.content.Context,int,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,long,int) -> a
    void a(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
net.youmi.android.spot.g -> net.youmi.android.spot.g:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    long e -> e
    android.content.Context f -> f
    void run() -> run
net.youmi.android.spot.h -> net.youmi.android.spot.h:
    net.youmi.android.spot.SplashView a -> a
    void run() -> run
net.youmi.android.spot.i -> net.youmi.android.spot.i:
    net.youmi.android.spot.SplashView a -> a
    void onClick(android.view.View) -> onClick
net.youmi.android.spot.j -> net.youmi.android.spot.j:
    java.lang.String a -> a
    void a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(android.net.Uri) -> a
net.youmi.android.spot.k -> net.youmi.android.spot.k:
    boolean a -> a
    android.content.Context b -> b
    net.youmi.android.spot.SpotManager c -> c
    net.youmi.android.spot.SpotDialogListener d -> d
    boolean e -> e
    java.lang.String a(java.lang.Void[]) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.youmi.android.spot.l -> net.youmi.android.spot.l:
    net.youmi.android.spot.SpotManager a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.youmi.android.spot.m -> net.youmi.android.spot.m:
    boolean a -> a
    net.youmi.android.spot.SpotDialogListener b -> b
    boolean c -> c
    net.youmi.android.spot.SpotManager d -> d
    void run() -> run
net.youmi.android.spot.n -> net.youmi.android.spot.n:
    net.youmi.android.spot.SpotManager a -> a
    void run() -> run
net.youmi.android.spot.o -> net.youmi.android.spot.o:
    net.youmi.android.spot.SpotManager a -> a
    void run() -> run
net.youmi.android.update.AppUpdateInfo -> net.youmi.android.update.AppUpdateInfo:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int getVersionCode() -> getVersionCode
    void a(int) -> a
    java.lang.String getVersionName() -> getVersionName
    void a(java.lang.String) -> a
    java.lang.String getUpdateTips() -> getUpdateTips
    void b(java.lang.String) -> b
    java.lang.String getUrl() -> getUrl
    void c(java.lang.String) -> c
net.youmi.android.update.CheckAppUpdateCallBack -> net.youmi.android.update.CheckAppUpdateCallBack:
    void onCheckAppUpdateFinish(net.youmi.android.update.AppUpdateInfo) -> onCheckAppUpdateFinish
net.youmi.android.update.a -> net.youmi.android.update.a:
    net.youmi.android.update.AppUpdateInfo a(android.content.Context) -> a
    net.youmi.android.update.AppUpdateInfo a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
net.youmi.android.update.b -> net.youmi.android.update.b:
    net.youmi.android.update.CheckAppUpdateCallBack a -> a
    android.content.Context b -> b
    void run() -> run
    net.youmi.android.update.CheckAppUpdateCallBack a(net.youmi.android.update.b) -> a
net.youmi.android.update.c -> net.youmi.android.update.c:
    net.youmi.android.update.AppUpdateInfo a -> a
    net.youmi.android.update.b b -> b
    void run() -> run
org.apache.commons.codec.BinaryDecoder -> org.apache.commons.codec.BinaryDecoder:
    byte[] decode(byte[]) -> decode
org.apache.commons.codec.BinaryEncoder -> org.apache.commons.codec.BinaryEncoder:
    byte[] encode(byte[]) -> encode
org.apache.commons.codec.CharEncoding -> org.apache.commons.codec.CharEncoding:
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String UTF_16 -> UTF_16
    java.lang.String UTF_16BE -> UTF_16BE
    java.lang.String UTF_16LE -> UTF_16LE
    java.lang.String UTF_8 -> UTF_8
org.apache.commons.codec.Charsets -> org.apache.commons.codec.Charsets:
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset UTF_16 -> UTF_16
    java.nio.charset.Charset UTF_16BE -> UTF_16BE
    java.nio.charset.Charset UTF_16LE -> UTF_16LE
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset toCharset(java.nio.charset.Charset) -> toCharset
    java.nio.charset.Charset toCharset(java.lang.String) -> toCharset
org.apache.commons.codec.Decoder -> org.apache.commons.codec.Decoder:
    java.lang.Object decode(java.lang.Object) -> decode
org.apache.commons.codec.DecoderException -> org.apache.commons.codec.DecoderException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.codec.Encoder -> org.apache.commons.codec.Encoder:
    java.lang.Object encode(java.lang.Object) -> encode
org.apache.commons.codec.EncoderException -> org.apache.commons.codec.EncoderException:
    long serialVersionUID -> serialVersionUID
org.apache.commons.codec.StringDecoder -> org.apache.commons.codec.StringDecoder:
    java.lang.String decode(java.lang.String) -> decode
org.apache.commons.codec.StringEncoder -> org.apache.commons.codec.StringEncoder:
    java.lang.String encode(java.lang.String) -> encode
org.apache.commons.codec.StringEncoderComparator -> org.apache.commons.codec.StringEncoderComparator:
    org.apache.commons.codec.StringEncoder stringEncoder -> stringEncoder
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.codec.binary.Base32 -> org.apache.commons.codec.binary.Base32:
    int BITS_PER_ENCODED_BYTE -> BITS_PER_ENCODED_BYTE
    int BYTES_PER_ENCODED_BLOCK -> BYTES_PER_ENCODED_BLOCK
    int BYTES_PER_UNENCODED_BLOCK -> BYTES_PER_UNENCODED_BLOCK
    byte[] CHUNK_SEPARATOR -> CHUNK_SEPARATOR
    byte[] DECODE_TABLE -> DECODE_TABLE
    byte[] ENCODE_TABLE -> ENCODE_TABLE
    byte[] HEX_DECODE_TABLE -> HEX_DECODE_TABLE
    byte[] HEX_ENCODE_TABLE -> HEX_ENCODE_TABLE
    int MASK_5BITS -> MASK_5BITS
    int decodeSize -> decodeSize
    byte[] decodeTable -> decodeTable
    int encodeSize -> encodeSize
    byte[] encodeTable -> encodeTable
    byte[] lineSeparator -> lineSeparator
    void decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context) -> decode
    void encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context) -> encode
    boolean isInAlphabet(byte) -> isInAlphabet
org.apache.commons.codec.binary.Base32InputStream -> org.apache.commons.codec.binary.Base32InputStream:
org.apache.commons.codec.binary.Base32OutputStream -> org.apache.commons.codec.binary.Base32OutputStream:
org.apache.commons.codec.binary.Base64 -> org.apache.commons.codec.binary.Base64:
    int BITS_PER_ENCODED_BYTE -> BITS_PER_ENCODED_BYTE
    int BYTES_PER_UNENCODED_BLOCK -> BYTES_PER_UNENCODED_BLOCK
    int BYTES_PER_ENCODED_BLOCK -> BYTES_PER_ENCODED_BLOCK
    byte[] CHUNK_SEPARATOR -> CHUNK_SEPARATOR
    byte[] STANDARD_ENCODE_TABLE -> STANDARD_ENCODE_TABLE
    byte[] URL_SAFE_ENCODE_TABLE -> URL_SAFE_ENCODE_TABLE
    byte[] DECODE_TABLE -> DECODE_TABLE
    int MASK_6BITS -> MASK_6BITS
    byte[] encodeTable -> encodeTable
    byte[] decodeTable -> decodeTable
    byte[] lineSeparator -> lineSeparator
    int decodeSize -> decodeSize
    int encodeSize -> encodeSize
    boolean isUrlSafe() -> isUrlSafe
    void encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context) -> encode
    void decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context) -> decode
    boolean isArrayByteBase64(byte[]) -> isArrayByteBase64
    boolean isBase64(byte) -> isBase64
    boolean isBase64(java.lang.String) -> isBase64
    boolean isBase64(byte[]) -> isBase64
    byte[] encodeBase64(byte[]) -> encodeBase64
    java.lang.String encodeBase64String(byte[]) -> encodeBase64String
    byte[] encodeBase64URLSafe(byte[]) -> encodeBase64URLSafe
    java.lang.String encodeBase64URLSafeString(byte[]) -> encodeBase64URLSafeString
    byte[] encodeBase64Chunked(byte[]) -> encodeBase64Chunked
    byte[] encodeBase64(byte[],boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean,int) -> encodeBase64
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    byte[] decodeBase64(byte[]) -> decodeBase64
    java.math.BigInteger decodeInteger(byte[]) -> decodeInteger
    byte[] encodeInteger(java.math.BigInteger) -> encodeInteger
    byte[] toIntegerBytes(java.math.BigInteger) -> toIntegerBytes
    boolean isInAlphabet(byte) -> isInAlphabet
org.apache.commons.codec.binary.Base64InputStream -> org.apache.commons.codec.binary.Base64InputStream:
org.apache.commons.codec.binary.Base64OutputStream -> org.apache.commons.codec.binary.Base64OutputStream:
org.apache.commons.codec.binary.BaseNCodec -> org.apache.commons.codec.binary.BaseNCodec:
    int EOF -> EOF
    int MIME_CHUNK_SIZE -> MIME_CHUNK_SIZE
    int PEM_CHUNK_SIZE -> PEM_CHUNK_SIZE
    int DEFAULT_BUFFER_RESIZE_FACTOR -> DEFAULT_BUFFER_RESIZE_FACTOR
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int MASK_8BITS -> MASK_8BITS
    byte PAD_DEFAULT -> PAD_DEFAULT
    byte PAD -> PAD
    int unencodedBlockSize -> unencodedBlockSize
    int encodedBlockSize -> encodedBlockSize
    int lineLength -> lineLength
    int chunkSeparatorLength -> chunkSeparatorLength
    boolean hasData(org.apache.commons.codec.binary.BaseNCodec$Context) -> hasData
    int available(org.apache.commons.codec.binary.BaseNCodec$Context) -> available
    int getDefaultBufferSize() -> getDefaultBufferSize
    byte[] resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context) -> resizeBuffer
    byte[] ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context) -> ensureBufferSize
    int readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context) -> readResults
    boolean isWhiteSpace(byte) -> isWhiteSpace
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encodeToString(byte[]) -> encodeToString
    java.lang.String encodeAsString(byte[]) -> encodeAsString
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] decode(java.lang.String) -> decode
    byte[] decode(byte[]) -> decode
    byte[] encode(byte[]) -> encode
    void encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context) -> encode
    void decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context) -> decode
    boolean isInAlphabet(byte) -> isInAlphabet
    boolean isInAlphabet(byte[],boolean) -> isInAlphabet
    boolean isInAlphabet(java.lang.String) -> isInAlphabet
    boolean containsAlphabetOrPad(byte[]) -> containsAlphabetOrPad
    long getEncodedLength(byte[]) -> getEncodedLength
org.apache.commons.codec.binary.BaseNCodec$Context -> org.apache.commons.codec.binary.BaseNCodec$Context:
    int ibitWorkArea -> ibitWorkArea
    long lbitWorkArea -> lbitWorkArea
    byte[] buffer -> buffer
    int pos -> pos
    int readPos -> readPos
    boolean eof -> eof
    int currentLinePos -> currentLinePos
    int modulus -> modulus
    java.lang.String toString() -> toString
org.apache.commons.codec.binary.BaseNCodecInputStream -> org.apache.commons.codec.binary.BaseNCodecInputStream:
    org.apache.commons.codec.binary.BaseNCodec baseNCodec -> baseNCodec
    boolean doEncode -> doEncode
    byte[] singleByte -> singleByte
    org.apache.commons.codec.binary.BaseNCodec$Context context -> context
    int available() -> available
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
org.apache.commons.codec.binary.BaseNCodecOutputStream -> org.apache.commons.codec.binary.BaseNCodecOutputStream:
    boolean doEncode -> doEncode
    org.apache.commons.codec.binary.BaseNCodec baseNCodec -> baseNCodec
    byte[] singleByte -> singleByte
    org.apache.commons.codec.binary.BaseNCodec$Context context -> context
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush(boolean) -> flush
    void flush() -> flush
    void close() -> close
org.apache.commons.codec.binary.BinaryCodec -> org.apache.commons.codec.binary.BinaryCodec:
    char[] EMPTY_CHAR_ARRAY -> EMPTY_CHAR_ARRAY
    byte[] EMPTY_BYTE_ARRAY -> EMPTY_BYTE_ARRAY
    int BIT_0 -> BIT_0
    int BIT_1 -> BIT_1
    int BIT_2 -> BIT_2
    int BIT_3 -> BIT_3
    int BIT_4 -> BIT_4
    int BIT_5 -> BIT_5
    int BIT_6 -> BIT_6
    int BIT_7 -> BIT_7
    int[] BITS -> BITS
    byte[] encode(byte[]) -> encode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] decode(byte[]) -> decode
    byte[] toByteArray(java.lang.String) -> toByteArray
    byte[] fromAscii(char[]) -> fromAscii
    byte[] fromAscii(byte[]) -> fromAscii
    boolean isEmpty(byte[]) -> isEmpty
    byte[] toAsciiBytes(byte[]) -> toAsciiBytes
    char[] toAsciiChars(byte[]) -> toAsciiChars
    java.lang.String toAsciiString(byte[]) -> toAsciiString
org.apache.commons.codec.binary.Hex -> org.apache.commons.codec.binary.Hex:
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String DEFAULT_CHARSET_NAME -> DEFAULT_CHARSET_NAME
    char[] DIGITS_LOWER -> DIGITS_LOWER
    char[] DIGITS_UPPER -> DIGITS_UPPER
    java.nio.charset.Charset charset -> charset
    byte[] decodeHex(char[]) -> decodeHex
    char[] encodeHex(byte[]) -> encodeHex
    char[] encodeHex(byte[],boolean) -> encodeHex
    char[] encodeHex(byte[],char[]) -> encodeHex
    java.lang.String encodeHexString(byte[]) -> encodeHexString
    int toDigit(char,int) -> toDigit
    byte[] decode(byte[]) -> decode
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] encode(byte[]) -> encode
    java.lang.Object encode(java.lang.Object) -> encode
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getCharsetName() -> getCharsetName
    java.lang.String toString() -> toString
org.apache.commons.codec.binary.StringUtils -> org.apache.commons.codec.binary.StringUtils:
    byte[] getBytes(java.lang.String,java.nio.charset.Charset) -> getBytes
    byte[] getBytesIso8859_1(java.lang.String) -> getBytesIso8859_1
    byte[] getBytesUnchecked(java.lang.String,java.lang.String) -> getBytesUnchecked
    byte[] getBytesUsAscii(java.lang.String) -> getBytesUsAscii
    byte[] getBytesUtf16(java.lang.String) -> getBytesUtf16
    byte[] getBytesUtf16Be(java.lang.String) -> getBytesUtf16Be
    byte[] getBytesUtf16Le(java.lang.String) -> getBytesUtf16Le
    byte[] getBytesUtf8(java.lang.String) -> getBytesUtf8
    java.lang.IllegalStateException newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException) -> newIllegalStateException
    java.lang.String newString(byte[],java.nio.charset.Charset) -> newString
    java.lang.String newString(byte[],java.lang.String) -> newString
    java.lang.String newStringIso8859_1(byte[]) -> newStringIso8859_1
    java.lang.String newStringUsAscii(byte[]) -> newStringUsAscii
    java.lang.String newStringUtf16(byte[]) -> newStringUtf16
    java.lang.String newStringUtf16Be(byte[]) -> newStringUtf16Be
    java.lang.String newStringUtf16Le(byte[]) -> newStringUtf16Le
    java.lang.String newStringUtf8(byte[]) -> newStringUtf8
org.apache.commons.codec.digest.B64 -> org.apache.commons.codec.digest.B64:
    java.lang.String B64T -> B64T
    void b64from24bit(byte,byte,byte,int,java.lang.StringBuilder) -> b64from24bit
    java.lang.String getRandomSalt(int) -> getRandomSalt
org.apache.commons.codec.digest.Crypt -> org.apache.commons.codec.digest.Crypt:
    java.lang.String crypt(byte[]) -> crypt
    java.lang.String crypt(byte[],java.lang.String) -> crypt
    java.lang.String crypt(java.lang.String) -> crypt
    java.lang.String crypt(java.lang.String,java.lang.String) -> crypt
org.apache.commons.codec.digest.DigestUtils -> org.apache.commons.codec.digest.DigestUtils:
    int STREAM_BUFFER_LENGTH -> STREAM_BUFFER_LENGTH
    byte[] digest(java.security.MessageDigest,java.io.InputStream) -> digest
    java.security.MessageDigest getDigest(java.lang.String) -> getDigest
    java.security.MessageDigest getMd2Digest() -> getMd2Digest
    java.security.MessageDigest getMd5Digest() -> getMd5Digest
    java.security.MessageDigest getSha1Digest() -> getSha1Digest
    java.security.MessageDigest getSha256Digest() -> getSha256Digest
    java.security.MessageDigest getSha384Digest() -> getSha384Digest
    java.security.MessageDigest getSha512Digest() -> getSha512Digest
    java.security.MessageDigest getShaDigest() -> getShaDigest
    byte[] md2(byte[]) -> md2
    byte[] md2(java.io.InputStream) -> md2
    byte[] md2(java.lang.String) -> md2
    java.lang.String md2Hex(byte[]) -> md2Hex
    java.lang.String md2Hex(java.io.InputStream) -> md2Hex
    java.lang.String md2Hex(java.lang.String) -> md2Hex
    byte[] md5(byte[]) -> md5
    byte[] md5(java.io.InputStream) -> md5
    byte[] md5(java.lang.String) -> md5
    java.lang.String md5Hex(byte[]) -> md5Hex
    java.lang.String md5Hex(java.io.InputStream) -> md5Hex
    java.lang.String md5Hex(java.lang.String) -> md5Hex
    byte[] sha(byte[]) -> sha
    byte[] sha(java.io.InputStream) -> sha
    byte[] sha(java.lang.String) -> sha
    byte[] sha1(byte[]) -> sha1
    byte[] sha1(java.io.InputStream) -> sha1
    byte[] sha1(java.lang.String) -> sha1
    java.lang.String sha1Hex(byte[]) -> sha1Hex
    java.lang.String sha1Hex(java.io.InputStream) -> sha1Hex
    java.lang.String sha1Hex(java.lang.String) -> sha1Hex
    byte[] sha256(byte[]) -> sha256
    byte[] sha256(java.io.InputStream) -> sha256
    byte[] sha256(java.lang.String) -> sha256
    java.lang.String sha256Hex(byte[]) -> sha256Hex
    java.lang.String sha256Hex(java.io.InputStream) -> sha256Hex
    java.lang.String sha256Hex(java.lang.String) -> sha256Hex
    byte[] sha384(byte[]) -> sha384
    byte[] sha384(java.io.InputStream) -> sha384
    byte[] sha384(java.lang.String) -> sha384
    java.lang.String sha384Hex(byte[]) -> sha384Hex
    java.lang.String sha384Hex(java.io.InputStream) -> sha384Hex
    java.lang.String sha384Hex(java.lang.String) -> sha384Hex
    byte[] sha512(byte[]) -> sha512
    byte[] sha512(java.io.InputStream) -> sha512
    byte[] sha512(java.lang.String) -> sha512
    java.lang.String sha512Hex(byte[]) -> sha512Hex
    java.lang.String sha512Hex(java.io.InputStream) -> sha512Hex
    java.lang.String sha512Hex(java.lang.String) -> sha512Hex
    java.lang.String shaHex(byte[]) -> shaHex
    java.lang.String shaHex(java.io.InputStream) -> shaHex
    java.lang.String shaHex(java.lang.String) -> shaHex
    java.security.MessageDigest updateDigest(java.security.MessageDigest,byte[]) -> updateDigest
    java.security.MessageDigest updateDigest(java.security.MessageDigest,java.io.InputStream) -> updateDigest
    java.security.MessageDigest updateDigest(java.security.MessageDigest,java.lang.String) -> updateDigest
org.apache.commons.codec.digest.Md5Crypt -> org.apache.commons.codec.digest.Md5Crypt:
    java.lang.String APR1_PREFIX -> APR1_PREFIX
    int BLOCKSIZE -> BLOCKSIZE
    java.lang.String MD5_PREFIX -> MD5_PREFIX
    int ROUNDS -> ROUNDS
    java.lang.String apr1Crypt(byte[]) -> apr1Crypt
    java.lang.String apr1Crypt(byte[],java.lang.String) -> apr1Crypt
    java.lang.String apr1Crypt(java.lang.String) -> apr1Crypt
    java.lang.String apr1Crypt(java.lang.String,java.lang.String) -> apr1Crypt
    java.lang.String md5Crypt(byte[]) -> md5Crypt
    java.lang.String md5Crypt(byte[],java.lang.String) -> md5Crypt
    java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String) -> md5Crypt
org.apache.commons.codec.digest.MessageDigestAlgorithms -> org.apache.commons.codec.digest.MessageDigestAlgorithms:
    java.lang.String MD2 -> MD2
    java.lang.String MD5 -> MD5
    java.lang.String SHA_1 -> SHA_1
    java.lang.String SHA_256 -> SHA_256
    java.lang.String SHA_384 -> SHA_384
    java.lang.String SHA_512 -> SHA_512
org.apache.commons.codec.digest.Sha2Crypt -> org.apache.commons.codec.digest.Sha2Crypt:
    int ROUNDS_DEFAULT -> ROUNDS_DEFAULT
    int ROUNDS_MAX -> ROUNDS_MAX
    int ROUNDS_MIN -> ROUNDS_MIN
    java.lang.String ROUNDS_PREFIX -> ROUNDS_PREFIX
    int SHA256_BLOCKSIZE -> SHA256_BLOCKSIZE
    java.lang.String SHA256_PREFIX -> SHA256_PREFIX
    int SHA512_BLOCKSIZE -> SHA512_BLOCKSIZE
    java.lang.String SHA512_PREFIX -> SHA512_PREFIX
    java.util.regex.Pattern SALT_PATTERN -> SALT_PATTERN
    java.lang.String sha256Crypt(byte[]) -> sha256Crypt
    java.lang.String sha256Crypt(byte[],java.lang.String) -> sha256Crypt
    java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String) -> sha2Crypt
    java.lang.String sha512Crypt(byte[]) -> sha512Crypt
    java.lang.String sha512Crypt(byte[],java.lang.String) -> sha512Crypt
org.apache.commons.codec.digest.UnixCrypt -> org.apache.commons.codec.digest.UnixCrypt:
    int[] CON_SALT -> CON_SALT
    int[] COV2CHAR -> COV2CHAR
    char[] SALT_CHARS -> SALT_CHARS
    boolean[] SHIFT2 -> SHIFT2
    int[][] SKB -> SKB
    int[][] SPTRANS -> SPTRANS
    java.lang.String crypt(byte[]) -> crypt
    java.lang.String crypt(byte[],java.lang.String) -> crypt
    java.lang.String crypt(java.lang.String) -> crypt
    java.lang.String crypt(java.lang.String,java.lang.String) -> crypt
    int[] body(int[],int,int) -> body
    int byteToUnsigned(byte) -> byteToUnsigned
    int dEncrypt(int,int,int,int,int,int[]) -> dEncrypt
    int[] desSetKey(byte[]) -> desSetKey
    int fourBytesToInt(byte[],int) -> fourBytesToInt
    int hPermOp(int,int,int) -> hPermOp
    void intToFourBytes(int,byte[],int) -> intToFourBytes
    void permOp(int,int,int,int,int[]) -> permOp
org.apache.commons.codec.language.AbstractCaverphone -> org.apache.commons.codec.language.AbstractCaverphone:
    java.lang.Object encode(java.lang.Object) -> encode
    boolean isEncodeEqual(java.lang.String,java.lang.String) -> isEncodeEqual
org.apache.commons.codec.language.Caverphone -> org.apache.commons.codec.language.Caverphone:
    org.apache.commons.codec.language.Caverphone2 encoder -> encoder
    java.lang.String caverphone(java.lang.String) -> caverphone
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isCaverphoneEqual(java.lang.String,java.lang.String) -> isCaverphoneEqual
org.apache.commons.codec.language.Caverphone1 -> org.apache.commons.codec.language.Caverphone1:
    java.lang.String SIX_1 -> SIX_1
    java.lang.String encode(java.lang.String) -> encode
org.apache.commons.codec.language.Caverphone2 -> org.apache.commons.codec.language.Caverphone2:
    java.lang.String TEN_1 -> TEN_1
    java.lang.String encode(java.lang.String) -> encode
org.apache.commons.codec.language.ColognePhonetic -> org.apache.commons.codec.language.ColognePhonetic:
    char[] AEIJOUY -> AEIJOUY
    char[] SCZ -> SCZ
    char[] WFPV -> WFPV
    char[] GKQ -> GKQ
    char[] CKQ -> CKQ
    char[] AHKLOQRUX -> AHKLOQRUX
    char[] SZ -> SZ
    char[] AHOUKQX -> AHOUKQX
    char[] TDX -> TDX
    char[][] PREPROCESS_MAP -> PREPROCESS_MAP
    boolean arrayContains(char[],char) -> arrayContains
    java.lang.String colognePhonetic(java.lang.String) -> colognePhonetic
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isEncodeEqual(java.lang.String,java.lang.String) -> isEncodeEqual
    java.lang.String preprocess(java.lang.String) -> preprocess
org.apache.commons.codec.language.ColognePhonetic$CologneBuffer -> org.apache.commons.codec.language.ColognePhonetic$CologneBuffer:
    char[] data -> data
    int length -> length
    org.apache.commons.codec.language.ColognePhonetic this$0 -> this$0
    char[] copyData(int,int) -> copyData
    int length() -> length
    java.lang.String toString() -> toString
org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer -> org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer:
    org.apache.commons.codec.language.ColognePhonetic this$0 -> this$0
    void addLeft(char) -> addLeft
    char[] copyData(int,int) -> copyData
    char getNextChar() -> getNextChar
    int getNextPos() -> getNextPos
    char removeNext() -> removeNext
org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer -> org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer:
    org.apache.commons.codec.language.ColognePhonetic this$0 -> this$0
    void addRight(char) -> addRight
    char[] copyData(int,int) -> copyData
org.apache.commons.codec.language.DoubleMetaphone -> org.apache.commons.codec.language.DoubleMetaphone:
    java.lang.String VOWELS -> VOWELS
    java.lang.String[] SILENT_START -> SILENT_START
    java.lang.String[] L_R_N_M_B_H_F_V_W_SPACE -> L_R_N_M_B_H_F_V_W_SPACE
    java.lang.String[] ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER -> ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER
    java.lang.String[] L_T_K_S_N_M_B_Z -> L_T_K_S_N_M_B_Z
    int maxCodeLen -> maxCodeLen
    java.lang.String doubleMetaphone(java.lang.String) -> doubleMetaphone
    java.lang.String doubleMetaphone(java.lang.String,boolean) -> doubleMetaphone
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String) -> isDoubleMetaphoneEqual
    boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String,boolean) -> isDoubleMetaphoneEqual
    int getMaxCodeLen() -> getMaxCodeLen
    void setMaxCodeLen(int) -> setMaxCodeLen
    int handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleAEIOUY
    int handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleC
    int handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleCC
    int handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleCH
    int handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleD
    int handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleG
    int handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleGH
    int handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleH
    int handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleJ
    int handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleL
    int handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleP
    int handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleR
    int handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleS
    int handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleSC
    int handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleT
    int handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleW
    int handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int) -> handleX
    int handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> handleZ
    boolean conditionC0(java.lang.String,int) -> conditionC0
    boolean conditionCH0(java.lang.String,int) -> conditionCH0
    boolean conditionCH1(java.lang.String,int) -> conditionCH1
    boolean conditionL0(java.lang.String,int) -> conditionL0
    boolean conditionM0(java.lang.String,int) -> conditionM0
    boolean isSlavoGermanic(java.lang.String) -> isSlavoGermanic
    boolean isVowel(char) -> isVowel
    boolean isSilentStart(java.lang.String) -> isSilentStart
    java.lang.String cleanInput(java.lang.String) -> cleanInput
    char charAt(java.lang.String,int) -> charAt
    boolean contains(java.lang.String,int,int,java.lang.String[]) -> contains
org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult -> org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult:
    java.lang.StringBuilder primary -> primary
    java.lang.StringBuilder alternate -> alternate
    int maxLength -> maxLength
    org.apache.commons.codec.language.DoubleMetaphone this$0 -> this$0
    void append(char) -> append
    void append(char,char) -> append
    void appendPrimary(char) -> appendPrimary
    void appendAlternate(char) -> appendAlternate
    void append(java.lang.String) -> append
    void append(java.lang.String,java.lang.String) -> append
    void appendPrimary(java.lang.String) -> appendPrimary
    void appendAlternate(java.lang.String) -> appendAlternate
    java.lang.String getPrimary() -> getPrimary
    java.lang.String getAlternate() -> getAlternate
    boolean isComplete() -> isComplete
org.apache.commons.codec.language.MatchRatingApproachEncoder -> org.apache.commons.codec.language.MatchRatingApproachEncoder:
    java.lang.String SPACE -> SPACE
    java.lang.String EMPTY -> EMPTY
    int ONE -> ONE
    int TWO -> TWO
    int THREE -> THREE
    int FOUR -> FOUR
    int FIVE -> FIVE
    int SIX -> SIX
    int SEVEN -> SEVEN
    int EIGHT -> EIGHT
    int ELEVEN -> ELEVEN
    int TWELVE -> TWELVE
    java.lang.String PLAIN_ASCII -> PLAIN_ASCII
    java.lang.String UNICODE -> UNICODE
    java.lang.String[] DOUBLE_CONSONANT -> DOUBLE_CONSONANT
    java.lang.String cleanName(java.lang.String) -> cleanName
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String getFirst3Last3(java.lang.String) -> getFirst3Last3
    int getMinRating(int) -> getMinRating
    boolean isEncodeEquals(java.lang.String,java.lang.String) -> isEncodeEquals
    boolean isVowel(java.lang.String) -> isVowel
    int leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String) -> leftToRightThenRightToLeftProcessing
    java.lang.String removeAccents(java.lang.String) -> removeAccents
    java.lang.String removeDoubleConsonants(java.lang.String) -> removeDoubleConsonants
    java.lang.String removeVowels(java.lang.String) -> removeVowels
org.apache.commons.codec.language.Metaphone -> org.apache.commons.codec.language.Metaphone:
    java.lang.String VOWELS -> VOWELS
    java.lang.String FRONTV -> FRONTV
    java.lang.String VARSON -> VARSON
    int maxCodeLen -> maxCodeLen
    java.lang.String metaphone(java.lang.String) -> metaphone
    boolean isVowel(java.lang.StringBuilder,int) -> isVowel
    boolean isPreviousChar(java.lang.StringBuilder,int,char) -> isPreviousChar
    boolean isNextChar(java.lang.StringBuilder,int,char) -> isNextChar
    boolean regionMatch(java.lang.StringBuilder,int,java.lang.String) -> regionMatch
    boolean isLastChar(int,int) -> isLastChar
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isMetaphoneEqual(java.lang.String,java.lang.String) -> isMetaphoneEqual
    int getMaxCodeLen() -> getMaxCodeLen
    void setMaxCodeLen(int) -> setMaxCodeLen
org.apache.commons.codec.language.Nysiis -> org.apache.commons.codec.language.Nysiis:
    char[] CHARS_A -> CHARS_A
    char[] CHARS_AF -> CHARS_AF
    char[] CHARS_C -> CHARS_C
    char[] CHARS_FF -> CHARS_FF
    char[] CHARS_G -> CHARS_G
    char[] CHARS_N -> CHARS_N
    char[] CHARS_NN -> CHARS_NN
    char[] CHARS_S -> CHARS_S
    char[] CHARS_SSS -> CHARS_SSS
    java.util.regex.Pattern PAT_MAC -> PAT_MAC
    java.util.regex.Pattern PAT_KN -> PAT_KN
    java.util.regex.Pattern PAT_K -> PAT_K
    java.util.regex.Pattern PAT_PH_PF -> PAT_PH_PF
    java.util.regex.Pattern PAT_SCH -> PAT_SCH
    java.util.regex.Pattern PAT_EE_IE -> PAT_EE_IE
    java.util.regex.Pattern PAT_DT_ETC -> PAT_DT_ETC
    char SPACE -> SPACE
    int TRUE_LENGTH -> TRUE_LENGTH
    boolean strict -> strict
    boolean isVowel(char) -> isVowel
    char[] transcodeRemaining(char,char,char,char) -> transcodeRemaining
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isStrict() -> isStrict
    java.lang.String nysiis(java.lang.String) -> nysiis
org.apache.commons.codec.language.RefinedSoundex -> org.apache.commons.codec.language.RefinedSoundex:
    java.lang.String US_ENGLISH_MAPPING_STRING -> US_ENGLISH_MAPPING_STRING
    char[] US_ENGLISH_MAPPING -> US_ENGLISH_MAPPING
    char[] soundexMapping -> soundexMapping
    org.apache.commons.codec.language.RefinedSoundex US_ENGLISH -> US_ENGLISH
    int difference(java.lang.String,java.lang.String) -> difference
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    char getMappingCode(char) -> getMappingCode
    java.lang.String soundex(java.lang.String) -> soundex
org.apache.commons.codec.language.Soundex -> org.apache.commons.codec.language.Soundex:
    java.lang.String US_ENGLISH_MAPPING_STRING -> US_ENGLISH_MAPPING_STRING
    char[] US_ENGLISH_MAPPING -> US_ENGLISH_MAPPING
    org.apache.commons.codec.language.Soundex US_ENGLISH -> US_ENGLISH
    int maxLength -> maxLength
    char[] soundexMapping -> soundexMapping
    int difference(java.lang.String,java.lang.String) -> difference
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    char getMappingCode(java.lang.String,int) -> getMappingCode
    int getMaxLength() -> getMaxLength
    char[] getSoundexMapping() -> getSoundexMapping
    char map(char) -> map
    void setMaxLength(int) -> setMaxLength
    java.lang.String soundex(java.lang.String) -> soundex
org.apache.commons.codec.language.SoundexUtils -> org.apache.commons.codec.language.SoundexUtils:
    java.lang.String clean(java.lang.String) -> clean
    int difference(org.apache.commons.codec.StringEncoder,java.lang.String,java.lang.String) -> difference
    int differenceEncoded(java.lang.String,java.lang.String) -> differenceEncoded
org.apache.commons.codec.language.bm.BeiderMorseEncoder -> org.apache.commons.codec.language.bm.BeiderMorseEncoder:
    org.apache.commons.codec.language.bm.PhoneticEngine engine -> engine
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    org.apache.commons.codec.language.bm.NameType getNameType() -> getNameType
    org.apache.commons.codec.language.bm.RuleType getRuleType() -> getRuleType
    boolean isConcat() -> isConcat
    void setConcat(boolean) -> setConcat
    void setNameType(org.apache.commons.codec.language.bm.NameType) -> setNameType
    void setRuleType(org.apache.commons.codec.language.bm.RuleType) -> setRuleType
    void setMaxPhonemes(int) -> setMaxPhonemes
org.apache.commons.codec.language.bm.Lang -> org.apache.commons.codec.language.bm.Lang:
    java.util.Map Langs -> Langs
    java.lang.String LANGUAGE_RULES_RN -> LANGUAGE_RULES_RN
    org.apache.commons.codec.language.bm.Languages languages -> languages
    java.util.List rules -> rules
    org.apache.commons.codec.language.bm.Lang instance(org.apache.commons.codec.language.bm.NameType) -> instance
    org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages) -> loadFromResource
    java.lang.String guessLanguage(java.lang.String) -> guessLanguage
    org.apache.commons.codec.language.bm.Languages$LanguageSet guessLanguages(java.lang.String) -> guessLanguages
org.apache.commons.codec.language.bm.Lang$1 -> org.apache.commons.codec.language.bm.Lang$1:
org.apache.commons.codec.language.bm.Lang$LangRule -> org.apache.commons.codec.language.bm.Lang$LangRule:
    boolean acceptOnMatch -> acceptOnMatch
    java.util.Set languages -> languages
    java.util.regex.Pattern pattern -> pattern
    boolean matches(java.lang.String) -> matches
    boolean access$100(org.apache.commons.codec.language.bm.Lang$LangRule) -> access$100
    java.util.Set access$200(org.apache.commons.codec.language.bm.Lang$LangRule) -> access$200
org.apache.commons.codec.language.bm.Languages -> org.apache.commons.codec.language.bm.Languages:
    java.lang.String ANY -> ANY
    java.util.Map LANGUAGES -> LANGUAGES
    java.util.Set languages -> languages
    org.apache.commons.codec.language.bm.Languages$LanguageSet NO_LANGUAGES -> NO_LANGUAGES
    org.apache.commons.codec.language.bm.Languages$LanguageSet ANY_LANGUAGE -> ANY_LANGUAGE
    org.apache.commons.codec.language.bm.Languages getInstance(org.apache.commons.codec.language.bm.NameType) -> getInstance
    org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String) -> getInstance
    java.lang.String langResourceName(org.apache.commons.codec.language.bm.NameType) -> langResourceName
    java.util.Set getLanguages() -> getLanguages
org.apache.commons.codec.language.bm.Languages$1 -> org.apache.commons.codec.language.bm.Languages$1:
    boolean contains(java.lang.String) -> contains
    java.lang.String getAny() -> getAny
    boolean isEmpty() -> isEmpty
    boolean isSingleton() -> isSingleton
    org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet) -> restrictTo
    java.lang.String toString() -> toString
org.apache.commons.codec.language.bm.Languages$2 -> org.apache.commons.codec.language.bm.Languages$2:
    boolean contains(java.lang.String) -> contains
    java.lang.String getAny() -> getAny
    boolean isEmpty() -> isEmpty
    boolean isSingleton() -> isSingleton
    org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet) -> restrictTo
    java.lang.String toString() -> toString
org.apache.commons.codec.language.bm.Languages$LanguageSet -> org.apache.commons.codec.language.bm.Languages$LanguageSet:
    org.apache.commons.codec.language.bm.Languages$LanguageSet from(java.util.Set) -> from
    boolean contains(java.lang.String) -> contains
    java.lang.String getAny() -> getAny
    boolean isEmpty() -> isEmpty
    boolean isSingleton() -> isSingleton
    org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet) -> restrictTo
org.apache.commons.codec.language.bm.Languages$SomeLanguages -> org.apache.commons.codec.language.bm.Languages$SomeLanguages:
    java.util.Set languages -> languages
    boolean contains(java.lang.String) -> contains
    java.lang.String getAny() -> getAny
    java.util.Set getLanguages() -> getLanguages
    boolean isEmpty() -> isEmpty
    boolean isSingleton() -> isSingleton
    org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet) -> restrictTo
    java.lang.String toString() -> toString
org.apache.commons.codec.language.bm.NameType -> org.apache.commons.codec.language.bm.NameType:
    org.apache.commons.codec.language.bm.NameType ASHKENAZI -> ASHKENAZI
    org.apache.commons.codec.language.bm.NameType GENERIC -> GENERIC
    org.apache.commons.codec.language.bm.NameType SEPHARDIC -> SEPHARDIC
    java.lang.String name -> name
    org.apache.commons.codec.language.bm.NameType[] $VALUES -> $VALUES
    org.apache.commons.codec.language.bm.NameType[] values() -> values
    org.apache.commons.codec.language.bm.NameType valueOf(java.lang.String) -> valueOf
    java.lang.String getName() -> getName
org.apache.commons.codec.language.bm.PhoneticEngine -> org.apache.commons.codec.language.bm.PhoneticEngine:
    java.util.Map NAME_PREFIXES -> NAME_PREFIXES
    int DEFAULT_MAX_PHONEMES -> DEFAULT_MAX_PHONEMES
    org.apache.commons.codec.language.bm.Lang lang -> lang
    org.apache.commons.codec.language.bm.NameType nameType -> nameType
    org.apache.commons.codec.language.bm.RuleType ruleType -> ruleType
    boolean concat -> concat
    int maxPhonemes -> maxPhonemes
    java.lang.String join(java.lang.Iterable,java.lang.String) -> join
    org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map) -> applyFinalRules
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet) -> encode
    org.apache.commons.codec.language.bm.Lang getLang() -> getLang
    org.apache.commons.codec.language.bm.NameType getNameType() -> getNameType
    org.apache.commons.codec.language.bm.RuleType getRuleType() -> getRuleType
    boolean isConcat() -> isConcat
    int getMaxPhonemes() -> getMaxPhonemes
org.apache.commons.codec.language.bm.PhoneticEngine$1 -> org.apache.commons.codec.language.bm.PhoneticEngine$1:
    int[] $SwitchMap$org$apache$commons$codec$language$bm$NameType -> $SwitchMap$org$apache$commons$codec$language$bm$NameType
org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder -> org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder:
    java.util.Set phonemes -> phonemes
    org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder empty(org.apache.commons.codec.language.bm.Languages$LanguageSet) -> empty
    void append(java.lang.CharSequence) -> append
    void apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int) -> apply
    java.util.Set getPhonemes() -> getPhonemes
    java.lang.String makeString() -> makeString
org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication -> org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication:
    java.util.Map finalRules -> finalRules
    java.lang.CharSequence input -> input
    org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder phonemeBuilder -> phonemeBuilder
    int i -> i
    int maxPhonemes -> maxPhonemes
    boolean found -> found
    int getI() -> getI
    org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder getPhonemeBuilder() -> getPhonemeBuilder
    org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication invoke() -> invoke
    boolean isFound() -> isFound
org.apache.commons.codec.language.bm.ResourceConstants -> org.apache.commons.codec.language.bm.ResourceConstants:
    java.lang.String CMT -> CMT
    java.lang.String ENCODING -> ENCODING
    java.lang.String EXT_CMT_END -> EXT_CMT_END
    java.lang.String EXT_CMT_START -> EXT_CMT_START
org.apache.commons.codec.language.bm.Rule -> org.apache.commons.codec.language.bm.Rule:
    org.apache.commons.codec.language.bm.Rule$RPattern ALL_STRINGS_RMATCHER -> ALL_STRINGS_RMATCHER
    java.lang.String ALL -> ALL
    java.lang.String DOUBLE_QUOTE -> DOUBLE_QUOTE
    java.lang.String HASH_INCLUDE -> HASH_INCLUDE
    java.util.Map RULES -> RULES
    org.apache.commons.codec.language.bm.Rule$RPattern lContext -> lContext
    java.lang.String pattern -> pattern
    org.apache.commons.codec.language.bm.Rule$PhonemeExpr phoneme -> phoneme
    org.apache.commons.codec.language.bm.Rule$RPattern rContext -> rContext
    boolean contains(java.lang.CharSequence,char) -> contains
    java.lang.String createResourceName(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String) -> createResourceName
    java.util.Scanner createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String) -> createScanner
    java.util.Scanner createScanner(java.lang.String) -> createScanner
    boolean endsWith(java.lang.CharSequence,java.lang.CharSequence) -> endsWith
    java.util.List getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages$LanguageSet) -> getInstance
    java.util.List getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String) -> getInstance
    java.util.Map getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages$LanguageSet) -> getInstanceMap
    java.util.Map getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String) -> getInstanceMap
    org.apache.commons.codec.language.bm.Rule$Phoneme parsePhoneme(java.lang.String) -> parsePhoneme
    org.apache.commons.codec.language.bm.Rule$PhonemeExpr parsePhonemeExpr(java.lang.String) -> parsePhonemeExpr
    java.util.Map parseRules(java.util.Scanner,java.lang.String) -> parseRules
    org.apache.commons.codec.language.bm.Rule$RPattern pattern(java.lang.String) -> pattern
    boolean startsWith(java.lang.CharSequence,java.lang.CharSequence) -> startsWith
    java.lang.String stripQuotes(java.lang.String) -> stripQuotes
    org.apache.commons.codec.language.bm.Rule$RPattern getLContext() -> getLContext
    java.lang.String getPattern() -> getPattern
    org.apache.commons.codec.language.bm.Rule$PhonemeExpr getPhoneme() -> getPhoneme
    org.apache.commons.codec.language.bm.Rule$RPattern getRContext() -> getRContext
    boolean patternAndContextMatches(java.lang.CharSequence,int) -> patternAndContextMatches
    boolean access$100(java.lang.CharSequence,java.lang.CharSequence) -> access$100
    boolean access$200(java.lang.CharSequence,java.lang.CharSequence) -> access$200
    boolean access$300(java.lang.CharSequence,char) -> access$300
org.apache.commons.codec.language.bm.Rule$1 -> org.apache.commons.codec.language.bm.Rule$1:
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$10 -> org.apache.commons.codec.language.bm.Rule$10:
    java.util.regex.Pattern pattern -> pattern
    java.lang.String val$regex -> val$regex
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$2 -> org.apache.commons.codec.language.bm.Rule$2:
    int myLine -> myLine
    java.lang.String loc -> loc
    int val$cLine -> val$cLine
    java.lang.String val$location -> val$location
    java.lang.String toString() -> toString
org.apache.commons.codec.language.bm.Rule$3 -> org.apache.commons.codec.language.bm.Rule$3:
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$4 -> org.apache.commons.codec.language.bm.Rule$4:
    java.lang.String val$content -> val$content
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$5 -> org.apache.commons.codec.language.bm.Rule$5:
    java.lang.String val$content -> val$content
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$6 -> org.apache.commons.codec.language.bm.Rule$6:
    java.lang.String val$content -> val$content
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$7 -> org.apache.commons.codec.language.bm.Rule$7:
    java.lang.String val$bContent -> val$bContent
    boolean val$shouldMatch -> val$shouldMatch
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$8 -> org.apache.commons.codec.language.bm.Rule$8:
    java.lang.String val$bContent -> val$bContent
    boolean val$shouldMatch -> val$shouldMatch
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$9 -> org.apache.commons.codec.language.bm.Rule$9:
    java.lang.String val$bContent -> val$bContent
    boolean val$shouldMatch -> val$shouldMatch
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.Rule$Phoneme -> org.apache.commons.codec.language.bm.Rule$Phoneme:
    java.util.Comparator COMPARATOR -> COMPARATOR
    java.lang.StringBuilder phonemeText -> phonemeText
    org.apache.commons.codec.language.bm.Languages$LanguageSet languages -> languages
    org.apache.commons.codec.language.bm.Rule$Phoneme append(java.lang.CharSequence) -> append
    org.apache.commons.codec.language.bm.Languages$LanguageSet getLanguages() -> getLanguages
    java.lang.Iterable getPhonemes() -> getPhonemes
    java.lang.CharSequence getPhonemeText() -> getPhonemeText
    org.apache.commons.codec.language.bm.Rule$Phoneme join(org.apache.commons.codec.language.bm.Rule$Phoneme) -> join
    java.lang.StringBuilder access$000(org.apache.commons.codec.language.bm.Rule$Phoneme) -> access$000
org.apache.commons.codec.language.bm.Rule$Phoneme$1 -> org.apache.commons.codec.language.bm.Rule$Phoneme$1:
    int compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.codec.language.bm.Rule$PhonemeExpr -> org.apache.commons.codec.language.bm.Rule$PhonemeExpr:
    java.lang.Iterable getPhonemes() -> getPhonemes
org.apache.commons.codec.language.bm.Rule$PhonemeList -> org.apache.commons.codec.language.bm.Rule$PhonemeList:
    java.util.List phonemes -> phonemes
    java.util.List getPhonemes() -> getPhonemes
    java.lang.Iterable getPhonemes() -> getPhonemes
org.apache.commons.codec.language.bm.Rule$RPattern -> org.apache.commons.codec.language.bm.Rule$RPattern:
    boolean isMatch(java.lang.CharSequence) -> isMatch
org.apache.commons.codec.language.bm.RuleType -> org.apache.commons.codec.language.bm.RuleType:
    org.apache.commons.codec.language.bm.RuleType APPROX -> APPROX
    org.apache.commons.codec.language.bm.RuleType EXACT -> EXACT
    org.apache.commons.codec.language.bm.RuleType RULES -> RULES
    java.lang.String name -> name
    org.apache.commons.codec.language.bm.RuleType[] $VALUES -> $VALUES
    org.apache.commons.codec.language.bm.RuleType[] values() -> values
    org.apache.commons.codec.language.bm.RuleType valueOf(java.lang.String) -> valueOf
    java.lang.String getName() -> getName
org.apache.commons.codec.net.BCodec -> org.apache.commons.codec.net.BCodec:
    java.nio.charset.Charset charset -> charset
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
    java.lang.String encode(java.lang.String,java.nio.charset.Charset) -> encode
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getDefaultCharset() -> getDefaultCharset
org.apache.commons.codec.net.QCodec -> org.apache.commons.codec.net.QCodec:
    java.nio.charset.Charset charset -> charset
    java.util.BitSet PRINTABLE_CHARS -> PRINTABLE_CHARS
    byte BLANK -> BLANK
    byte UNDERSCORE -> UNDERSCORE
    boolean encodeBlanks -> encodeBlanks
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
    java.lang.String encode(java.lang.String,java.nio.charset.Charset) -> encode
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getDefaultCharset() -> getDefaultCharset
    boolean isEncodeBlanks() -> isEncodeBlanks
    void setEncodeBlanks(boolean) -> setEncodeBlanks
org.apache.commons.codec.net.QuotedPrintableCodec -> org.apache.commons.codec.net.QuotedPrintableCodec:
    java.nio.charset.Charset charset -> charset
    java.util.BitSet PRINTABLE_CHARS -> PRINTABLE_CHARS
    byte ESCAPE_CHAR -> ESCAPE_CHAR
    byte TAB -> TAB
    byte SPACE -> SPACE
    void encodeQuotedPrintable(int,java.io.ByteArrayOutputStream) -> encodeQuotedPrintable
    byte[] encodeQuotedPrintable(java.util.BitSet,byte[]) -> encodeQuotedPrintable
    byte[] decodeQuotedPrintable(byte[]) -> decodeQuotedPrintable
    byte[] encode(byte[]) -> encode
    byte[] decode(byte[]) -> decode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String,java.nio.charset.Charset) -> decode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getDefaultCharset() -> getDefaultCharset
    java.lang.String encode(java.lang.String,java.nio.charset.Charset) -> encode
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
org.apache.commons.codec.net.RFC1522Codec -> org.apache.commons.codec.net.RFC1522Codec:
    char SEP -> SEP
    java.lang.String POSTFIX -> POSTFIX
    java.lang.String PREFIX -> PREFIX
    java.lang.String encodeText(java.lang.String,java.nio.charset.Charset) -> encodeText
    java.lang.String encodeText(java.lang.String,java.lang.String) -> encodeText
    java.lang.String decodeText(java.lang.String) -> decodeText
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
org.apache.commons.codec.net.URLCodec -> org.apache.commons.codec.net.URLCodec:
    int RADIX -> RADIX
    java.lang.String charset -> charset
    byte ESCAPE_CHAR -> ESCAPE_CHAR
    java.util.BitSet WWW_FORM_URL -> WWW_FORM_URL
    byte[] encodeUrl(java.util.BitSet,byte[]) -> encodeUrl
    byte[] decodeUrl(byte[]) -> decodeUrl
    byte[] encode(byte[]) -> encode
    byte[] decode(byte[]) -> decode
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getDefaultCharset() -> getDefaultCharset
    java.lang.String getEncoding() -> getEncoding
org.apache.commons.codec.net.Utils -> org.apache.commons.codec.net.Utils:
    int digit16(byte) -> digit16
org.apache.commons.logging.Log -> org.apache.commons.logging.Log:
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
org.apache.commons.logging.LogConfigurationException -> org.apache.commons.logging.LogConfigurationException:
    java.lang.Throwable cause -> cause
    java.lang.Throwable getCause() -> getCause
org.apache.commons.logging.LogFactory -> org.apache.commons.logging.LogFactory:
    java.lang.String PRIORITY_KEY -> PRIORITY_KEY
    java.lang.String TCCL_KEY -> TCCL_KEY
    java.lang.String FACTORY_PROPERTY -> FACTORY_PROPERTY
    java.lang.String FACTORY_DEFAULT -> FACTORY_DEFAULT
    java.lang.String FACTORY_PROPERTIES -> FACTORY_PROPERTIES
    java.lang.String SERVICE_ID -> SERVICE_ID
    java.lang.String DIAGNOSTICS_DEST_PROPERTY -> DIAGNOSTICS_DEST_PROPERTY
    java.io.PrintStream diagnosticsStream -> diagnosticsStream
    java.lang.String diagnosticPrefix -> diagnosticPrefix
    java.lang.String HASHTABLE_IMPLEMENTATION_PROPERTY -> HASHTABLE_IMPLEMENTATION_PROPERTY
    java.lang.String WEAK_HASHTABLE_CLASSNAME -> WEAK_HASHTABLE_CLASSNAME
    java.lang.ClassLoader thisClassLoader -> thisClassLoader
    java.util.Hashtable factories -> factories
    org.apache.commons.logging.LogFactory nullClassLoaderFactory -> nullClassLoaderFactory
    java.lang.Class class$java$lang$Thread -> class$java$lang$Thread
    java.lang.Class class$org$apache$commons$logging$LogFactory -> class$org$apache$commons$logging$LogFactory
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.String[] getAttributeNames() -> getAttributeNames
    org.apache.commons.logging.Log getInstance(java.lang.Class) -> getInstance
    org.apache.commons.logging.Log getInstance(java.lang.String) -> getInstance
    void release() -> release
    void removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.util.Hashtable createFactoryStore() -> createFactoryStore
    java.lang.String trim(java.lang.String) -> trim
    org.apache.commons.logging.LogFactory getFactory() -> getFactory
    org.apache.commons.logging.Log getLog(java.lang.Class) -> getLog
    org.apache.commons.logging.Log getLog(java.lang.String) -> getLog
    void release(java.lang.ClassLoader) -> release
    void releaseAll() -> releaseAll
    java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    java.lang.ClassLoader getContextClassLoaderInternal() -> getContextClassLoaderInternal
    java.lang.ClassLoader directGetContextClassLoader() -> directGetContextClassLoader
    org.apache.commons.logging.LogFactory getCachedFactory(java.lang.ClassLoader) -> getCachedFactory
    void cacheFactory(java.lang.ClassLoader,org.apache.commons.logging.LogFactory) -> cacheFactory
    org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader) -> newFactory
    org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader) -> newFactory
    java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader) -> createFactory
    boolean implementsLogFactory(java.lang.Class) -> implementsLogFactory
    java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String) -> getResourceAsStream
    java.util.Enumeration getResources(java.lang.ClassLoader,java.lang.String) -> getResources
    java.util.Properties getProperties(java.net.URL) -> getProperties
    java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String) -> getConfigurationFile
    java.lang.String getSystemProperty(java.lang.String,java.lang.String) -> getSystemProperty
    void initDiagnostics() -> initDiagnostics
    boolean isDiagnosticsEnabled() -> isDiagnosticsEnabled
    void logDiagnostic(java.lang.String) -> logDiagnostic
    void logRawDiagnostic(java.lang.String) -> logRawDiagnostic
    void logClassLoaderEnvironment(java.lang.Class) -> logClassLoaderEnvironment
    void logHierarchy(java.lang.String,java.lang.ClassLoader) -> logHierarchy
    java.lang.String objectId(java.lang.Object) -> objectId
    java.lang.Class class$(java.lang.String) -> class$
    void access$000(java.lang.String) -> access$000
org.apache.commons.logging.LogFactory$1 -> org.apache.commons.logging.LogFactory$1:
    java.lang.Object run() -> run
org.apache.commons.logging.LogFactory$2 -> org.apache.commons.logging.LogFactory$2:
    java.lang.String val$factoryClass -> val$factoryClass
    java.lang.ClassLoader val$classLoader -> val$classLoader
    java.lang.Object run() -> run
org.apache.commons.logging.LogFactory$3 -> org.apache.commons.logging.LogFactory$3:
    java.lang.ClassLoader val$loader -> val$loader
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
org.apache.commons.logging.LogFactory$4 -> org.apache.commons.logging.LogFactory$4:
    java.lang.ClassLoader val$loader -> val$loader
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
org.apache.commons.logging.LogFactory$5 -> org.apache.commons.logging.LogFactory$5:
    java.net.URL val$url -> val$url
    java.lang.Object run() -> run
org.apache.commons.logging.LogFactory$6 -> org.apache.commons.logging.LogFactory$6:
    java.lang.String val$key -> val$key
    java.lang.String val$def -> val$def
    java.lang.Object run() -> run
org.apache.commons.logging.LogSource -> org.apache.commons.logging.LogSource:
    java.util.Hashtable logs -> logs
    boolean log4jIsAvailable -> log4jIsAvailable
    boolean jdk14IsAvailable -> jdk14IsAvailable
    java.lang.reflect.Constructor logImplctor -> logImplctor
    void setLogImplementation(java.lang.String) -> setLogImplementation
    void setLogImplementation(java.lang.Class) -> setLogImplementation
    org.apache.commons.logging.Log getInstance(java.lang.String) -> getInstance
    org.apache.commons.logging.Log getInstance(java.lang.Class) -> getInstance
    org.apache.commons.logging.Log makeNewLogInstance(java.lang.String) -> makeNewLogInstance
    java.lang.String[] getLogNames() -> getLogNames
org.apache.commons.logging.impl.AvalonLogger -> org.apache.commons.logging.impl.AvalonLogger:
    org.apache.avalon.framework.logger.Logger defaultLogger -> defaultLogger
    org.apache.avalon.framework.logger.Logger logger -> logger
    org.apache.avalon.framework.logger.Logger getLogger() -> getLogger
    void setDefaultLogger(org.apache.avalon.framework.logger.Logger) -> setDefaultLogger
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void debug(java.lang.Object) -> debug
    void error(java.lang.Object,java.lang.Throwable) -> error
    void error(java.lang.Object) -> error
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    void fatal(java.lang.Object) -> fatal
    void info(java.lang.Object,java.lang.Throwable) -> info
    void info(java.lang.Object) -> info
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void trace(java.lang.Object) -> trace
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    void warn(java.lang.Object) -> warn
org.apache.commons.logging.impl.Jdk13LumberjackLogger -> org.apache.commons.logging.impl.Jdk13LumberjackLogger:
    java.util.logging.Logger logger -> logger
    java.lang.String name -> name
    java.lang.String sourceClassName -> sourceClassName
    java.lang.String sourceMethodName -> sourceMethodName
    boolean classAndMethodFound -> classAndMethodFound
    java.util.logging.Level dummyLevel -> dummyLevel
    void log(java.util.logging.Level,java.lang.String,java.lang.Throwable) -> log
    void getClassAndMethod() -> getClassAndMethod
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    java.util.logging.Logger getLogger() -> getLogger
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
org.apache.commons.logging.impl.Jdk14Logger -> org.apache.commons.logging.impl.Jdk14Logger:
    java.util.logging.Level dummyLevel -> dummyLevel
    java.util.logging.Logger logger -> logger
    java.lang.String name -> name
    void log(java.util.logging.Level,java.lang.String,java.lang.Throwable) -> log
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    java.util.logging.Logger getLogger() -> getLogger
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
org.apache.commons.logging.impl.Log4JLogger -> org.apache.commons.logging.impl.Log4JLogger:
    java.lang.String FQCN -> FQCN
    org.apache.log4j.Logger logger -> logger
    java.lang.String name -> name
    org.apache.log4j.Priority traceLevel -> traceLevel
    java.lang.Class class$org$apache$commons$logging$impl$Log4JLogger -> class$org$apache$commons$logging$impl$Log4JLogger
    java.lang.Class class$org$apache$log4j$Level -> class$org$apache$log4j$Level
    java.lang.Class class$org$apache$log4j$Priority -> class$org$apache$log4j$Priority
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    org.apache.log4j.Logger getLogger() -> getLogger
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.logging.impl.LogFactoryImpl -> org.apache.commons.logging.impl.LogFactoryImpl:
    java.lang.String LOGGING_IMPL_LOG4J_LOGGER -> LOGGING_IMPL_LOG4J_LOGGER
    java.lang.String LOGGING_IMPL_JDK14_LOGGER -> LOGGING_IMPL_JDK14_LOGGER
    java.lang.String LOGGING_IMPL_LUMBERJACK_LOGGER -> LOGGING_IMPL_LUMBERJACK_LOGGER
    java.lang.String LOGGING_IMPL_SIMPLE_LOGGER -> LOGGING_IMPL_SIMPLE_LOGGER
    java.lang.String PKG_IMPL -> PKG_IMPL
    int PKG_LEN -> PKG_LEN
    java.lang.String LOG_PROPERTY -> LOG_PROPERTY
    java.lang.String LOG_PROPERTY_OLD -> LOG_PROPERTY_OLD
    java.lang.String ALLOW_FLAWED_CONTEXT_PROPERTY -> ALLOW_FLAWED_CONTEXT_PROPERTY
    java.lang.String ALLOW_FLAWED_DISCOVERY_PROPERTY -> ALLOW_FLAWED_DISCOVERY_PROPERTY
    java.lang.String ALLOW_FLAWED_HIERARCHY_PROPERTY -> ALLOW_FLAWED_HIERARCHY_PROPERTY
    java.lang.String[] classesToDiscover -> classesToDiscover
    boolean useTCCL -> useTCCL
    java.lang.String diagnosticPrefix -> diagnosticPrefix
    java.util.Hashtable attributes -> attributes
    java.util.Hashtable instances -> instances
    java.lang.String logClassName -> logClassName
    java.lang.reflect.Constructor logConstructor -> logConstructor
    java.lang.Class[] logConstructorSignature -> logConstructorSignature
    java.lang.reflect.Method logMethod -> logMethod
    java.lang.Class[] logMethodSignature -> logMethodSignature
    boolean allowFlawedContext -> allowFlawedContext
    boolean allowFlawedDiscovery -> allowFlawedDiscovery
    boolean allowFlawedHierarchy -> allowFlawedHierarchy
    java.lang.Class class$java$lang$String -> class$java$lang$String
    java.lang.Class class$org$apache$commons$logging$LogFactory -> class$org$apache$commons$logging$LogFactory
    java.lang.Class class$org$apache$commons$logging$impl$LogFactoryImpl -> class$org$apache$commons$logging$impl$LogFactoryImpl
    java.lang.Class class$org$apache$commons$logging$Log -> class$org$apache$commons$logging$Log
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.String[] getAttributeNames() -> getAttributeNames
    org.apache.commons.logging.Log getInstance(java.lang.Class) -> getInstance
    org.apache.commons.logging.Log getInstance(java.lang.String) -> getInstance
    void release() -> release
    void removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    boolean isDiagnosticsEnabled() -> isDiagnosticsEnabled
    java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    void initDiagnostics() -> initDiagnostics
    void logDiagnostic(java.lang.String) -> logDiagnostic
    java.lang.String getLogClassName() -> getLogClassName
    java.lang.reflect.Constructor getLogConstructor() -> getLogConstructor
    boolean isJdk13LumberjackAvailable() -> isJdk13LumberjackAvailable
    boolean isJdk14Available() -> isJdk14Available
    boolean isLog4JAvailable() -> isLog4JAvailable
    org.apache.commons.logging.Log newInstance(java.lang.String) -> newInstance
    java.lang.ClassLoader getContextClassLoaderInternal() -> getContextClassLoaderInternal
    java.lang.String getSystemProperty(java.lang.String,java.lang.String) -> getSystemProperty
    java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader) -> getParentClassLoader
    boolean isLogLibraryAvailable(java.lang.String,java.lang.String) -> isLogLibraryAvailable
    java.lang.String getConfigurationValue(java.lang.String) -> getConfigurationValue
    boolean getBooleanConfiguration(java.lang.String,boolean) -> getBooleanConfiguration
    void initConfiguration() -> initConfiguration
    org.apache.commons.logging.Log discoverLogImplementation(java.lang.String) -> discoverLogImplementation
    void informUponSimilarName(java.lang.StringBuffer,java.lang.String,java.lang.String) -> informUponSimilarName
    java.lang.String findUserSpecifiedLogClassName() -> findUserSpecifiedLogClassName
    org.apache.commons.logging.Log createLogFromClass(java.lang.String,java.lang.String,boolean) -> createLogFromClass
    java.lang.ClassLoader getBaseClassLoader() -> getBaseClassLoader
    java.lang.ClassLoader getLowestClassLoader(java.lang.ClassLoader,java.lang.ClassLoader) -> getLowestClassLoader
    void handleFlawedDiscovery(java.lang.String,java.lang.ClassLoader,java.lang.Throwable) -> handleFlawedDiscovery
    void handleFlawedHierarchy(java.lang.ClassLoader,java.lang.Class) -> handleFlawedHierarchy
    java.lang.Class class$(java.lang.String) -> class$
    java.lang.ClassLoader access$000() -> access$000
org.apache.commons.logging.impl.LogFactoryImpl$1 -> org.apache.commons.logging.impl.LogFactoryImpl$1:
    java.lang.Object run() -> run
org.apache.commons.logging.impl.LogFactoryImpl$2 -> org.apache.commons.logging.impl.LogFactoryImpl$2:
    java.lang.String val$key -> val$key
    java.lang.String val$def -> val$def
    java.lang.Object run() -> run
org.apache.commons.logging.impl.LogFactoryImpl$3 -> org.apache.commons.logging.impl.LogFactoryImpl$3:
    java.lang.ClassLoader val$cl -> val$cl
    org.apache.commons.logging.impl.LogFactoryImpl this$0 -> this$0
    java.lang.Object run() -> run
org.apache.commons.logging.impl.LogKitLogger -> org.apache.commons.logging.impl.LogKitLogger:
    org.apache.log.Logger logger -> logger
    java.lang.String name -> name
    org.apache.log.Logger getLogger() -> getLogger
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
org.apache.commons.logging.impl.NoOpLog -> org.apache.commons.logging.impl.NoOpLog:
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
org.apache.commons.logging.impl.ServletContextCleaner -> org.apache.commons.logging.impl.ServletContextCleaner:
    java.lang.Class[] RELEASE_SIGNATURE -> RELEASE_SIGNATURE
    java.lang.Class class$java$lang$ClassLoader -> class$java$lang$ClassLoader
    void contextDestroyed(javax.servlet.ServletContextEvent) -> contextDestroyed
    void contextInitialized(javax.servlet.ServletContextEvent) -> contextInitialized
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.logging.impl.SimpleLog -> org.apache.commons.logging.impl.SimpleLog:
    java.lang.String systemPrefix -> systemPrefix
    java.util.Properties simpleLogProps -> simpleLogProps
    java.lang.String DEFAULT_DATE_TIME_FORMAT -> DEFAULT_DATE_TIME_FORMAT
    boolean showLogName -> showLogName
    boolean showShortName -> showShortName
    boolean showDateTime -> showDateTime
    java.lang.String dateTimeFormat -> dateTimeFormat
    java.text.DateFormat dateFormatter -> dateFormatter
    int LOG_LEVEL_TRACE -> LOG_LEVEL_TRACE
    int LOG_LEVEL_DEBUG -> LOG_LEVEL_DEBUG
    int LOG_LEVEL_INFO -> LOG_LEVEL_INFO
    int LOG_LEVEL_WARN -> LOG_LEVEL_WARN
    int LOG_LEVEL_ERROR -> LOG_LEVEL_ERROR
    int LOG_LEVEL_FATAL -> LOG_LEVEL_FATAL
    int LOG_LEVEL_ALL -> LOG_LEVEL_ALL
    int LOG_LEVEL_OFF -> LOG_LEVEL_OFF
    java.lang.String logName -> logName
    int currentLogLevel -> currentLogLevel
    java.lang.String shortLogName -> shortLogName
    java.lang.Class class$java$lang$Thread -> class$java$lang$Thread
    java.lang.Class class$org$apache$commons$logging$impl$SimpleLog -> class$org$apache$commons$logging$impl$SimpleLog
    java.lang.String getStringProperty(java.lang.String) -> getStringProperty
    java.lang.String getStringProperty(java.lang.String,java.lang.String) -> getStringProperty
    boolean getBooleanProperty(java.lang.String,boolean) -> getBooleanProperty
    void setLevel(int) -> setLevel
    int getLevel() -> getLevel
    void log(int,java.lang.Object,java.lang.Throwable) -> log
    void write(java.lang.StringBuffer) -> write
    boolean isLevelEnabled(int) -> isLevelEnabled
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    java.io.InputStream getResourceAsStream(java.lang.String) -> getResourceAsStream
    java.lang.Class class$(java.lang.String) -> class$
    java.lang.ClassLoader access$000() -> access$000
org.apache.commons.logging.impl.SimpleLog$1 -> org.apache.commons.logging.impl.SimpleLog$1:
    java.lang.String val$name -> val$name
    java.lang.Object run() -> run
org.apache.commons.logging.impl.WeakHashtable -> org.apache.commons.logging.impl.WeakHashtable:
    int MAX_CHANGES_BEFORE_PURGE -> MAX_CHANGES_BEFORE_PURGE
    int PARTIAL_PURGE_COUNT -> PARTIAL_PURGE_COUNT
    java.lang.ref.ReferenceQueue queue -> queue
    int changeCount -> changeCount
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Enumeration elements() -> elements
    java.util.Set entrySet() -> entrySet
    java.lang.Object get(java.lang.Object) -> get
    java.util.Enumeration keys() -> keys
    java.util.Set keySet() -> keySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.util.Collection values() -> values
    java.lang.Object remove(java.lang.Object) -> remove
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.lang.String toString() -> toString
    void rehash() -> rehash
    void purge() -> purge
    void purgeOne() -> purgeOne
org.apache.commons.logging.impl.WeakHashtable$1 -> org.apache.commons.logging.impl.WeakHashtable$1:
    java.util.Enumeration val$enumer -> val$enumer
    org.apache.commons.logging.impl.WeakHashtable this$0 -> this$0
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
org.apache.commons.logging.impl.WeakHashtable$Entry -> org.apache.commons.logging.impl.WeakHashtable$Entry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    java.lang.Object getKey() -> getKey
org.apache.commons.logging.impl.WeakHashtable$Referenced -> org.apache.commons.logging.impl.WeakHashtable$Referenced:
    java.lang.ref.WeakReference reference -> reference
    int hashCode -> hashCode
    int hashCode() -> hashCode
    java.lang.Object getValue() -> getValue
    boolean equals(java.lang.Object) -> equals
    java.lang.Object access$100(org.apache.commons.logging.impl.WeakHashtable$Referenced) -> access$100
org.apache.commons.logging.impl.WeakHashtable$WeakKey -> org.apache.commons.logging.impl.WeakHashtable$WeakKey:
    org.apache.commons.logging.impl.WeakHashtable$Referenced referenced -> referenced
    org.apache.commons.logging.impl.WeakHashtable$Referenced getReferenced() -> getReferenced
    org.apache.commons.logging.impl.WeakHashtable$Referenced access$400(org.apache.commons.logging.impl.WeakHashtable$WeakKey) -> access$400
org.apache.http.ConnectionClosedException -> org.apache.http.ConnectionClosedException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ConnectionReuseStrategy -> org.apache.http.ConnectionReuseStrategy:
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
org.apache.http.Consts -> org.apache.http.Consts:
    int CR -> CR
    int LF -> LF
    int SP -> SP
    int HT -> HT
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset ASCII -> ASCII
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
org.apache.http.ContentTooLongException -> org.apache.http.ContentTooLongException:
    long serialVersionUID -> serialVersionUID
org.apache.http.FormattedHeader -> org.apache.http.FormattedHeader:
    org.apache.http.util.CharArrayBuffer getBuffer() -> getBuffer
    int getValuePos() -> getValuePos
org.apache.http.Header -> org.apache.http.Header:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.HeaderElement[] getElements() -> getElements
org.apache.http.HeaderElement -> org.apache.http.HeaderElement:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.NameValuePair[] getParameters() -> getParameters
    org.apache.http.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    int getParameterCount() -> getParameterCount
    org.apache.http.NameValuePair getParameter(int) -> getParameter
org.apache.http.HeaderElementIterator -> org.apache.http.HeaderElementIterator:
    boolean hasNext() -> hasNext
    org.apache.http.HeaderElement nextElement() -> nextElement
org.apache.http.HeaderIterator -> org.apache.http.HeaderIterator:
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
org.apache.http.HttpClientConnection -> org.apache.http.HttpClientConnection:
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    void flush() -> flush
org.apache.http.HttpConnection -> org.apache.http.HttpConnection:
    void close() -> close
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.HttpConnectionMetrics -> org.apache.http.HttpConnectionMetrics:
    long getRequestCount() -> getRequestCount
    long getResponseCount() -> getResponseCount
    long getSentBytesCount() -> getSentBytesCount
    long getReceivedBytesCount() -> getReceivedBytesCount
    java.lang.Object getMetric(java.lang.String) -> getMetric
    void reset() -> reset
org.apache.http.HttpEntity -> org.apache.http.HttpEntity:
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.HttpEntityEnclosingRequest -> org.apache.http.HttpEntityEnclosingRequest:
    boolean expectContinue() -> expectContinue
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    org.apache.http.HttpEntity getEntity() -> getEntity
org.apache.http.HttpException -> org.apache.http.HttpException:
    long serialVersionUID -> serialVersionUID
org.apache.http.HttpHeaders -> org.apache.http.HttpHeaders:
    java.lang.String ACCEPT -> ACCEPT
    java.lang.String ACCEPT_CHARSET -> ACCEPT_CHARSET
    java.lang.String ACCEPT_ENCODING -> ACCEPT_ENCODING
    java.lang.String ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    java.lang.String ACCEPT_RANGES -> ACCEPT_RANGES
    java.lang.String AGE -> AGE
    java.lang.String ALLOW -> ALLOW
    java.lang.String AUTHORIZATION -> AUTHORIZATION
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    java.lang.String CONNECTION -> CONNECTION
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    java.lang.String CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.String CONTENT_LOCATION -> CONTENT_LOCATION
    java.lang.String CONTENT_MD5 -> CONTENT_MD5
    java.lang.String CONTENT_RANGE -> CONTENT_RANGE
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String DATE -> DATE
    java.lang.String DAV -> DAV
    java.lang.String DEPTH -> DEPTH
    java.lang.String DESTINATION -> DESTINATION
    java.lang.String ETAG -> ETAG
    java.lang.String EXPECT -> EXPECT
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String FROM -> FROM
    java.lang.String HOST -> HOST
    java.lang.String IF -> IF
    java.lang.String IF_MATCH -> IF_MATCH
    java.lang.String IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    java.lang.String IF_NONE_MATCH -> IF_NONE_MATCH
    java.lang.String IF_RANGE -> IF_RANGE
    java.lang.String IF_UNMODIFIED_SINCE -> IF_UNMODIFIED_SINCE
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String LOCATION -> LOCATION
    java.lang.String LOCK_TOKEN -> LOCK_TOKEN
    java.lang.String MAX_FORWARDS -> MAX_FORWARDS
    java.lang.String OVERWRITE -> OVERWRITE
    java.lang.String PRAGMA -> PRAGMA
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String PROXY_AUTHORIZATION -> PROXY_AUTHORIZATION
    java.lang.String RANGE -> RANGE
    java.lang.String REFERER -> REFERER
    java.lang.String RETRY_AFTER -> RETRY_AFTER
    java.lang.String SERVER -> SERVER
    java.lang.String STATUS_URI -> STATUS_URI
    java.lang.String TE -> TE
    java.lang.String TIMEOUT -> TIMEOUT
    java.lang.String TRAILER -> TRAILER
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String UPGRADE -> UPGRADE
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String VARY -> VARY
    java.lang.String VIA -> VIA
    java.lang.String WARNING -> WARNING
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
org.apache.http.HttpHost -> org.apache.http.HttpHost:
    long serialVersionUID -> serialVersionUID
    java.lang.String DEFAULT_SCHEME_NAME -> DEFAULT_SCHEME_NAME
    java.lang.String hostname -> hostname
    java.lang.String lcHostname -> lcHostname
    int port -> port
    java.lang.String schemeName -> schemeName
    java.lang.String getHostName() -> getHostName
    int getPort() -> getPort
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String toURI() -> toURI
    java.lang.String toHostString() -> toHostString
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
org.apache.http.HttpInetConnection -> org.apache.http.HttpInetConnection:
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
org.apache.http.HttpMessage -> org.apache.http.HttpMessage:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    void removeHeader(org.apache.http.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    org.apache.http.HeaderIterator headerIterator() -> headerIterator
    org.apache.http.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
org.apache.http.HttpRequest -> org.apache.http.HttpRequest:
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
org.apache.http.HttpRequestFactory -> org.apache.http.HttpRequestFactory:
    org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) -> newHttpRequest
    org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
org.apache.http.HttpRequestInterceptor -> org.apache.http.HttpRequestInterceptor:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.HttpResponse -> org.apache.http.HttpResponse:
    org.apache.http.StatusLine getStatusLine() -> getStatusLine
    void setStatusLine(org.apache.http.StatusLine) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
org.apache.http.HttpResponseFactory -> org.apache.http.HttpResponseFactory:
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext) -> newHttpResponse
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext) -> newHttpResponse
org.apache.http.HttpResponseInterceptor -> org.apache.http.HttpResponseInterceptor:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.HttpServerConnection -> org.apache.http.HttpServerConnection:
    org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    void flush() -> flush
org.apache.http.HttpStatus -> org.apache.http.HttpStatus:
    int SC_CONTINUE -> SC_CONTINUE
    int SC_SWITCHING_PROTOCOLS -> SC_SWITCHING_PROTOCOLS
    int SC_PROCESSING -> SC_PROCESSING
    int SC_OK -> SC_OK
    int SC_CREATED -> SC_CREATED
    int SC_ACCEPTED -> SC_ACCEPTED
    int SC_NON_AUTHORITATIVE_INFORMATION -> SC_NON_AUTHORITATIVE_INFORMATION
    int SC_NO_CONTENT -> SC_NO_CONTENT
    int SC_RESET_CONTENT -> SC_RESET_CONTENT
    int SC_PARTIAL_CONTENT -> SC_PARTIAL_CONTENT
    int SC_MULTI_STATUS -> SC_MULTI_STATUS
    int SC_MULTIPLE_CHOICES -> SC_MULTIPLE_CHOICES
    int SC_MOVED_PERMANENTLY -> SC_MOVED_PERMANENTLY
    int SC_MOVED_TEMPORARILY -> SC_MOVED_TEMPORARILY
    int SC_SEE_OTHER -> SC_SEE_OTHER
    int SC_NOT_MODIFIED -> SC_NOT_MODIFIED
    int SC_USE_PROXY -> SC_USE_PROXY
    int SC_TEMPORARY_REDIRECT -> SC_TEMPORARY_REDIRECT
    int SC_BAD_REQUEST -> SC_BAD_REQUEST
    int SC_UNAUTHORIZED -> SC_UNAUTHORIZED
    int SC_PAYMENT_REQUIRED -> SC_PAYMENT_REQUIRED
    int SC_FORBIDDEN -> SC_FORBIDDEN
    int SC_NOT_FOUND -> SC_NOT_FOUND
    int SC_METHOD_NOT_ALLOWED -> SC_METHOD_NOT_ALLOWED
    int SC_NOT_ACCEPTABLE -> SC_NOT_ACCEPTABLE
    int SC_PROXY_AUTHENTICATION_REQUIRED -> SC_PROXY_AUTHENTICATION_REQUIRED
    int SC_REQUEST_TIMEOUT -> SC_REQUEST_TIMEOUT
    int SC_CONFLICT -> SC_CONFLICT
    int SC_GONE -> SC_GONE
    int SC_LENGTH_REQUIRED -> SC_LENGTH_REQUIRED
    int SC_PRECONDITION_FAILED -> SC_PRECONDITION_FAILED
    int SC_REQUEST_TOO_LONG -> SC_REQUEST_TOO_LONG
    int SC_REQUEST_URI_TOO_LONG -> SC_REQUEST_URI_TOO_LONG
    int SC_UNSUPPORTED_MEDIA_TYPE -> SC_UNSUPPORTED_MEDIA_TYPE
    int SC_REQUESTED_RANGE_NOT_SATISFIABLE -> SC_REQUESTED_RANGE_NOT_SATISFIABLE
    int SC_EXPECTATION_FAILED -> SC_EXPECTATION_FAILED
    int SC_INSUFFICIENT_SPACE_ON_RESOURCE -> SC_INSUFFICIENT_SPACE_ON_RESOURCE
    int SC_METHOD_FAILURE -> SC_METHOD_FAILURE
    int SC_UNPROCESSABLE_ENTITY -> SC_UNPROCESSABLE_ENTITY
    int SC_LOCKED -> SC_LOCKED
    int SC_FAILED_DEPENDENCY -> SC_FAILED_DEPENDENCY
    int SC_INTERNAL_SERVER_ERROR -> SC_INTERNAL_SERVER_ERROR
    int SC_NOT_IMPLEMENTED -> SC_NOT_IMPLEMENTED
    int SC_BAD_GATEWAY -> SC_BAD_GATEWAY
    int SC_SERVICE_UNAVAILABLE -> SC_SERVICE_UNAVAILABLE
    int SC_GATEWAY_TIMEOUT -> SC_GATEWAY_TIMEOUT
    int SC_HTTP_VERSION_NOT_SUPPORTED -> SC_HTTP_VERSION_NOT_SUPPORTED
    int SC_INSUFFICIENT_STORAGE -> SC_INSUFFICIENT_STORAGE
org.apache.http.HttpVersion -> org.apache.http.HttpVersion:
    long serialVersionUID -> serialVersionUID
    java.lang.String HTTP -> HTTP
    org.apache.http.HttpVersion HTTP_0_9 -> HTTP_0_9
    org.apache.http.HttpVersion HTTP_1_0 -> HTTP_1_0
    org.apache.http.HttpVersion HTTP_1_1 -> HTTP_1_1
    org.apache.http.ProtocolVersion forVersion(int,int) -> forVersion
org.apache.http.MalformedChunkCodingException -> org.apache.http.MalformedChunkCodingException:
    long serialVersionUID -> serialVersionUID
org.apache.http.MethodNotSupportedException -> org.apache.http.MethodNotSupportedException:
    long serialVersionUID -> serialVersionUID
org.apache.http.NameValuePair -> org.apache.http.NameValuePair:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
org.apache.http.NoHttpResponseException -> org.apache.http.NoHttpResponseException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ParseException -> org.apache.http.ParseException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ProtocolException -> org.apache.http.ProtocolException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ProtocolVersion -> org.apache.http.ProtocolVersion:
    long serialVersionUID -> serialVersionUID
    java.lang.String protocol -> protocol
    int major -> major
    int minor -> minor
    java.lang.String getProtocol() -> getProtocol
    int getMajor() -> getMajor
    int getMinor() -> getMinor
    org.apache.http.ProtocolVersion forVersion(int,int) -> forVersion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isComparable(org.apache.http.ProtocolVersion) -> isComparable
    int compareToVersion(org.apache.http.ProtocolVersion) -> compareToVersion
    boolean greaterEquals(org.apache.http.ProtocolVersion) -> greaterEquals
    boolean lessEquals(org.apache.http.ProtocolVersion) -> lessEquals
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.ReasonPhraseCatalog -> org.apache.http.ReasonPhraseCatalog:
    java.lang.String getReason(int,java.util.Locale) -> getReason
org.apache.http.RequestLine -> org.apache.http.RequestLine:
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
org.apache.http.StatusLine -> org.apache.http.StatusLine:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
org.apache.http.TokenIterator -> org.apache.http.TokenIterator:
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> nextToken
org.apache.http.TruncatedChunkException -> org.apache.http.TruncatedChunkException:
    long serialVersionUID -> serialVersionUID
org.apache.http.UnsupportedHttpVersionException -> org.apache.http.UnsupportedHttpVersionException:
    long serialVersionUID -> serialVersionUID
org.apache.http.annotation.GuardedBy -> org.apache.http.annotation.GuardedBy:
    java.lang.String value() -> value
org.apache.http.annotation.Immutable -> org.apache.http.annotation.Immutable:
org.apache.http.annotation.NotThreadSafe -> org.apache.http.annotation.NotThreadSafe:
org.apache.http.annotation.ThreadSafe -> org.apache.http.annotation.ThreadSafe:
org.apache.http.auth.AUTH -> org.apache.http.auth.AUTH:
    java.lang.String WWW_AUTH -> WWW_AUTH
    java.lang.String WWW_AUTH_RESP -> WWW_AUTH_RESP
    java.lang.String PROXY_AUTH -> PROXY_AUTH
    java.lang.String PROXY_AUTH_RESP -> PROXY_AUTH_RESP
org.apache.http.auth.AuthOption -> org.apache.http.auth.AuthOption:
    org.apache.http.auth.AuthScheme authScheme -> authScheme
    org.apache.http.auth.Credentials creds -> creds
    org.apache.http.auth.AuthScheme getAuthScheme() -> getAuthScheme
    org.apache.http.auth.Credentials getCredentials() -> getCredentials
    java.lang.String toString() -> toString
org.apache.http.auth.AuthProtocolState -> org.apache.http.auth.AuthProtocolState:
    org.apache.http.auth.AuthProtocolState UNCHALLENGED -> UNCHALLENGED
    org.apache.http.auth.AuthProtocolState CHALLENGED -> CHALLENGED
    org.apache.http.auth.AuthProtocolState HANDSHAKE -> HANDSHAKE
    org.apache.http.auth.AuthProtocolState FAILURE -> FAILURE
    org.apache.http.auth.AuthProtocolState SUCCESS -> SUCCESS
    org.apache.http.auth.AuthProtocolState[] $VALUES -> $VALUES
    org.apache.http.auth.AuthProtocolState[] values() -> values
    org.apache.http.auth.AuthProtocolState valueOf(java.lang.String) -> valueOf
org.apache.http.auth.AuthScheme -> org.apache.http.auth.AuthScheme:
    void processChallenge(org.apache.http.Header) -> processChallenge
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
    boolean isComplete() -> isComplete
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
org.apache.http.auth.AuthSchemeFactory -> org.apache.http.auth.AuthSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.auth.AuthSchemeRegistry -> org.apache.http.auth.AuthSchemeRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSchemes -> registeredSchemes
    void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory) -> register
    void unregister(java.lang.String) -> unregister
    org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams) -> getAuthScheme
    java.util.List getSchemeNames() -> getSchemeNames
    void setItems(java.util.Map) -> setItems
org.apache.http.auth.AuthScope -> org.apache.http.auth.AuthScope:
    java.lang.String ANY_HOST -> ANY_HOST
    int ANY_PORT -> ANY_PORT
    java.lang.String ANY_REALM -> ANY_REALM
    java.lang.String ANY_SCHEME -> ANY_SCHEME
    org.apache.http.auth.AuthScope ANY -> ANY
    java.lang.String scheme -> scheme
    java.lang.String realm -> realm
    java.lang.String host -> host
    int port -> port
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getRealm() -> getRealm
    java.lang.String getScheme() -> getScheme
    int match(org.apache.http.auth.AuthScope) -> match
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
org.apache.http.auth.AuthState -> org.apache.http.auth.AuthState:
    org.apache.http.auth.AuthProtocolState state -> state
    org.apache.http.auth.AuthScheme authScheme -> authScheme
    org.apache.http.auth.AuthScope authScope -> authScope
    org.apache.http.auth.Credentials credentials -> credentials
    java.util.Queue authOptions -> authOptions
    void reset() -> reset
    org.apache.http.auth.AuthProtocolState getState() -> getState
    void setState(org.apache.http.auth.AuthProtocolState) -> setState
    org.apache.http.auth.AuthScheme getAuthScheme() -> getAuthScheme
    org.apache.http.auth.Credentials getCredentials() -> getCredentials
    void update(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials) -> update
    java.util.Queue getAuthOptions() -> getAuthOptions
    boolean hasAuthOptions() -> hasAuthOptions
    void update(java.util.Queue) -> update
    void invalidate() -> invalidate
    boolean isValid() -> isValid
    void setAuthScheme(org.apache.http.auth.AuthScheme) -> setAuthScheme
    void setCredentials(org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.AuthScope getAuthScope() -> getAuthScope
    void setAuthScope(org.apache.http.auth.AuthScope) -> setAuthScope
    java.lang.String toString() -> toString
org.apache.http.auth.AuthenticationException -> org.apache.http.auth.AuthenticationException:
    long serialVersionUID -> serialVersionUID
org.apache.http.auth.BasicUserPrincipal -> org.apache.http.auth.BasicUserPrincipal:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    java.lang.String getName() -> getName
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.ChallengeState -> org.apache.http.auth.ChallengeState:
    org.apache.http.auth.ChallengeState TARGET -> TARGET
    org.apache.http.auth.ChallengeState PROXY -> PROXY
    org.apache.http.auth.ChallengeState[] $VALUES -> $VALUES
    org.apache.http.auth.ChallengeState[] values() -> values
    org.apache.http.auth.ChallengeState valueOf(java.lang.String) -> valueOf
org.apache.http.auth.ContextAwareAuthScheme -> org.apache.http.auth.ContextAwareAuthScheme:
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
org.apache.http.auth.Credentials -> org.apache.http.auth.Credentials:
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getPassword() -> getPassword
org.apache.http.auth.InvalidCredentialsException -> org.apache.http.auth.InvalidCredentialsException:
    long serialVersionUID -> serialVersionUID
org.apache.http.auth.MalformedChallengeException -> org.apache.http.auth.MalformedChallengeException:
    long serialVersionUID -> serialVersionUID
org.apache.http.auth.NTCredentials -> org.apache.http.auth.NTCredentials:
    long serialVersionUID -> serialVersionUID
    org.apache.http.auth.NTUserPrincipal principal -> principal
    java.lang.String password -> password
    java.lang.String workstation -> workstation
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
    java.lang.String getDomain() -> getDomain
    java.lang.String getWorkstation() -> getWorkstation
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.NTUserPrincipal -> org.apache.http.auth.NTUserPrincipal:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    java.lang.String domain -> domain
    java.lang.String ntname -> ntname
    java.lang.String getName() -> getName
    java.lang.String getDomain() -> getDomain
    java.lang.String getUsername() -> getUsername
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.UsernamePasswordCredentials -> org.apache.http.auth.UsernamePasswordCredentials:
    long serialVersionUID -> serialVersionUID
    org.apache.http.auth.BasicUserPrincipal principal -> principal
    java.lang.String password -> password
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.params.AuthPNames -> org.apache.http.auth.params.AuthPNames:
    java.lang.String CREDENTIAL_CHARSET -> CREDENTIAL_CHARSET
    java.lang.String TARGET_AUTH_PREF -> TARGET_AUTH_PREF
    java.lang.String PROXY_AUTH_PREF -> PROXY_AUTH_PREF
org.apache.http.auth.params.AuthParamBean -> org.apache.http.auth.params.AuthParamBean:
    void setCredentialCharset(java.lang.String) -> setCredentialCharset
org.apache.http.auth.params.AuthParams -> org.apache.http.auth.params.AuthParams:
    java.lang.String getCredentialCharset(org.apache.http.params.HttpParams) -> getCredentialCharset
    void setCredentialCharset(org.apache.http.params.HttpParams,java.lang.String) -> setCredentialCharset
org.apache.http.client.AuthCache -> org.apache.http.client.AuthCache:
    void put(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> put
    org.apache.http.auth.AuthScheme get(org.apache.http.HttpHost) -> get
    void remove(org.apache.http.HttpHost) -> remove
    void clear() -> clear
org.apache.http.client.AuthenticationHandler -> org.apache.http.client.AuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> selectScheme
org.apache.http.client.AuthenticationStrategy -> org.apache.http.client.AuthenticationStrategy:
    boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
org.apache.http.client.BackoffManager -> org.apache.http.client.BackoffManager:
    void backOff(org.apache.http.conn.routing.HttpRoute) -> backOff
    void probe(org.apache.http.conn.routing.HttpRoute) -> probe
org.apache.http.client.CircularRedirectException -> org.apache.http.client.CircularRedirectException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.ClientProtocolException -> org.apache.http.client.ClientProtocolException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.ConnectionBackoffStrategy -> org.apache.http.client.ConnectionBackoffStrategy:
    boolean shouldBackoff(java.lang.Throwable) -> shouldBackoff
    boolean shouldBackoff(org.apache.http.HttpResponse) -> shouldBackoff
org.apache.http.client.CookieStore -> org.apache.http.client.CookieStore:
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
org.apache.http.client.CredentialsProvider -> org.apache.http.client.CredentialsProvider:
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    void clear() -> clear
org.apache.http.client.HttpClient -> org.apache.http.client.HttpClient:
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.client.HttpRequestRetryHandler -> org.apache.http.client.HttpRequestRetryHandler:
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
org.apache.http.client.HttpResponseException -> org.apache.http.client.HttpResponseException:
    long serialVersionUID -> serialVersionUID
    int statusCode -> statusCode
    int getStatusCode() -> getStatusCode
org.apache.http.client.NonRepeatableRequestException -> org.apache.http.client.NonRepeatableRequestException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.RedirectException -> org.apache.http.client.RedirectException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.RedirectHandler -> org.apache.http.client.RedirectHandler:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
org.apache.http.client.RedirectStrategy -> org.apache.http.client.RedirectStrategy:
    boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirected
    org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getRedirect
org.apache.http.client.RequestDirector -> org.apache.http.client.RequestDirector:
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.client.ResponseHandler -> org.apache.http.client.ResponseHandler:
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
org.apache.http.client.ServiceUnavailableRetryStrategy -> org.apache.http.client.ServiceUnavailableRetryStrategy:
    boolean retryRequest(org.apache.http.HttpResponse,int,org.apache.http.protocol.HttpContext) -> retryRequest
    long getRetryInterval() -> getRetryInterval
org.apache.http.client.UserTokenHandler -> org.apache.http.client.UserTokenHandler:
    java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
org.apache.http.client.entity.DecompressingEntity -> org.apache.http.client.entity.DecompressingEntity:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.InputStream content -> content
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    java.io.InputStream getDecompressingStream() -> getDecompressingStream
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.client.entity.DeflateDecompressingEntity -> org.apache.http.client.entity.DeflateDecompressingEntity:
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
org.apache.http.client.entity.DeflateDecompressingEntity$DeflateStream -> org.apache.http.client.entity.DeflateDecompressingEntity$DeflateStream:
    boolean closed -> closed
    void close() -> close
org.apache.http.client.entity.GzipDecompressingEntity -> org.apache.http.client.entity.GzipDecompressingEntity:
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
org.apache.http.client.entity.UrlEncodedFormEntity -> org.apache.http.client.entity.UrlEncodedFormEntity:
org.apache.http.client.methods.AbortableHttpRequest -> org.apache.http.client.methods.AbortableHttpRequest:
    void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) -> setConnectionRequest
    void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    void abort() -> abort
org.apache.http.client.methods.HttpDelete -> org.apache.http.client.methods.HttpDelete:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpEntityEnclosingRequestBase -> org.apache.http.client.methods.HttpEntityEnclosingRequestBase:
    org.apache.http.HttpEntity entity -> entity
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    java.lang.Object clone() -> clone
org.apache.http.client.methods.HttpGet -> org.apache.http.client.methods.HttpGet:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpHead -> org.apache.http.client.methods.HttpHead:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpOptions -> org.apache.http.client.methods.HttpOptions:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
    java.util.Set getAllowedMethods(org.apache.http.HttpResponse) -> getAllowedMethods
org.apache.http.client.methods.HttpPatch -> org.apache.http.client.methods.HttpPatch:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpPost -> org.apache.http.client.methods.HttpPost:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpPut -> org.apache.http.client.methods.HttpPut:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpRequestBase -> org.apache.http.client.methods.HttpRequestBase:
    java.util.concurrent.locks.Lock abortLock -> abortLock
    boolean aborted -> aborted
    java.net.URI uri -> uri
    org.apache.http.conn.ClientConnectionRequest connRequest -> connRequest
    org.apache.http.conn.ConnectionReleaseTrigger releaseTrigger -> releaseTrigger
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.net.URI getURI() -> getURI
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
    void setURI(java.net.URI) -> setURI
    void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) -> setConnectionRequest
    void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    void cleanup() -> cleanup
    void abort() -> abort
    boolean isAborted() -> isAborted
    void reset() -> reset
    void releaseConnection() -> releaseConnection
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
org.apache.http.client.methods.HttpTrace -> org.apache.http.client.methods.HttpTrace:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpUriRequest -> org.apache.http.client.methods.HttpUriRequest:
    java.lang.String getMethod() -> getMethod
    java.net.URI getURI() -> getURI
    void abort() -> abort
    boolean isAborted() -> isAborted
org.apache.http.client.params.AllClientPNames -> org.apache.http.client.params.AllClientPNames:
org.apache.http.client.params.AuthPolicy -> org.apache.http.client.params.AuthPolicy:
    java.lang.String NTLM -> NTLM
    java.lang.String DIGEST -> DIGEST
    java.lang.String BASIC -> BASIC
    java.lang.String SPNEGO -> SPNEGO
    java.lang.String KERBEROS -> KERBEROS
org.apache.http.client.params.ClientPNames -> org.apache.http.client.params.ClientPNames:
    java.lang.String CONNECTION_MANAGER_FACTORY_CLASS_NAME -> CONNECTION_MANAGER_FACTORY_CLASS_NAME
    java.lang.String HANDLE_REDIRECTS -> HANDLE_REDIRECTS
    java.lang.String REJECT_RELATIVE_REDIRECT -> REJECT_RELATIVE_REDIRECT
    java.lang.String MAX_REDIRECTS -> MAX_REDIRECTS
    java.lang.String ALLOW_CIRCULAR_REDIRECTS -> ALLOW_CIRCULAR_REDIRECTS
    java.lang.String HANDLE_AUTHENTICATION -> HANDLE_AUTHENTICATION
    java.lang.String COOKIE_POLICY -> COOKIE_POLICY
    java.lang.String VIRTUAL_HOST -> VIRTUAL_HOST
    java.lang.String DEFAULT_HEADERS -> DEFAULT_HEADERS
    java.lang.String DEFAULT_HOST -> DEFAULT_HOST
    java.lang.String CONN_MANAGER_TIMEOUT -> CONN_MANAGER_TIMEOUT
org.apache.http.client.params.ClientParamBean -> org.apache.http.client.params.ClientParamBean:
    void setConnectionManagerFactoryClassName(java.lang.String) -> setConnectionManagerFactoryClassName
    void setHandleRedirects(boolean) -> setHandleRedirects
    void setRejectRelativeRedirect(boolean) -> setRejectRelativeRedirect
    void setMaxRedirects(int) -> setMaxRedirects
    void setAllowCircularRedirects(boolean) -> setAllowCircularRedirects
    void setHandleAuthentication(boolean) -> setHandleAuthentication
    void setCookiePolicy(java.lang.String) -> setCookiePolicy
    void setVirtualHost(org.apache.http.HttpHost) -> setVirtualHost
    void setDefaultHeaders(java.util.Collection) -> setDefaultHeaders
    void setDefaultHost(org.apache.http.HttpHost) -> setDefaultHost
    void setConnectionManagerTimeout(long) -> setConnectionManagerTimeout
org.apache.http.client.params.CookiePolicy -> org.apache.http.client.params.CookiePolicy:
    java.lang.String BROWSER_COMPATIBILITY -> BROWSER_COMPATIBILITY
    java.lang.String NETSCAPE -> NETSCAPE
    java.lang.String RFC_2109 -> RFC_2109
    java.lang.String RFC_2965 -> RFC_2965
    java.lang.String BEST_MATCH -> BEST_MATCH
    java.lang.String IGNORE_COOKIES -> IGNORE_COOKIES
org.apache.http.client.params.HttpClientParams -> org.apache.http.client.params.HttpClientParams:
    boolean isRedirecting(org.apache.http.params.HttpParams) -> isRedirecting
    void setRedirecting(org.apache.http.params.HttpParams,boolean) -> setRedirecting
    boolean isAuthenticating(org.apache.http.params.HttpParams) -> isAuthenticating
    void setAuthenticating(org.apache.http.params.HttpParams,boolean) -> setAuthenticating
    java.lang.String getCookiePolicy(org.apache.http.params.HttpParams) -> getCookiePolicy
    void setCookiePolicy(org.apache.http.params.HttpParams,java.lang.String) -> setCookiePolicy
    void setConnectionManagerTimeout(org.apache.http.params.HttpParams,long) -> setConnectionManagerTimeout
    long getConnectionManagerTimeout(org.apache.http.params.HttpParams) -> getConnectionManagerTimeout
org.apache.http.client.protocol.ClientContext -> org.apache.http.client.protocol.ClientContext:
    java.lang.String SCHEME_REGISTRY -> SCHEME_REGISTRY
    java.lang.String COOKIESPEC_REGISTRY -> COOKIESPEC_REGISTRY
    java.lang.String COOKIE_SPEC -> COOKIE_SPEC
    java.lang.String COOKIE_ORIGIN -> COOKIE_ORIGIN
    java.lang.String COOKIE_STORE -> COOKIE_STORE
    java.lang.String AUTHSCHEME_REGISTRY -> AUTHSCHEME_REGISTRY
    java.lang.String CREDS_PROVIDER -> CREDS_PROVIDER
    java.lang.String AUTH_CACHE -> AUTH_CACHE
    java.lang.String TARGET_AUTH_STATE -> TARGET_AUTH_STATE
    java.lang.String PROXY_AUTH_STATE -> PROXY_AUTH_STATE
    java.lang.String AUTH_SCHEME_PREF -> AUTH_SCHEME_PREF
    java.lang.String USER_TOKEN -> USER_TOKEN
org.apache.http.client.protocol.ClientContextConfigurer -> org.apache.http.client.protocol.ClientContextConfigurer:
    org.apache.http.protocol.HttpContext context -> context
    void setCookieSpecRegistry(org.apache.http.cookie.CookieSpecRegistry) -> setCookieSpecRegistry
    void setAuthSchemeRegistry(org.apache.http.auth.AuthSchemeRegistry) -> setAuthSchemeRegistry
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
org.apache.http.client.protocol.RequestAcceptEncoding -> org.apache.http.client.protocol.RequestAcceptEncoding:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestAddCookies -> org.apache.http.client.protocol.RequestAddCookies:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestAuthCache -> org.apache.http.client.protocol.RequestAuthCache:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void doPreemptiveAuth(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.auth.AuthState,org.apache.http.client.CredentialsProvider) -> doPreemptiveAuth
org.apache.http.client.protocol.RequestAuthenticationBase -> org.apache.http.client.protocol.RequestAuthenticationBase:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.auth.AuthState,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void ensureAuthScheme(org.apache.http.auth.AuthScheme) -> ensureAuthScheme
    org.apache.http.Header authenticate(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
org.apache.http.client.protocol.RequestAuthenticationBase$1 -> org.apache.http.client.protocol.RequestAuthenticationBase$1:
    int[] $SwitchMap$org$apache$http$auth$AuthProtocolState -> $SwitchMap$org$apache$http$auth$AuthProtocolState
org.apache.http.client.protocol.RequestClientConnControl -> org.apache.http.client.protocol.RequestClientConnControl:
    org.apache.commons.logging.Log log -> log
    java.lang.String PROXY_CONN_DIRECTIVE -> PROXY_CONN_DIRECTIVE
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestDefaultHeaders -> org.apache.http.client.protocol.RequestDefaultHeaders:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestProxyAuthentication -> org.apache.http.client.protocol.RequestProxyAuthentication:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestTargetAuthentication -> org.apache.http.client.protocol.RequestTargetAuthentication:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.ResponseAuthCache -> org.apache.http.client.protocol.ResponseAuthCache:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    boolean isCachable(org.apache.http.auth.AuthState) -> isCachable
    void cache(org.apache.http.client.AuthCache,org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> cache
    void uncache(org.apache.http.client.AuthCache,org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> uncache
org.apache.http.client.protocol.ResponseAuthCache$1 -> org.apache.http.client.protocol.ResponseAuthCache$1:
    int[] $SwitchMap$org$apache$http$auth$AuthProtocolState -> $SwitchMap$org$apache$http$auth$AuthProtocolState
org.apache.http.client.protocol.ResponseContentEncoding -> org.apache.http.client.protocol.ResponseContentEncoding:
    java.lang.String UNCOMPRESSED -> UNCOMPRESSED
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.ResponseProcessCookies -> org.apache.http.client.protocol.ResponseProcessCookies:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    void processCookies(org.apache.http.HeaderIterator,org.apache.http.cookie.CookieSpec,org.apache.http.cookie.CookieOrigin,org.apache.http.client.CookieStore) -> processCookies
org.apache.http.client.utils.CloneUtils -> org.apache.http.client.utils.CloneUtils:
    java.lang.Object clone(java.lang.Object) -> clone
org.apache.http.client.utils.HttpClientUtils -> org.apache.http.client.utils.HttpClientUtils:
    void closeQuietly(org.apache.http.HttpResponse) -> closeQuietly
    void closeQuietly(org.apache.http.client.HttpClient) -> closeQuietly
org.apache.http.client.utils.Idn -> org.apache.http.client.utils.Idn:
    java.lang.String toUnicode(java.lang.String) -> toUnicode
org.apache.http.client.utils.JdkIdn -> org.apache.http.client.utils.JdkIdn:
    java.lang.reflect.Method toUnicode -> toUnicode
    java.lang.String toUnicode(java.lang.String) -> toUnicode
org.apache.http.client.utils.Punycode -> org.apache.http.client.utils.Punycode:
    org.apache.http.client.utils.Idn impl -> impl
    java.lang.String toUnicode(java.lang.String) -> toUnicode
org.apache.http.client.utils.Rfc3492Idn -> org.apache.http.client.utils.Rfc3492Idn:
    int base -> base
    int tmin -> tmin
    int tmax -> tmax
    int skew -> skew
    int damp -> damp
    int initial_bias -> initial_bias
    int initial_n -> initial_n
    char delimiter -> delimiter
    java.lang.String ACE_PREFIX -> ACE_PREFIX
    int adapt(int,int,boolean) -> adapt
    int digit(char) -> digit
    java.lang.String toUnicode(java.lang.String) -> toUnicode
    java.lang.String decode(java.lang.String) -> decode
org.apache.http.client.utils.URIBuilder -> org.apache.http.client.utils.URIBuilder:
    java.lang.String scheme -> scheme
    java.lang.String encodedSchemeSpecificPart -> encodedSchemeSpecificPart
    java.lang.String encodedAuthority -> encodedAuthority
    java.lang.String userInfo -> userInfo
    java.lang.String encodedUserInfo -> encodedUserInfo
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    java.lang.String encodedPath -> encodedPath
    java.lang.String encodedQuery -> encodedQuery
    java.util.List queryParams -> queryParams
    java.lang.String fragment -> fragment
    java.lang.String encodedFragment -> encodedFragment
    java.util.List parseQuery(java.lang.String,java.nio.charset.Charset) -> parseQuery
    java.net.URI build() -> build
    java.lang.String buildString() -> buildString
    void digestURI(java.net.URI) -> digestURI
    java.lang.String encodeUserInfo(java.lang.String) -> encodeUserInfo
    java.lang.String encodePath(java.lang.String) -> encodePath
    java.lang.String encodeQuery(java.util.List) -> encodeQuery
    java.lang.String encodeFragment(java.lang.String) -> encodeFragment
    org.apache.http.client.utils.URIBuilder setScheme(java.lang.String) -> setScheme
    org.apache.http.client.utils.URIBuilder setUserInfo(java.lang.String) -> setUserInfo
    org.apache.http.client.utils.URIBuilder setUserInfo(java.lang.String,java.lang.String) -> setUserInfo
    org.apache.http.client.utils.URIBuilder setHost(java.lang.String) -> setHost
    org.apache.http.client.utils.URIBuilder setPort(int) -> setPort
    org.apache.http.client.utils.URIBuilder setPath(java.lang.String) -> setPath
    org.apache.http.client.utils.URIBuilder removeQuery() -> removeQuery
    org.apache.http.client.utils.URIBuilder setQuery(java.lang.String) -> setQuery
    org.apache.http.client.utils.URIBuilder addParameter(java.lang.String,java.lang.String) -> addParameter
    org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String) -> setParameter
    org.apache.http.client.utils.URIBuilder setFragment(java.lang.String) -> setFragment
    java.lang.String getScheme() -> getScheme
    java.lang.String getUserInfo() -> getUserInfo
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
    java.util.List getQueryParams() -> getQueryParams
    java.lang.String getFragment() -> getFragment
    java.lang.String toString() -> toString
    java.lang.String normalizePath(java.lang.String) -> normalizePath
org.apache.http.client.utils.URIUtils -> org.apache.http.client.utils.URIUtils:
    java.net.URI createURI(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> createURI
    java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean) -> rewriteURI
    java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost) -> rewriteURI
    java.net.URI rewriteURI(java.net.URI) -> rewriteURI
    java.net.URI resolve(java.net.URI,java.lang.String) -> resolve
    java.net.URI resolve(java.net.URI,java.net.URI) -> resolve
    java.net.URI resolveReferenceStartingWithQueryString(java.net.URI,java.net.URI) -> resolveReferenceStartingWithQueryString
    java.net.URI removeDotSegments(java.net.URI) -> removeDotSegments
    org.apache.http.HttpHost extractHost(java.net.URI) -> extractHost
org.apache.http.client.utils.URLEncodedUtils -> org.apache.http.client.utils.URLEncodedUtils:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String PARAMETER_SEPARATOR -> PARAMETER_SEPARATOR
    java.lang.String NAME_VALUE_SEPARATOR -> NAME_VALUE_SEPARATOR
    char[] DELIM -> DELIM
    java.util.BitSet UNRESERVED -> UNRESERVED
    java.util.BitSet PUNCT -> PUNCT
    java.util.BitSet USERINFO -> USERINFO
    java.util.BitSet PATHSAFE -> PATHSAFE
    java.util.BitSet FRAGMENT -> FRAGMENT
    java.util.BitSet RESERVED -> RESERVED
    java.util.BitSet URLENCODER -> URLENCODER
    int RADIX -> RADIX
    java.util.List parse(java.net.URI,java.lang.String) -> parse
    java.util.List parse(org.apache.http.HttpEntity) -> parse
    boolean isEncoded(org.apache.http.HttpEntity) -> isEncoded
    void parse(java.util.List,java.util.Scanner,java.lang.String) -> parse
    java.util.List parse(java.lang.String,java.nio.charset.Charset) -> parse
    java.lang.String format(java.util.List,java.lang.String) -> format
    java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> format
    java.lang.String urlencode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> urlencode
    java.lang.String urldecode(java.lang.String,java.nio.charset.Charset,boolean) -> urldecode
    java.lang.String decodeFormFields(java.lang.String,java.lang.String) -> decodeFormFields
    java.lang.String decodeFormFields(java.lang.String,java.nio.charset.Charset) -> decodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.lang.String) -> encodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> encodeFormFields
    java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> encUserInfo
    java.lang.String encFragment(java.lang.String,java.nio.charset.Charset) -> encFragment
    java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> encPath
org.apache.http.concurrent.BasicFuture -> org.apache.http.concurrent.BasicFuture:
    org.apache.http.concurrent.FutureCallback callback -> callback
    boolean completed -> completed
    boolean cancelled -> cancelled
    java.lang.Object result -> result
    java.lang.Exception ex -> ex
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object getResult() -> getResult
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    boolean completed(java.lang.Object) -> completed
    boolean failed(java.lang.Exception) -> failed
    boolean cancel(boolean) -> cancel
    boolean cancel() -> cancel
org.apache.http.concurrent.Cancellable -> org.apache.http.concurrent.Cancellable:
    boolean cancel() -> cancel
org.apache.http.concurrent.FutureCallback -> org.apache.http.concurrent.FutureCallback:
    void completed(java.lang.Object) -> completed
    void failed(java.lang.Exception) -> failed
    void cancelled() -> cancelled
org.apache.http.conn.BasicEofSensorWatcher -> org.apache.http.conn.BasicEofSensorWatcher:
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    boolean attemptReuse -> attemptReuse
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
org.apache.http.conn.BasicManagedEntity -> org.apache.http.conn.BasicManagedEntity:
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    boolean attemptReuse -> attemptReuse
    boolean isRepeatable() -> isRepeatable
    java.io.InputStream getContent() -> getContent
    void ensureConsumed() -> ensureConsumed
    void consumeContent() -> consumeContent
    void writeTo(java.io.OutputStream) -> writeTo
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
    void releaseManagedConnection() -> releaseManagedConnection
org.apache.http.conn.ClientConnectionManager -> org.apache.http.conn.ClientConnectionManager:
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
org.apache.http.conn.ClientConnectionManagerFactory -> org.apache.http.conn.ClientConnectionManagerFactory:
    org.apache.http.conn.ClientConnectionManager newInstance(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry) -> newInstance
org.apache.http.conn.ClientConnectionOperator -> org.apache.http.conn.ClientConnectionOperator:
    org.apache.http.conn.OperatedClientConnection createConnection() -> createConnection
    void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> openConnection
    void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> updateSecureConnection
org.apache.http.conn.ClientConnectionRequest -> org.apache.http.conn.ClientConnectionRequest:
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
    void abortRequest() -> abortRequest
org.apache.http.conn.ConnectTimeoutException -> org.apache.http.conn.ConnectTimeoutException:
    long serialVersionUID -> serialVersionUID
org.apache.http.conn.ConnectionKeepAliveStrategy -> org.apache.http.conn.ConnectionKeepAliveStrategy:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
org.apache.http.conn.ConnectionPoolTimeoutException -> org.apache.http.conn.ConnectionPoolTimeoutException:
    long serialVersionUID -> serialVersionUID
org.apache.http.conn.ConnectionReleaseTrigger -> org.apache.http.conn.ConnectionReleaseTrigger:
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.conn.DnsResolver -> org.apache.http.conn.DnsResolver:
    java.net.InetAddress[] resolve(java.lang.String) -> resolve
org.apache.http.conn.EofSensorInputStream -> org.apache.http.conn.EofSensorInputStream:
    java.io.InputStream wrappedStream -> wrappedStream
    boolean selfClosed -> selfClosed
    org.apache.http.conn.EofSensorWatcher eofWatcher -> eofWatcher
    boolean isReadAllowed() -> isReadAllowed
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int available() -> available
    void close() -> close
    void checkEOF(int) -> checkEOF
    void checkClose() -> checkClose
    void checkAbort() -> checkAbort
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.conn.EofSensorWatcher -> org.apache.http.conn.EofSensorWatcher:
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
org.apache.http.conn.HttpHostConnectException -> org.apache.http.conn.HttpHostConnectException:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpHost host -> host
    org.apache.http.HttpHost getHost() -> getHost
org.apache.http.conn.HttpInetSocketAddress -> org.apache.http.conn.HttpInetSocketAddress:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpHost httphost -> httphost
    org.apache.http.HttpHost getHttpHost() -> getHttpHost
    java.lang.String toString() -> toString
org.apache.http.conn.HttpRoutedConnection -> org.apache.http.conn.HttpRoutedConnection:
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
org.apache.http.conn.ManagedClientConnection -> org.apache.http.conn.ManagedClientConnection:
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setState(java.lang.Object) -> setState
    java.lang.Object getState() -> getState
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
org.apache.http.conn.MultihomePlainSocketFactory -> org.apache.http.conn.MultihomePlainSocketFactory:
    org.apache.http.conn.MultihomePlainSocketFactory DEFAULT_FACTORY -> DEFAULT_FACTORY
    org.apache.http.conn.MultihomePlainSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.OperatedClientConnection -> org.apache.http.conn.OperatedClientConnection:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    boolean isSecure() -> isSecure
    java.net.Socket getSocket() -> getSocket
    void opening(java.net.Socket,org.apache.http.HttpHost) -> opening
    void openCompleted(boolean,org.apache.http.params.HttpParams) -> openCompleted
    void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> update
org.apache.http.conn.params.ConnConnectionPNames -> org.apache.http.conn.params.ConnConnectionPNames:
    java.lang.String MAX_STATUS_LINE_GARBAGE -> MAX_STATUS_LINE_GARBAGE
org.apache.http.conn.params.ConnConnectionParamBean -> org.apache.http.conn.params.ConnConnectionParamBean:
    void setMaxStatusLineGarbage(int) -> setMaxStatusLineGarbage
org.apache.http.conn.params.ConnManagerPNames -> org.apache.http.conn.params.ConnManagerPNames:
    java.lang.String TIMEOUT -> TIMEOUT
    java.lang.String MAX_CONNECTIONS_PER_ROUTE -> MAX_CONNECTIONS_PER_ROUTE
    java.lang.String MAX_TOTAL_CONNECTIONS -> MAX_TOTAL_CONNECTIONS
org.apache.http.conn.params.ConnManagerParamBean -> org.apache.http.conn.params.ConnManagerParamBean:
    void setTimeout(long) -> setTimeout
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    void setConnectionsPerRoute(org.apache.http.conn.params.ConnPerRouteBean) -> setConnectionsPerRoute
org.apache.http.conn.params.ConnManagerParams -> org.apache.http.conn.params.ConnManagerParams:
    int DEFAULT_MAX_TOTAL_CONNECTIONS -> DEFAULT_MAX_TOTAL_CONNECTIONS
    org.apache.http.conn.params.ConnPerRoute DEFAULT_CONN_PER_ROUTE -> DEFAULT_CONN_PER_ROUTE
    long getTimeout(org.apache.http.params.HttpParams) -> getTimeout
    void setTimeout(org.apache.http.params.HttpParams,long) -> setTimeout
    void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute) -> setMaxConnectionsPerRoute
    org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams) -> getMaxConnectionsPerRoute
    void setMaxTotalConnections(org.apache.http.params.HttpParams,int) -> setMaxTotalConnections
    int getMaxTotalConnections(org.apache.http.params.HttpParams) -> getMaxTotalConnections
org.apache.http.conn.params.ConnManagerParams$1 -> org.apache.http.conn.params.ConnManagerParams$1:
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.conn.params.ConnPerRoute -> org.apache.http.conn.params.ConnPerRoute:
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.conn.params.ConnPerRouteBean -> org.apache.http.conn.params.ConnPerRouteBean:
    int DEFAULT_MAX_CONNECTIONS_PER_ROUTE -> DEFAULT_MAX_CONNECTIONS_PER_ROUTE
    java.util.concurrent.ConcurrentHashMap maxPerHostMap -> maxPerHostMap
    int defaultMax -> defaultMax
    int getDefaultMax() -> getDefaultMax
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxForRoute
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
    void setMaxForRoutes(java.util.Map) -> setMaxForRoutes
    java.lang.String toString() -> toString
org.apache.http.conn.params.ConnRoutePNames -> org.apache.http.conn.params.ConnRoutePNames:
    java.lang.String DEFAULT_PROXY -> DEFAULT_PROXY
    java.lang.String LOCAL_ADDRESS -> LOCAL_ADDRESS
    java.lang.String FORCED_ROUTE -> FORCED_ROUTE
org.apache.http.conn.params.ConnRouteParamBean -> org.apache.http.conn.params.ConnRouteParamBean:
    void setDefaultProxy(org.apache.http.HttpHost) -> setDefaultProxy
    void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    void setForcedRoute(org.apache.http.conn.routing.HttpRoute) -> setForcedRoute
org.apache.http.conn.params.ConnRouteParams -> org.apache.http.conn.params.ConnRouteParams:
    org.apache.http.HttpHost NO_HOST -> NO_HOST
    org.apache.http.conn.routing.HttpRoute NO_ROUTE -> NO_ROUTE
    org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams) -> getDefaultProxy
    void setDefaultProxy(org.apache.http.params.HttpParams,org.apache.http.HttpHost) -> setDefaultProxy
    org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams) -> getForcedRoute
    void setForcedRoute(org.apache.http.params.HttpParams,org.apache.http.conn.routing.HttpRoute) -> setForcedRoute
    java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams) -> getLocalAddress
    void setLocalAddress(org.apache.http.params.HttpParams,java.net.InetAddress) -> setLocalAddress
org.apache.http.conn.routing.BasicRouteDirector -> org.apache.http.conn.routing.BasicRouteDirector:
    int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> nextStep
    int firstStep(org.apache.http.conn.routing.RouteInfo) -> firstStep
    int directStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> directStep
    int proxiedStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> proxiedStep
org.apache.http.conn.routing.HttpRoute -> org.apache.http.conn.routing.HttpRoute:
    org.apache.http.HttpHost[] EMPTY_HTTP_HOST_ARRAY -> EMPTY_HTTP_HOST_ARRAY
    org.apache.http.HttpHost targetHost -> targetHost
    java.net.InetAddress localAddress -> localAddress
    org.apache.http.HttpHost[] proxyChain -> proxyChain
    org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled -> tunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType layered -> layered
    boolean secure -> secure
    org.apache.http.HttpHost[] toChain(org.apache.http.HttpHost) -> toChain
    org.apache.http.HttpHost[] toChain(org.apache.http.HttpHost[]) -> toChain
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.conn.routing.HttpRouteDirector -> org.apache.http.conn.routing.HttpRouteDirector:
    int UNREACHABLE -> UNREACHABLE
    int COMPLETE -> COMPLETE
    int CONNECT_TARGET -> CONNECT_TARGET
    int CONNECT_PROXY -> CONNECT_PROXY
    int TUNNEL_TARGET -> TUNNEL_TARGET
    int TUNNEL_PROXY -> TUNNEL_PROXY
    int LAYER_PROTOCOL -> LAYER_PROTOCOL
    int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> nextStep
org.apache.http.conn.routing.HttpRoutePlanner -> org.apache.http.conn.routing.HttpRoutePlanner:
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
org.apache.http.conn.routing.RouteInfo -> org.apache.http.conn.routing.RouteInfo:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
org.apache.http.conn.routing.RouteInfo$LayerType -> org.apache.http.conn.routing.RouteInfo$LayerType:
    org.apache.http.conn.routing.RouteInfo$LayerType PLAIN -> PLAIN
    org.apache.http.conn.routing.RouteInfo$LayerType LAYERED -> LAYERED
    org.apache.http.conn.routing.RouteInfo$LayerType[] $VALUES -> $VALUES
    org.apache.http.conn.routing.RouteInfo$LayerType[] values() -> values
    org.apache.http.conn.routing.RouteInfo$LayerType valueOf(java.lang.String) -> valueOf
org.apache.http.conn.routing.RouteInfo$TunnelType -> org.apache.http.conn.routing.RouteInfo$TunnelType:
    org.apache.http.conn.routing.RouteInfo$TunnelType PLAIN -> PLAIN
    org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED -> TUNNELLED
    org.apache.http.conn.routing.RouteInfo$TunnelType[] $VALUES -> $VALUES
    org.apache.http.conn.routing.RouteInfo$TunnelType[] values() -> values
    org.apache.http.conn.routing.RouteInfo$TunnelType valueOf(java.lang.String) -> valueOf
org.apache.http.conn.routing.RouteTracker -> org.apache.http.conn.routing.RouteTracker:
    org.apache.http.HttpHost targetHost -> targetHost
    java.net.InetAddress localAddress -> localAddress
    boolean connected -> connected
    org.apache.http.HttpHost[] proxyChain -> proxyChain
    org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled -> tunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType layered -> layered
    boolean secure -> secure
    void reset() -> reset
    void connectTarget(boolean) -> connectTarget
    void connectProxy(org.apache.http.HttpHost,boolean) -> connectProxy
    void tunnelTarget(boolean) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean) -> tunnelProxy
    void layerProtocol(boolean) -> layerProtocol
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    boolean isConnected() -> isConnected
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute toRoute() -> toRoute
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.conn.scheme.HostNameResolver -> org.apache.http.conn.scheme.HostNameResolver:
    java.net.InetAddress resolve(java.lang.String) -> resolve
org.apache.http.conn.scheme.LayeredSchemeSocketFactory -> org.apache.http.conn.scheme.LayeredSchemeSocketFactory:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
org.apache.http.conn.scheme.LayeredSocketFactory -> org.apache.http.conn.scheme.LayeredSocketFactory:
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.apache.http.conn.scheme.LayeredSocketFactoryAdaptor -> org.apache.http.conn.scheme.LayeredSocketFactoryAdaptor:
    org.apache.http.conn.scheme.LayeredSchemeSocketFactory factory -> factory
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.apache.http.conn.scheme.PlainSocketFactory -> org.apache.http.conn.scheme.PlainSocketFactory:
    org.apache.http.conn.scheme.HostNameResolver nameResolver -> nameResolver
    org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
org.apache.http.conn.scheme.Scheme -> org.apache.http.conn.scheme.Scheme:
    java.lang.String name -> name
    org.apache.http.conn.scheme.SchemeSocketFactory socketFactory -> socketFactory
    int defaultPort -> defaultPort
    boolean layered -> layered
    java.lang.String stringRep -> stringRep
    int getDefaultPort() -> getDefaultPort
    org.apache.http.conn.scheme.SocketFactory getSocketFactory() -> getSocketFactory
    org.apache.http.conn.scheme.SchemeSocketFactory getSchemeSocketFactory() -> getSchemeSocketFactory
    java.lang.String getName() -> getName
    boolean isLayered() -> isLayered
    int resolvePort(int) -> resolvePort
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.http.conn.scheme.SchemeLayeredSocketFactory -> org.apache.http.conn.scheme.SchemeLayeredSocketFactory:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor -> org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor:
    org.apache.http.conn.scheme.LayeredSocketFactory factory -> factory
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2 -> org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2:
    org.apache.http.conn.scheme.LayeredSchemeSocketFactory factory -> factory
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
org.apache.http.conn.scheme.SchemeRegistry -> org.apache.http.conn.scheme.SchemeRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSchemes -> registeredSchemes
    org.apache.http.conn.scheme.Scheme getScheme(java.lang.String) -> getScheme
    org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost) -> getScheme
    org.apache.http.conn.scheme.Scheme get(java.lang.String) -> get
    org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme) -> register
    org.apache.http.conn.scheme.Scheme unregister(java.lang.String) -> unregister
    java.util.List getSchemeNames() -> getSchemeNames
    void setItems(java.util.Map) -> setItems
org.apache.http.conn.scheme.SchemeSocketFactory -> org.apache.http.conn.scheme.SchemeSocketFactory:
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor -> org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor:
    org.apache.http.conn.scheme.SocketFactory factory -> factory
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    org.apache.http.conn.scheme.SocketFactory getFactory() -> getFactory
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.http.conn.scheme.SocketFactory -> org.apache.http.conn.scheme.SocketFactory:
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.scheme.SocketFactoryAdaptor -> org.apache.http.conn.scheme.SocketFactoryAdaptor:
    org.apache.http.conn.scheme.SchemeSocketFactory factory -> factory
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    org.apache.http.conn.scheme.SchemeSocketFactory getFactory() -> getFactory
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.http.conn.ssl.AbstractVerifier -> org.apache.http.conn.ssl.AbstractVerifier:
    java.lang.String[] BAD_COUNTRY_2LDS -> BAD_COUNTRY_2LDS
    void verify(java.lang.String,javax.net.ssl.SSLSocket) -> verify
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    void verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean) -> verify
    boolean acceptableCountryWildcard(java.lang.String) -> acceptableCountryWildcard
    java.lang.String[] getCNs(java.security.cert.X509Certificate) -> getCNs
    java.lang.String[] getSubjectAlts(java.security.cert.X509Certificate,java.lang.String) -> getSubjectAlts
    java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate) -> getDNSSubjectAlts
    int countDots(java.lang.String) -> countDots
    boolean isIPAddress(java.lang.String) -> isIPAddress
org.apache.http.conn.ssl.AllowAllHostnameVerifier -> org.apache.http.conn.ssl.AllowAllHostnameVerifier:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    java.lang.String toString() -> toString
org.apache.http.conn.ssl.BrowserCompatHostnameVerifier -> org.apache.http.conn.ssl.BrowserCompatHostnameVerifier:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    java.lang.String toString() -> toString
org.apache.http.conn.ssl.SSLInitializationException -> org.apache.http.conn.ssl.SSLInitializationException:
    long serialVersionUID -> serialVersionUID
org.apache.http.conn.ssl.SSLSocketFactory -> org.apache.http.conn.ssl.SSLSocketFactory:
    java.lang.String TLS -> TLS
    java.lang.String SSL -> SSL
    java.lang.String SSLV2 -> SSLV2
    org.apache.http.conn.ssl.X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER -> ALLOW_ALL_HOSTNAME_VERIFIER
    org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER -> BROWSER_COMPATIBLE_HOSTNAME_VERIFIER
    org.apache.http.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER -> STRICT_HOSTNAME_VERIFIER
    javax.net.ssl.SSLSocketFactory socketfactory -> socketfactory
    org.apache.http.conn.scheme.HostNameResolver nameResolver -> nameResolver
    org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier -> hostnameVerifier
    org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory() -> getSocketFactory
    org.apache.http.conn.ssl.SSLSocketFactory getSystemSocketFactory() -> getSystemSocketFactory
    javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy) -> createSSLContext
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
    void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier) -> setHostnameVerifier
    org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    void prepareSocket(javax.net.ssl.SSLSocket) -> prepareSocket
org.apache.http.conn.ssl.StrictHostnameVerifier -> org.apache.http.conn.ssl.StrictHostnameVerifier:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    java.lang.String toString() -> toString
org.apache.http.conn.ssl.TrustManagerDecorator -> org.apache.http.conn.ssl.TrustManagerDecorator:
    javax.net.ssl.X509TrustManager trustManager -> trustManager
    org.apache.http.conn.ssl.TrustStrategy trustStrategy -> trustStrategy
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
org.apache.http.conn.ssl.TrustSelfSignedStrategy -> org.apache.http.conn.ssl.TrustSelfSignedStrategy:
    boolean isTrusted(java.security.cert.X509Certificate[],java.lang.String) -> isTrusted
org.apache.http.conn.ssl.TrustStrategy -> org.apache.http.conn.ssl.TrustStrategy:
    boolean isTrusted(java.security.cert.X509Certificate[],java.lang.String) -> isTrusted
org.apache.http.conn.ssl.X509HostnameVerifier -> org.apache.http.conn.ssl.X509HostnameVerifier:
    void verify(java.lang.String,javax.net.ssl.SSLSocket) -> verify
    void verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
org.apache.http.conn.util.InetAddressUtils -> org.apache.http.conn.util.InetAddressUtils:
    java.util.regex.Pattern IPV4_PATTERN -> IPV4_PATTERN
    java.util.regex.Pattern IPV6_STD_PATTERN -> IPV6_STD_PATTERN
    java.util.regex.Pattern IPV6_HEX_COMPRESSED_PATTERN -> IPV6_HEX_COMPRESSED_PATTERN
    char COLON_CHAR -> COLON_CHAR
    int MAX_COLON_COUNT -> MAX_COLON_COUNT
    boolean isIPv4Address(java.lang.String) -> isIPv4Address
    boolean isIPv6StdAddress(java.lang.String) -> isIPv6StdAddress
    boolean isIPv6HexCompressedAddress(java.lang.String) -> isIPv6HexCompressedAddress
    boolean isIPv6Address(java.lang.String) -> isIPv6Address
org.apache.http.cookie.ClientCookie -> org.apache.http.cookie.ClientCookie:
    java.lang.String VERSION_ATTR -> VERSION_ATTR
    java.lang.String PATH_ATTR -> PATH_ATTR
    java.lang.String DOMAIN_ATTR -> DOMAIN_ATTR
    java.lang.String MAX_AGE_ATTR -> MAX_AGE_ATTR
    java.lang.String SECURE_ATTR -> SECURE_ATTR
    java.lang.String COMMENT_ATTR -> COMMENT_ATTR
    java.lang.String EXPIRES_ATTR -> EXPIRES_ATTR
    java.lang.String PORT_ATTR -> PORT_ATTR
    java.lang.String COMMENTURL_ATTR -> COMMENTURL_ATTR
    java.lang.String DISCARD_ATTR -> DISCARD_ATTR
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    boolean containsAttribute(java.lang.String) -> containsAttribute
org.apache.http.cookie.Cookie -> org.apache.http.cookie.Cookie:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String getComment() -> getComment
    java.lang.String getCommentURL() -> getCommentURL
    java.util.Date getExpiryDate() -> getExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    java.lang.String getPath() -> getPath
    int[] getPorts() -> getPorts
    boolean isSecure() -> isSecure
    int getVersion() -> getVersion
    boolean isExpired(java.util.Date) -> isExpired
org.apache.http.cookie.CookieAttributeHandler -> org.apache.http.cookie.CookieAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.cookie.CookieIdentityComparator -> org.apache.http.cookie.CookieIdentityComparator:
    long serialVersionUID -> serialVersionUID
    int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.http.cookie.CookieOrigin -> org.apache.http.cookie.CookieOrigin:
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    boolean secure -> secure
    java.lang.String getHost() -> getHost
    java.lang.String getPath() -> getPath
    int getPort() -> getPort
    boolean isSecure() -> isSecure
    java.lang.String toString() -> toString
org.apache.http.cookie.CookiePathComparator -> org.apache.http.cookie.CookiePathComparator:
    long serialVersionUID -> serialVersionUID
    java.lang.String normalizePath(org.apache.http.cookie.Cookie) -> normalizePath
    int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.http.cookie.CookieRestrictionViolationException -> org.apache.http.cookie.CookieRestrictionViolationException:
    long serialVersionUID -> serialVersionUID
org.apache.http.cookie.CookieSpec -> org.apache.http.cookie.CookieSpec:
    int getVersion() -> getVersion
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    java.util.List formatCookies(java.util.List) -> formatCookies
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.cookie.CookieSpecFactory -> org.apache.http.cookie.CookieSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.cookie.CookieSpecRegistry -> org.apache.http.cookie.CookieSpecRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSpecs -> registeredSpecs
    void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory) -> register
    void unregister(java.lang.String) -> unregister
    org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams) -> getCookieSpec
    org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String) -> getCookieSpec
    java.util.List getSpecNames() -> getSpecNames
    void setItems(java.util.Map) -> setItems
org.apache.http.cookie.MalformedCookieException -> org.apache.http.cookie.MalformedCookieException:
    long serialVersionUID -> serialVersionUID
org.apache.http.cookie.SM -> org.apache.http.cookie.SM:
    java.lang.String COOKIE -> COOKIE
    java.lang.String COOKIE2 -> COOKIE2
    java.lang.String SET_COOKIE -> SET_COOKIE
    java.lang.String SET_COOKIE2 -> SET_COOKIE2
org.apache.http.cookie.SetCookie -> org.apache.http.cookie.SetCookie:
    void setValue(java.lang.String) -> setValue
    void setComment(java.lang.String) -> setComment
    void setExpiryDate(java.util.Date) -> setExpiryDate
    void setDomain(java.lang.String) -> setDomain
    void setPath(java.lang.String) -> setPath
    void setSecure(boolean) -> setSecure
    void setVersion(int) -> setVersion
org.apache.http.cookie.SetCookie2 -> org.apache.http.cookie.SetCookie2:
    void setCommentURL(java.lang.String) -> setCommentURL
    void setPorts(int[]) -> setPorts
    void setDiscard(boolean) -> setDiscard
org.apache.http.cookie.params.CookieSpecPNames -> org.apache.http.cookie.params.CookieSpecPNames:
    java.lang.String DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String SINGLE_COOKIE_HEADER -> SINGLE_COOKIE_HEADER
org.apache.http.cookie.params.CookieSpecParamBean -> org.apache.http.cookie.params.CookieSpecParamBean:
    void setDatePatterns(java.util.Collection) -> setDatePatterns
    void setSingleHeader(boolean) -> setSingleHeader
org.apache.http.entity.AbstractHttpEntity -> org.apache.http.entity.AbstractHttpEntity:
    org.apache.http.Header contentType -> contentType
    org.apache.http.Header contentEncoding -> contentEncoding
    boolean chunked -> chunked
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    boolean isChunked() -> isChunked
    void setContentType(org.apache.http.Header) -> setContentType
    void setContentType(java.lang.String) -> setContentType
    void setContentEncoding(org.apache.http.Header) -> setContentEncoding
    void setContentEncoding(java.lang.String) -> setContentEncoding
    void setChunked(boolean) -> setChunked
    void consumeContent() -> consumeContent
org.apache.http.entity.BasicHttpEntity -> org.apache.http.entity.BasicHttpEntity:
    java.io.InputStream content -> content
    long length -> length
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isRepeatable() -> isRepeatable
    void setContentLength(long) -> setContentLength
    void setContent(java.io.InputStream) -> setContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.entity.BufferedHttpEntity -> org.apache.http.entity.BufferedHttpEntity:
    byte[] buffer -> buffer
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isChunked() -> isChunked
    boolean isRepeatable() -> isRepeatable
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
org.apache.http.entity.ByteArrayEntity -> org.apache.http.entity.ByteArrayEntity:
    byte[] content -> content
    byte[] b -> b
    int off -> off
    int len -> len
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
org.apache.http.entity.ContentLengthStrategy -> org.apache.http.entity.ContentLengthStrategy:
    int IDENTITY -> IDENTITY
    int CHUNKED -> CHUNKED
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.entity.ContentProducer -> org.apache.http.entity.ContentProducer:
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.ContentType -> org.apache.http.entity.ContentType:
    long serialVersionUID -> serialVersionUID
    org.apache.http.entity.ContentType APPLICATION_ATOM_XML -> APPLICATION_ATOM_XML
    org.apache.http.entity.ContentType APPLICATION_FORM_URLENCODED -> APPLICATION_FORM_URLENCODED
    org.apache.http.entity.ContentType APPLICATION_JSON -> APPLICATION_JSON
    org.apache.http.entity.ContentType APPLICATION_OCTET_STREAM -> APPLICATION_OCTET_STREAM
    org.apache.http.entity.ContentType APPLICATION_SVG_XML -> APPLICATION_SVG_XML
    org.apache.http.entity.ContentType APPLICATION_XHTML_XML -> APPLICATION_XHTML_XML
    org.apache.http.entity.ContentType APPLICATION_XML -> APPLICATION_XML
    org.apache.http.entity.ContentType MULTIPART_FORM_DATA -> MULTIPART_FORM_DATA
    org.apache.http.entity.ContentType TEXT_HTML -> TEXT_HTML
    org.apache.http.entity.ContentType TEXT_PLAIN -> TEXT_PLAIN
    org.apache.http.entity.ContentType TEXT_XML -> TEXT_XML
    org.apache.http.entity.ContentType WILDCARD -> WILDCARD
    org.apache.http.entity.ContentType DEFAULT_TEXT -> DEFAULT_TEXT
    org.apache.http.entity.ContentType DEFAULT_BINARY -> DEFAULT_BINARY
    java.lang.String mimeType -> mimeType
    java.nio.charset.Charset charset -> charset
    java.lang.String getMimeType() -> getMimeType
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String toString() -> toString
    boolean valid(java.lang.String) -> valid
    org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.ContentType create(java.lang.String) -> create
    org.apache.http.entity.ContentType create(java.lang.String,java.lang.String) -> create
    org.apache.http.entity.ContentType create(org.apache.http.HeaderElement) -> create
    org.apache.http.entity.ContentType parse(java.lang.String) -> parse
    org.apache.http.entity.ContentType get(org.apache.http.HttpEntity) -> get
    org.apache.http.entity.ContentType getOrDefault(org.apache.http.HttpEntity) -> getOrDefault
org.apache.http.entity.EntityTemplate -> org.apache.http.entity.EntityTemplate:
    org.apache.http.entity.ContentProducer contentproducer -> contentproducer
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isRepeatable() -> isRepeatable
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
org.apache.http.entity.FileEntity -> org.apache.http.entity.FileEntity:
    java.io.File file -> file
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
org.apache.http.entity.HttpEntityWrapper -> org.apache.http.entity.HttpEntityWrapper:
    org.apache.http.HttpEntity wrappedEntity -> wrappedEntity
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.entity.InputStreamEntity -> org.apache.http.entity.InputStreamEntity:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.InputStream content -> content
    long length -> length
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.entity.SerializableEntity -> org.apache.http.entity.SerializableEntity:
    byte[] objSer -> objSer
    java.io.Serializable objRef -> objRef
    void createBytes(java.io.Serializable) -> createBytes
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.StringEntity -> org.apache.http.entity.StringEntity:
    byte[] content -> content
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
org.apache.http.entity.mime.FormBodyPart -> org.apache.http.entity.mime.FormBodyPart:
    java.lang.String name -> name
    org.apache.http.entity.mime.Header header -> header
    org.apache.http.entity.mime.content.ContentBody body -> body
    java.lang.String getName() -> getName
    org.apache.http.entity.mime.content.ContentBody getBody() -> getBody
    org.apache.http.entity.mime.Header getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisp(org.apache.http.entity.mime.content.ContentBody) -> generateContentDisp
    void generateContentType(org.apache.http.entity.mime.content.ContentBody) -> generateContentType
    void generateTransferEncoding(org.apache.http.entity.mime.content.ContentBody) -> generateTransferEncoding
org.apache.http.entity.mime.Header -> org.apache.http.entity.mime.Header:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(org.apache.http.entity.mime.MinimalField) -> addField
    java.util.List getFields() -> getFields
    org.apache.http.entity.mime.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(org.apache.http.entity.mime.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
org.apache.http.entity.mime.HttpMultipart -> org.apache.http.entity.mime.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    org.apache.http.entity.mime.HttpMultipartMode mode -> mode
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(org.apache.http.entity.mime.MinimalField,java.io.OutputStream) -> writeField
    void writeField(org.apache.http.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    org.apache.http.entity.mime.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(org.apache.http.entity.mime.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(org.apache.http.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream) -> writeTo
    long getTotalLength() -> getTotalLength
org.apache.http.entity.mime.HttpMultipart$1 -> org.apache.http.entity.mime.HttpMultipart$1:
    int[] $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode -> $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode
org.apache.http.entity.mime.HttpMultipartMode -> org.apache.http.entity.mime.HttpMultipartMode:
    org.apache.http.entity.mime.HttpMultipartMode STRICT -> STRICT
    org.apache.http.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    org.apache.http.entity.mime.HttpMultipartMode[] $VALUES -> $VALUES
    org.apache.http.entity.mime.HttpMultipartMode[] values() -> values
    org.apache.http.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
org.apache.http.entity.mime.MIME -> org.apache.http.entity.mime.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
org.apache.http.entity.mime.MinimalField -> org.apache.http.entity.mime.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
org.apache.http.entity.mime.MultipartEntity -> org.apache.http.entity.mime.MultipartEntity:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    org.apache.http.entity.mime.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(org.apache.http.entity.mime.FormBodyPart) -> addPart
    void addPart(java.lang.String,org.apache.http.entity.mime.content.ContentBody) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.AbstractContentBody -> org.apache.http.entity.mime.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
org.apache.http.entity.mime.content.ByteArrayBody -> org.apache.http.entity.mime.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.ContentBody -> org.apache.http.entity.mime.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.ContentDescriptor -> org.apache.http.entity.mime.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.FileBody -> org.apache.http.entity.mime.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
org.apache.http.entity.mime.content.InputStreamBody -> org.apache.http.entity.mime.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.apache.http.entity.mime.content.StringBody -> org.apache.http.entity.mime.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.apache.http.impl.AbstractHttpClientConnection -> org.apache.http.impl.AbstractHttpClientConnection:
    org.apache.http.impl.entity.EntitySerializer entityserializer -> entityserializer
    org.apache.http.impl.entity.EntityDeserializer entitydeserializer -> entitydeserializer
    org.apache.http.io.SessionInputBuffer inbuffer -> inbuffer
    org.apache.http.io.SessionOutputBuffer outbuffer -> outbuffer
    org.apache.http.io.EofSensor eofSensor -> eofSensor
    org.apache.http.io.HttpMessageParser responseParser -> responseParser
    org.apache.http.io.HttpMessageWriter requestWriter -> requestWriter
    org.apache.http.impl.HttpConnectionMetricsImpl metrics -> metrics
    void assertOpen() -> assertOpen
    org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    org.apache.http.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    org.apache.http.HttpResponseFactory createHttpResponseFactory() -> createHttpResponseFactory
    org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> createResponseParser
    org.apache.http.io.HttpMessageWriter createRequestWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> createRequestWriter
    org.apache.http.impl.HttpConnectionMetricsImpl createConnectionMetrics(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics) -> createConnectionMetrics
    void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> init
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    void doFlush() -> doFlush
    void flush() -> flush
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    boolean isEof() -> isEof
    boolean isStale() -> isStale
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.impl.AbstractHttpServerConnection -> org.apache.http.impl.AbstractHttpServerConnection:
    org.apache.http.impl.entity.EntitySerializer entityserializer -> entityserializer
    org.apache.http.impl.entity.EntityDeserializer entitydeserializer -> entitydeserializer
    org.apache.http.io.SessionInputBuffer inbuffer -> inbuffer
    org.apache.http.io.SessionOutputBuffer outbuffer -> outbuffer
    org.apache.http.io.EofSensor eofSensor -> eofSensor
    org.apache.http.io.HttpMessageParser requestParser -> requestParser
    org.apache.http.io.HttpMessageWriter responseWriter -> responseWriter
    org.apache.http.impl.HttpConnectionMetricsImpl metrics -> metrics
    void assertOpen() -> assertOpen
    org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    org.apache.http.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    org.apache.http.HttpRequestFactory createHttpRequestFactory() -> createHttpRequestFactory
    org.apache.http.io.HttpMessageParser createRequestParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams) -> createRequestParser
    org.apache.http.io.HttpMessageWriter createResponseWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> createResponseWriter
    org.apache.http.impl.HttpConnectionMetricsImpl createConnectionMetrics(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics) -> createConnectionMetrics
    void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> init
    org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void doFlush() -> doFlush
    void flush() -> flush
    void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    boolean isEof() -> isEof
    boolean isStale() -> isStale
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.impl.DefaultConnectionReuseStrategy -> org.apache.http.impl.DefaultConnectionReuseStrategy:
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
    org.apache.http.TokenIterator createTokenIterator(org.apache.http.HeaderIterator) -> createTokenIterator
    boolean canResponseHaveBody(org.apache.http.HttpResponse) -> canResponseHaveBody
org.apache.http.impl.DefaultHttpClientConnection -> org.apache.http.impl.DefaultHttpClientConnection:
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
org.apache.http.impl.DefaultHttpRequestFactory -> org.apache.http.impl.DefaultHttpRequestFactory:
    java.lang.String[] RFC2616_COMMON_METHODS -> RFC2616_COMMON_METHODS
    java.lang.String[] RFC2616_ENTITY_ENC_METHODS -> RFC2616_ENTITY_ENC_METHODS
    java.lang.String[] RFC2616_SPECIAL_METHODS -> RFC2616_SPECIAL_METHODS
    boolean isOneOf(java.lang.String[],java.lang.String) -> isOneOf
    org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) -> newHttpRequest
    org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
org.apache.http.impl.DefaultHttpResponseFactory -> org.apache.http.impl.DefaultHttpResponseFactory:
    org.apache.http.ReasonPhraseCatalog reasonCatalog -> reasonCatalog
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext) -> newHttpResponse
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext) -> newHttpResponse
    java.util.Locale determineLocale(org.apache.http.protocol.HttpContext) -> determineLocale
org.apache.http.impl.DefaultHttpServerConnection -> org.apache.http.impl.DefaultHttpServerConnection:
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
org.apache.http.impl.EnglishReasonPhraseCatalog -> org.apache.http.impl.EnglishReasonPhraseCatalog:
    org.apache.http.impl.EnglishReasonPhraseCatalog INSTANCE -> INSTANCE
    java.lang.String[][] REASON_PHRASES -> REASON_PHRASES
    java.lang.String getReason(int,java.util.Locale) -> getReason
    void setReason(int,java.lang.String) -> setReason
org.apache.http.impl.HttpConnectionMetricsImpl -> org.apache.http.impl.HttpConnectionMetricsImpl:
    java.lang.String REQUEST_COUNT -> REQUEST_COUNT
    java.lang.String RESPONSE_COUNT -> RESPONSE_COUNT
    java.lang.String SENT_BYTES_COUNT -> SENT_BYTES_COUNT
    java.lang.String RECEIVED_BYTES_COUNT -> RECEIVED_BYTES_COUNT
    org.apache.http.io.HttpTransportMetrics inTransportMetric -> inTransportMetric
    org.apache.http.io.HttpTransportMetrics outTransportMetric -> outTransportMetric
    long requestCount -> requestCount
    long responseCount -> responseCount
    java.util.Map metricsCache -> metricsCache
    long getReceivedBytesCount() -> getReceivedBytesCount
    long getSentBytesCount() -> getSentBytesCount
    long getRequestCount() -> getRequestCount
    void incrementRequestCount() -> incrementRequestCount
    long getResponseCount() -> getResponseCount
    void incrementResponseCount() -> incrementResponseCount
    java.lang.Object getMetric(java.lang.String) -> getMetric
    void setMetric(java.lang.String,java.lang.Object) -> setMetric
    void reset() -> reset
org.apache.http.impl.NoConnectionReuseStrategy -> org.apache.http.impl.NoConnectionReuseStrategy:
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
org.apache.http.impl.SocketHttpClientConnection -> org.apache.http.impl.SocketHttpClientConnection:
    boolean open -> open
    java.net.Socket socket -> socket
    void assertNotOpen() -> assertNotOpen
    void assertOpen() -> assertOpen
    org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    boolean isOpen() -> isOpen
    java.net.Socket getSocket() -> getSocket
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
    void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> formatAddress
    java.lang.String toString() -> toString
org.apache.http.impl.SocketHttpServerConnection -> org.apache.http.impl.SocketHttpServerConnection:
    boolean open -> open
    java.net.Socket socket -> socket
    void assertNotOpen() -> assertNotOpen
    void assertOpen() -> assertOpen
    org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    java.net.Socket getSocket() -> getSocket
    boolean isOpen() -> isOpen
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
    void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> formatAddress
    java.lang.String toString() -> toString
org.apache.http.impl.auth.AuthSchemeBase -> org.apache.http.impl.auth.AuthSchemeBase:
    org.apache.http.auth.ChallengeState challengeState -> challengeState
    void processChallenge(org.apache.http.Header) -> processChallenge
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    boolean isProxy() -> isProxy
    org.apache.http.auth.ChallengeState getChallengeState() -> getChallengeState
    java.lang.String toString() -> toString
org.apache.http.impl.auth.BasicScheme -> org.apache.http.impl.auth.BasicScheme:
    boolean complete -> complete
    java.lang.String getSchemeName() -> getSchemeName
    void processChallenge(org.apache.http.Header) -> processChallenge
    boolean isComplete() -> isComplete
    boolean isConnectionBased() -> isConnectionBased
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,java.lang.String,boolean) -> authenticate
org.apache.http.impl.auth.BasicSchemeFactory -> org.apache.http.impl.auth.BasicSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.auth.DigestScheme -> org.apache.http.impl.auth.DigestScheme:
    char[] HEXADECIMAL -> HEXADECIMAL
    boolean complete -> complete
    int QOP_UNKNOWN -> QOP_UNKNOWN
    int QOP_MISSING -> QOP_MISSING
    int QOP_AUTH_INT -> QOP_AUTH_INT
    int QOP_AUTH -> QOP_AUTH
    java.lang.String lastNonce -> lastNonce
    long nounceCount -> nounceCount
    java.lang.String cnonce -> cnonce
    java.lang.String a1 -> a1
    java.lang.String a2 -> a2
    void processChallenge(org.apache.http.Header) -> processChallenge
    boolean isComplete() -> isComplete
    java.lang.String getSchemeName() -> getSchemeName
    boolean isConnectionBased() -> isConnectionBased
    void overrideParamter(java.lang.String,java.lang.String) -> overrideParamter
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    java.security.MessageDigest createMessageDigest(java.lang.String) -> createMessageDigest
    org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> createDigestHeader
    java.lang.String getCnonce() -> getCnonce
    java.lang.String getA1() -> getA1
    java.lang.String getA2() -> getA2
    java.lang.String encode(byte[]) -> encode
    java.lang.String createCnonce() -> createCnonce
    java.lang.String toString() -> toString
org.apache.http.impl.auth.DigestSchemeFactory -> org.apache.http.impl.auth.DigestSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.auth.GGSSchemeBase -> org.apache.http.impl.auth.GGSSchemeBase:
    org.apache.commons.logging.Log log -> log
    org.apache.commons.codec.binary.Base64 base64codec -> base64codec
    boolean stripPort -> stripPort
    org.apache.http.impl.auth.GGSSchemeBase$State state -> state
    byte[] token -> token
    org.ietf.jgss.GSSManager getManager() -> getManager
    byte[] generateGSSToken(byte[],org.ietf.jgss.Oid,java.lang.String) -> generateGSSToken
    byte[] generateToken(byte[],java.lang.String) -> generateToken
    boolean isComplete() -> isComplete
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
org.apache.http.impl.auth.GGSSchemeBase$1 -> org.apache.http.impl.auth.GGSSchemeBase$1:
    int[] $SwitchMap$org$apache$http$impl$auth$GGSSchemeBase$State -> $SwitchMap$org$apache$http$impl$auth$GGSSchemeBase$State
org.apache.http.impl.auth.GGSSchemeBase$State -> org.apache.http.impl.auth.GGSSchemeBase$State:
    org.apache.http.impl.auth.GGSSchemeBase$State UNINITIATED -> UNINITIATED
    org.apache.http.impl.auth.GGSSchemeBase$State CHALLENGE_RECEIVED -> CHALLENGE_RECEIVED
    org.apache.http.impl.auth.GGSSchemeBase$State TOKEN_GENERATED -> TOKEN_GENERATED
    org.apache.http.impl.auth.GGSSchemeBase$State FAILED -> FAILED
    org.apache.http.impl.auth.GGSSchemeBase$State[] $VALUES -> $VALUES
    org.apache.http.impl.auth.GGSSchemeBase$State[] values() -> values
    org.apache.http.impl.auth.GGSSchemeBase$State valueOf(java.lang.String) -> valueOf
org.apache.http.impl.auth.HttpEntityDigester -> org.apache.http.impl.auth.HttpEntityDigester:
    java.security.MessageDigest digester -> digester
    boolean closed -> closed
    byte[] digest -> digest
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    byte[] getDigest() -> getDigest
org.apache.http.impl.auth.KerberosScheme -> org.apache.http.impl.auth.KerberosScheme:
    java.lang.String KERBEROS_OID -> KERBEROS_OID
    java.lang.String getSchemeName() -> getSchemeName
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    byte[] generateToken(byte[],java.lang.String) -> generateToken
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
org.apache.http.impl.auth.KerberosSchemeFactory -> org.apache.http.impl.auth.KerberosSchemeFactory:
    boolean stripPort -> stripPort
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    boolean isStripPort() -> isStripPort
org.apache.http.impl.auth.NTLMEngine -> org.apache.http.impl.auth.NTLMEngine:
    java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> generateType1Msg
    java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateType3Msg
org.apache.http.impl.auth.NTLMEngineException -> org.apache.http.impl.auth.NTLMEngineException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.auth.NTLMEngineImpl -> org.apache.http.impl.auth.NTLMEngineImpl:
    int FLAG_REQUEST_UNICODE_ENCODING -> FLAG_REQUEST_UNICODE_ENCODING
    int FLAG_REQUEST_TARGET -> FLAG_REQUEST_TARGET
    int FLAG_REQUEST_SIGN -> FLAG_REQUEST_SIGN
    int FLAG_REQUEST_SEAL -> FLAG_REQUEST_SEAL
    int FLAG_REQUEST_LAN_MANAGER_KEY -> FLAG_REQUEST_LAN_MANAGER_KEY
    int FLAG_REQUEST_NTLMv1 -> FLAG_REQUEST_NTLMv1
    int FLAG_DOMAIN_PRESENT -> FLAG_DOMAIN_PRESENT
    int FLAG_WORKSTATION_PRESENT -> FLAG_WORKSTATION_PRESENT
    int FLAG_REQUEST_ALWAYS_SIGN -> FLAG_REQUEST_ALWAYS_SIGN
    int FLAG_REQUEST_NTLM2_SESSION -> FLAG_REQUEST_NTLM2_SESSION
    int FLAG_REQUEST_VERSION -> FLAG_REQUEST_VERSION
    int FLAG_TARGETINFO_PRESENT -> FLAG_TARGETINFO_PRESENT
    int FLAG_REQUEST_128BIT_KEY_EXCH -> FLAG_REQUEST_128BIT_KEY_EXCH
    int FLAG_REQUEST_EXPLICIT_KEY_EXCH -> FLAG_REQUEST_EXPLICIT_KEY_EXCH
    int FLAG_REQUEST_56BIT_ENCRYPTION -> FLAG_REQUEST_56BIT_ENCRYPTION
    java.security.SecureRandom RND_GEN -> RND_GEN
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String credentialCharset -> credentialCharset
    byte[] SIGNATURE -> SIGNATURE
    java.lang.String getResponseFor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getResponseFor
    java.lang.String getType1Message(java.lang.String,java.lang.String) -> getType1Message
    java.lang.String getType3Message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],int,java.lang.String,byte[]) -> getType3Message
    java.lang.String getCredentialCharset() -> getCredentialCharset
    void setCredentialCharset(java.lang.String) -> setCredentialCharset
    java.lang.String stripDotSuffix(java.lang.String) -> stripDotSuffix
    java.lang.String convertHost(java.lang.String) -> convertHost
    java.lang.String convertDomain(java.lang.String) -> convertDomain
    int readULong(byte[],int) -> readULong
    int readUShort(byte[],int) -> readUShort
    byte[] readSecurityBuffer(byte[],int) -> readSecurityBuffer
    byte[] makeRandomChallenge() -> makeRandomChallenge
    byte[] makeSecondaryKey() -> makeSecondaryKey
    byte[] hmacMD5(byte[],byte[]) -> hmacMD5
    byte[] RC4(byte[],byte[]) -> RC4
    byte[] ntlm2SessionResponse(byte[],byte[],byte[]) -> ntlm2SessionResponse
    byte[] lmHash(java.lang.String) -> lmHash
    byte[] ntlmHash(java.lang.String) -> ntlmHash
    byte[] lmv2Hash(java.lang.String,java.lang.String,byte[]) -> lmv2Hash
    byte[] ntlmv2Hash(java.lang.String,java.lang.String,byte[]) -> ntlmv2Hash
    byte[] lmResponse(byte[],byte[]) -> lmResponse
    byte[] lmv2Response(byte[],byte[],byte[]) -> lmv2Response
    byte[] createBlob(byte[],byte[],byte[]) -> createBlob
    java.security.Key createDESKey(byte[],int) -> createDESKey
    void oddParity(byte[]) -> oddParity
    void writeULong(byte[],int,int) -> writeULong
    int F(int,int,int) -> F
    int G(int,int,int) -> G
    int H(int,int,int) -> H
    int rotintlft(int,int) -> rotintlft
    java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> generateType1Msg
    java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateType3Msg
    byte[] access$000() -> access$000
    byte[] access$100() -> access$100
    byte[] access$200(java.lang.String) -> access$200
    byte[] access$300(byte[],byte[]) -> access$300
    byte[] access$400(java.lang.String) -> access$400
    byte[] access$500(java.lang.String,java.lang.String,byte[]) -> access$500
    byte[] access$600(java.lang.String,java.lang.String,byte[]) -> access$600
    byte[] access$700(byte[],byte[],byte[]) -> access$700
    byte[] access$800(byte[],byte[],byte[]) -> access$800
    java.security.Key access$900(byte[],int) -> access$900
    byte[] access$1000() -> access$1000
    int access$1100(byte[],int) -> access$1100
    int access$1200(byte[],int) -> access$1200
    byte[] access$1300(byte[],int) -> access$1300
    java.lang.String access$1400(java.lang.String) -> access$1400
    java.lang.String access$1500(java.lang.String) -> access$1500
org.apache.http.impl.auth.NTLMEngineImpl$CipherGen -> org.apache.http.impl.auth.NTLMEngineImpl$CipherGen:
    java.lang.String domain -> domain
    java.lang.String user -> user
    java.lang.String password -> password
    byte[] challenge -> challenge
    java.lang.String target -> target
    byte[] targetInformation -> targetInformation
    byte[] clientChallenge -> clientChallenge
    byte[] clientChallenge2 -> clientChallenge2
    byte[] secondaryKey -> secondaryKey
    byte[] timestamp -> timestamp
    byte[] lmHash -> lmHash
    byte[] lmResponse -> lmResponse
    byte[] ntlmHash -> ntlmHash
    byte[] ntlmResponse -> ntlmResponse
    byte[] ntlmv2Hash -> ntlmv2Hash
    byte[] lmv2Hash -> lmv2Hash
    byte[] lmv2Response -> lmv2Response
    byte[] ntlmv2Blob -> ntlmv2Blob
    byte[] ntlmv2Response -> ntlmv2Response
    byte[] ntlm2SessionResponse -> ntlm2SessionResponse
    byte[] lm2SessionResponse -> lm2SessionResponse
    byte[] lmUserSessionKey -> lmUserSessionKey
    byte[] ntlmUserSessionKey -> ntlmUserSessionKey
    byte[] ntlmv2UserSessionKey -> ntlmv2UserSessionKey
    byte[] ntlm2SessionResponseUserSessionKey -> ntlm2SessionResponseUserSessionKey
    byte[] lanManagerSessionKey -> lanManagerSessionKey
    byte[] getClientChallenge() -> getClientChallenge
    byte[] getClientChallenge2() -> getClientChallenge2
    byte[] getSecondaryKey() -> getSecondaryKey
    byte[] getLMHash() -> getLMHash
    byte[] getLMResponse() -> getLMResponse
    byte[] getNTLMHash() -> getNTLMHash
    byte[] getNTLMResponse() -> getNTLMResponse
    byte[] getLMv2Hash() -> getLMv2Hash
    byte[] getNTLMv2Hash() -> getNTLMv2Hash
    byte[] getTimestamp() -> getTimestamp
    byte[] getNTLMv2Blob() -> getNTLMv2Blob
    byte[] getNTLMv2Response() -> getNTLMv2Response
    byte[] getLMv2Response() -> getLMv2Response
    byte[] getNTLM2SessionResponse() -> getNTLM2SessionResponse
    byte[] getLM2SessionResponse() -> getLM2SessionResponse
    byte[] getLMUserSessionKey() -> getLMUserSessionKey
    byte[] getNTLMUserSessionKey() -> getNTLMUserSessionKey
    byte[] getNTLMv2UserSessionKey() -> getNTLMv2UserSessionKey
    byte[] getNTLM2SessionResponseUserSessionKey() -> getNTLM2SessionResponseUserSessionKey
    byte[] getLanManagerSessionKey() -> getLanManagerSessionKey
org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5 -> org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5:
    byte[] ipad -> ipad
    byte[] opad -> opad
    java.security.MessageDigest md5 -> md5
    byte[] getOutput() -> getOutput
    void update(byte[]) -> update
    void update(byte[],int,int) -> update
org.apache.http.impl.auth.NTLMEngineImpl$MD4 -> org.apache.http.impl.auth.NTLMEngineImpl$MD4:
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    long count -> count
    byte[] dataBuffer -> dataBuffer
    void update(byte[]) -> update
    byte[] getOutput() -> getOutput
    void processBuffer() -> processBuffer
    void round1(int[]) -> round1
    void round2(int[]) -> round2
    void round3(int[]) -> round3
org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage -> org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage:
    byte[] messageContents -> messageContents
    int currentOutputPosition -> currentOutputPosition
    int getPreambleLength() -> getPreambleLength
    int getMessageLength() -> getMessageLength
    byte readByte(int) -> readByte
    void readBytes(byte[],int) -> readBytes
    int readUShort(int) -> readUShort
    int readULong(int) -> readULong
    byte[] readSecurityBuffer(int) -> readSecurityBuffer
    void prepareResponse(int,int) -> prepareResponse
    void addByte(byte) -> addByte
    void addBytes(byte[]) -> addBytes
    void addUShort(int) -> addUShort
    void addULong(int) -> addULong
    java.lang.String getResponse() -> getResponse
org.apache.http.impl.auth.NTLMEngineImpl$Type1Message -> org.apache.http.impl.auth.NTLMEngineImpl$Type1Message:
    byte[] hostBytes -> hostBytes
    byte[] domainBytes -> domainBytes
    java.lang.String getResponse() -> getResponse
org.apache.http.impl.auth.NTLMEngineImpl$Type2Message -> org.apache.http.impl.auth.NTLMEngineImpl$Type2Message:
    byte[] challenge -> challenge
    java.lang.String target -> target
    byte[] targetInfo -> targetInfo
    int flags -> flags
    byte[] getChallenge() -> getChallenge
    java.lang.String getTarget() -> getTarget
    byte[] getTargetInfo() -> getTargetInfo
    int getFlags() -> getFlags
org.apache.http.impl.auth.NTLMEngineImpl$Type3Message -> org.apache.http.impl.auth.NTLMEngineImpl$Type3Message:
    int type2Flags -> type2Flags
    byte[] domainBytes -> domainBytes
    byte[] hostBytes -> hostBytes
    byte[] userBytes -> userBytes
    byte[] lmResp -> lmResp
    byte[] ntResp -> ntResp
    byte[] sessionKey -> sessionKey
    java.lang.String getResponse() -> getResponse
org.apache.http.impl.auth.NTLMScheme -> org.apache.http.impl.auth.NTLMScheme:
    org.apache.http.impl.auth.NTLMEngine engine -> engine
    org.apache.http.impl.auth.NTLMScheme$State state -> state
    java.lang.String challenge -> challenge
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    boolean isComplete() -> isComplete
org.apache.http.impl.auth.NTLMScheme$State -> org.apache.http.impl.auth.NTLMScheme$State:
    org.apache.http.impl.auth.NTLMScheme$State UNINITIATED -> UNINITIATED
    org.apache.http.impl.auth.NTLMScheme$State CHALLENGE_RECEIVED -> CHALLENGE_RECEIVED
    org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE1_GENERATED -> MSG_TYPE1_GENERATED
    org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE2_RECEVIED -> MSG_TYPE2_RECEVIED
    org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE3_GENERATED -> MSG_TYPE3_GENERATED
    org.apache.http.impl.auth.NTLMScheme$State FAILED -> FAILED
    org.apache.http.impl.auth.NTLMScheme$State[] $VALUES -> $VALUES
    org.apache.http.impl.auth.NTLMScheme$State[] values() -> values
    org.apache.http.impl.auth.NTLMScheme$State valueOf(java.lang.String) -> valueOf
org.apache.http.impl.auth.NTLMSchemeFactory -> org.apache.http.impl.auth.NTLMSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.auth.NegotiateScheme -> org.apache.http.impl.auth.NegotiateScheme:
    org.apache.commons.logging.Log log -> log
    java.lang.String SPNEGO_OID -> SPNEGO_OID
    java.lang.String KERBEROS_OID -> KERBEROS_OID
    org.apache.http.impl.auth.SpnegoTokenGenerator spengoGenerator -> spengoGenerator
    java.lang.String getSchemeName() -> getSchemeName
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    byte[] generateToken(byte[],java.lang.String) -> generateToken
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
org.apache.http.impl.auth.NegotiateSchemeFactory -> org.apache.http.impl.auth.NegotiateSchemeFactory:
    org.apache.http.impl.auth.SpnegoTokenGenerator spengoGenerator -> spengoGenerator
    boolean stripPort -> stripPort
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    boolean isStripPort() -> isStripPort
    org.apache.http.impl.auth.SpnegoTokenGenerator getSpengoGenerator() -> getSpengoGenerator
org.apache.http.impl.auth.RFC2617Scheme -> org.apache.http.impl.auth.RFC2617Scheme:
    java.util.Map params -> params
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    java.util.Map getParameters() -> getParameters
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
org.apache.http.impl.auth.SPNegoScheme -> org.apache.http.impl.auth.SPNegoScheme:
    java.lang.String SPNEGO_OID -> SPNEGO_OID
    java.lang.String getSchemeName() -> getSchemeName
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    byte[] generateToken(byte[],java.lang.String) -> generateToken
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
org.apache.http.impl.auth.SPNegoSchemeFactory -> org.apache.http.impl.auth.SPNegoSchemeFactory:
    boolean stripPort -> stripPort
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    boolean isStripPort() -> isStripPort
org.apache.http.impl.auth.SpnegoTokenGenerator -> org.apache.http.impl.auth.SpnegoTokenGenerator:
    byte[] generateSpnegoDERObject(byte[]) -> generateSpnegoDERObject
org.apache.http.impl.auth.UnsupportedDigestAlgorithmException -> org.apache.http.impl.auth.UnsupportedDigestAlgorithmException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.client.AIMDBackoffManager -> org.apache.http.impl.client.AIMDBackoffManager:
    org.apache.http.pool.ConnPoolControl connPerRoute -> connPerRoute
    org.apache.http.impl.client.Clock clock -> clock
    java.util.Map lastRouteProbes -> lastRouteProbes
    java.util.Map lastRouteBackoffs -> lastRouteBackoffs
    long coolDown -> coolDown
    double backoffFactor -> backoffFactor
    int cap -> cap
    void backOff(org.apache.http.conn.routing.HttpRoute) -> backOff
    int getBackedOffPoolSize(int) -> getBackedOffPoolSize
    void probe(org.apache.http.conn.routing.HttpRoute) -> probe
    java.lang.Long getLastUpdate(java.util.Map,org.apache.http.conn.routing.HttpRoute) -> getLastUpdate
    void setBackoffFactor(double) -> setBackoffFactor
    void setCooldownMillis(long) -> setCooldownMillis
    void setPerHostConnectionCap(int) -> setPerHostConnectionCap
org.apache.http.impl.client.AbstractAuthenticationHandler -> org.apache.http.impl.client.AbstractAuthenticationHandler:
    org.apache.commons.logging.Log log -> log
    java.util.List DEFAULT_SCHEME_PRIORITY -> DEFAULT_SCHEME_PRIORITY
    java.util.Map parseChallenges(org.apache.http.Header[]) -> parseChallenges
    java.util.List getAuthPreferences() -> getAuthPreferences
    java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getAuthPreferences
    org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> selectScheme
org.apache.http.impl.client.AbstractHttpClient -> org.apache.http.impl.client.AbstractHttpClient:
    org.apache.commons.logging.Log log -> log
    org.apache.http.params.HttpParams defaultParams -> defaultParams
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.cookie.CookieSpecRegistry supportedCookieSpecs -> supportedCookieSpecs
    org.apache.http.auth.AuthSchemeRegistry supportedAuthSchemes -> supportedAuthSchemes
    org.apache.http.protocol.BasicHttpProcessor mutableProcessor -> mutableProcessor
    org.apache.http.protocol.ImmutableHttpProcessor protocolProcessor -> protocolProcessor
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    org.apache.http.client.RedirectStrategy redirectStrategy -> redirectStrategy
    org.apache.http.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    org.apache.http.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.client.CookieStore cookieStore -> cookieStore
    org.apache.http.client.CredentialsProvider credsProvider -> credsProvider
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    org.apache.http.client.UserTokenHandler userTokenHandler -> userTokenHandler
    org.apache.http.client.ConnectionBackoffStrategy connectionBackoffStrategy -> connectionBackoffStrategy
    org.apache.http.client.BackoffManager backoffManager -> backoffManager
    org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
    org.apache.http.protocol.HttpContext createHttpContext() -> createHttpContext
    org.apache.http.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry() -> createAuthSchemeRegistry
    org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry() -> createCookieSpecRegistry
    org.apache.http.protocol.HttpRequestExecutor createRequestExecutor() -> createRequestExecutor
    org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy() -> createConnectionKeepAliveStrategy
    org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler() -> createHttpRequestRetryHandler
    org.apache.http.client.RedirectHandler createRedirectHandler() -> createRedirectHandler
    org.apache.http.client.AuthenticationStrategy createTargetAuthenticationStrategy() -> createTargetAuthenticationStrategy
    org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler() -> createTargetAuthenticationHandler
    org.apache.http.client.AuthenticationStrategy createProxyAuthenticationStrategy() -> createProxyAuthenticationStrategy
    org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler() -> createProxyAuthenticationHandler
    org.apache.http.client.CookieStore createCookieStore() -> createCookieStore
    org.apache.http.client.CredentialsProvider createCredentialsProvider() -> createCredentialsProvider
    org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    org.apache.http.client.UserTokenHandler createUserTokenHandler() -> createUserTokenHandler
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.protocol.HttpRequestExecutor getRequestExecutor() -> getRequestExecutor
    org.apache.http.auth.AuthSchemeRegistry getAuthSchemes() -> getAuthSchemes
    void setAuthSchemes(org.apache.http.auth.AuthSchemeRegistry) -> setAuthSchemes
    org.apache.http.client.ConnectionBackoffStrategy getConnectionBackoffStrategy() -> getConnectionBackoffStrategy
    void setConnectionBackoffStrategy(org.apache.http.client.ConnectionBackoffStrategy) -> setConnectionBackoffStrategy
    org.apache.http.cookie.CookieSpecRegistry getCookieSpecs() -> getCookieSpecs
    org.apache.http.client.BackoffManager getBackoffManager() -> getBackoffManager
    void setBackoffManager(org.apache.http.client.BackoffManager) -> setBackoffManager
    void setCookieSpecs(org.apache.http.cookie.CookieSpecRegistry) -> setCookieSpecs
    org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy() -> getConnectionReuseStrategy
    void setReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setReuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy() -> getConnectionKeepAliveStrategy
    void setKeepAliveStrategy(org.apache.http.conn.ConnectionKeepAliveStrategy) -> setKeepAliveStrategy
    org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler() -> getHttpRequestRetryHandler
    void setHttpRequestRetryHandler(org.apache.http.client.HttpRequestRetryHandler) -> setHttpRequestRetryHandler
    org.apache.http.client.RedirectHandler getRedirectHandler() -> getRedirectHandler
    void setRedirectHandler(org.apache.http.client.RedirectHandler) -> setRedirectHandler
    org.apache.http.client.RedirectStrategy getRedirectStrategy() -> getRedirectStrategy
    void setRedirectStrategy(org.apache.http.client.RedirectStrategy) -> setRedirectStrategy
    org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler() -> getTargetAuthenticationHandler
    void setTargetAuthenticationHandler(org.apache.http.client.AuthenticationHandler) -> setTargetAuthenticationHandler
    org.apache.http.client.AuthenticationStrategy getTargetAuthenticationStrategy() -> getTargetAuthenticationStrategy
    void setTargetAuthenticationStrategy(org.apache.http.client.AuthenticationStrategy) -> setTargetAuthenticationStrategy
    org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler() -> getProxyAuthenticationHandler
    void setProxyAuthenticationHandler(org.apache.http.client.AuthenticationHandler) -> setProxyAuthenticationHandler
    org.apache.http.client.AuthenticationStrategy getProxyAuthenticationStrategy() -> getProxyAuthenticationStrategy
    void setProxyAuthenticationStrategy(org.apache.http.client.AuthenticationStrategy) -> setProxyAuthenticationStrategy
    org.apache.http.client.CookieStore getCookieStore() -> getCookieStore
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    org.apache.http.client.CredentialsProvider getCredentialsProvider() -> getCredentialsProvider
    void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
    org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner() -> getRoutePlanner
    void setRoutePlanner(org.apache.http.conn.routing.HttpRoutePlanner) -> setRoutePlanner
    org.apache.http.client.UserTokenHandler getUserTokenHandler() -> getUserTokenHandler
    void setUserTokenHandler(org.apache.http.client.UserTokenHandler) -> setUserTokenHandler
    org.apache.http.protocol.BasicHttpProcessor getHttpProcessor() -> getHttpProcessor
    org.apache.http.protocol.HttpProcessor getProtocolProcessor() -> getProtocolProcessor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpHost determineTarget(org.apache.http.client.methods.HttpUriRequest) -> determineTarget
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    org.apache.http.params.HttpParams determineParams(org.apache.http.HttpRequest) -> determineParams
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.impl.client.AuthenticationStrategyAdaptor -> org.apache.http.impl.client.AuthenticationStrategyAdaptor:
    org.apache.commons.logging.Log log -> log
    org.apache.http.client.AuthenticationHandler handler -> handler
    boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
    boolean isCachable(org.apache.http.auth.AuthScheme) -> isCachable
    org.apache.http.client.AuthenticationHandler getHandler() -> getHandler
org.apache.http.impl.client.AuthenticationStrategyImpl -> org.apache.http.impl.client.AuthenticationStrategyImpl:
    org.apache.commons.logging.Log log -> log
    java.util.List DEFAULT_SCHEME_PRIORITY -> DEFAULT_SCHEME_PRIORITY
    int challengeCode -> challengeCode
    java.lang.String headerName -> headerName
    java.lang.String prefParamName -> prefParamName
    boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    boolean isCachable(org.apache.http.auth.AuthScheme) -> isCachable
    void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
org.apache.http.impl.client.AutoRetryHttpClient -> org.apache.http.impl.client.AutoRetryHttpClient:
    org.apache.http.client.HttpClient backend -> backend
    org.apache.http.client.ServiceUnavailableRetryStrategy retryStrategy -> retryStrategy
    org.apache.commons.logging.Log log -> log
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.params.HttpParams getParams() -> getParams
org.apache.http.impl.client.BasicAuthCache -> org.apache.http.impl.client.BasicAuthCache:
    java.util.HashMap map -> map
    org.apache.http.HttpHost getKey(org.apache.http.HttpHost) -> getKey
    void put(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> put
    org.apache.http.auth.AuthScheme get(org.apache.http.HttpHost) -> get
    void remove(org.apache.http.HttpHost) -> remove
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.http.impl.client.BasicCookieStore -> org.apache.http.impl.client.BasicCookieStore:
    long serialVersionUID -> serialVersionUID
    java.util.TreeSet cookies -> cookies
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void addCookies(org.apache.http.cookie.Cookie[]) -> addCookies
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.http.impl.client.BasicCredentialsProvider -> org.apache.http.impl.client.BasicCredentialsProvider:
    java.util.concurrent.ConcurrentHashMap credMap -> credMap
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.Credentials matchCredentials(java.util.Map,org.apache.http.auth.AuthScope) -> matchCredentials
    org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.http.impl.client.BasicResponseHandler -> org.apache.http.impl.client.BasicResponseHandler:
    java.lang.String handleResponse(org.apache.http.HttpResponse) -> handleResponse
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
org.apache.http.impl.client.ClientParamsStack -> org.apache.http.impl.client.ClientParamsStack:
    org.apache.http.params.HttpParams applicationParams -> applicationParams
    org.apache.http.params.HttpParams clientParams -> clientParams
    org.apache.http.params.HttpParams requestParams -> requestParams
    org.apache.http.params.HttpParams overrideParams -> overrideParams
    org.apache.http.params.HttpParams getApplicationParams() -> getApplicationParams
    org.apache.http.params.HttpParams getClientParams() -> getClientParams
    org.apache.http.params.HttpParams getRequestParams() -> getRequestParams
    org.apache.http.params.HttpParams getOverrideParams() -> getOverrideParams
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    org.apache.http.params.HttpParams copy() -> copy
org.apache.http.impl.client.Clock -> org.apache.http.impl.client.Clock:
    long getCurrentTime() -> getCurrentTime
org.apache.http.impl.client.ContentEncodingHttpClient -> org.apache.http.impl.client.ContentEncodingHttpClient:
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
org.apache.http.impl.client.DecompressingHttpClient -> org.apache.http.impl.client.DecompressingHttpClient:
    org.apache.http.client.HttpClient backend -> backend
    org.apache.http.HttpRequestInterceptor acceptEncodingInterceptor -> acceptEncodingInterceptor
    org.apache.http.HttpResponseInterceptor contentEncodingInterceptor -> contentEncodingInterceptor
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpHost getHttpHost(org.apache.http.client.methods.HttpUriRequest) -> getHttpHost
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.impl.client.DefaultBackoffStrategy -> org.apache.http.impl.client.DefaultBackoffStrategy:
    boolean shouldBackoff(java.lang.Throwable) -> shouldBackoff
    boolean shouldBackoff(org.apache.http.HttpResponse) -> shouldBackoff
org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy -> org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
org.apache.http.impl.client.DefaultHttpClient -> org.apache.http.impl.client.DefaultHttpClient:
    org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    void setDefaultHttpParams(org.apache.http.params.HttpParams) -> setDefaultHttpParams
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
org.apache.http.impl.client.DefaultHttpRequestRetryHandler -> org.apache.http.impl.client.DefaultHttpRequestRetryHandler:
    int retryCount -> retryCount
    boolean requestSentRetryEnabled -> requestSentRetryEnabled
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    boolean isRequestSentRetryEnabled() -> isRequestSentRetryEnabled
    int getRetryCount() -> getRetryCount
    boolean handleAsIdempotent(org.apache.http.HttpRequest) -> handleAsIdempotent
    boolean requestIsAborted(org.apache.http.HttpRequest) -> requestIsAborted
org.apache.http.impl.client.DefaultProxyAuthenticationHandler -> org.apache.http.impl.client.DefaultProxyAuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getAuthPreferences
org.apache.http.impl.client.DefaultRedirectHandler -> org.apache.http.impl.client.DefaultRedirectHandler:
    org.apache.commons.logging.Log log -> log
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
org.apache.http.impl.client.DefaultRedirectStrategy -> org.apache.http.impl.client.DefaultRedirectStrategy:
    org.apache.commons.logging.Log log -> log
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    java.lang.String[] REDIRECT_METHODS -> REDIRECT_METHODS
    boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirected
    java.net.URI getLocationURI(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
    java.net.URI createLocationURI(java.lang.String) -> createLocationURI
    boolean isRedirectable(java.lang.String) -> isRedirectable
    org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getRedirect
    org.apache.http.client.methods.HttpUriRequest copyEntity(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.HttpRequest) -> copyEntity
org.apache.http.impl.client.DefaultRedirectStrategyAdaptor -> org.apache.http.impl.client.DefaultRedirectStrategyAdaptor:
    org.apache.http.client.RedirectHandler handler -> handler
    boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirected
    org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getRedirect
    org.apache.http.client.RedirectHandler getHandler() -> getHandler
org.apache.http.impl.client.DefaultRequestDirector -> org.apache.http.impl.client.DefaultRequestDirector:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.protocol.HttpProcessor httpProcessor -> httpProcessor
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    org.apache.http.client.RedirectHandler redirectHandler -> redirectHandler
    org.apache.http.client.RedirectStrategy redirectStrategy -> redirectStrategy
    org.apache.http.client.AuthenticationHandler targetAuthHandler -> targetAuthHandler
    org.apache.http.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    org.apache.http.client.AuthenticationHandler proxyAuthHandler -> proxyAuthHandler
    org.apache.http.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.client.UserTokenHandler userTokenHandler -> userTokenHandler
    org.apache.http.params.HttpParams params -> params
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    org.apache.http.auth.AuthState targetAuthState -> targetAuthState
    org.apache.http.auth.AuthState proxyAuthState -> proxyAuthState
    org.apache.http.impl.client.HttpAuthenticator authenticator -> authenticator
    int execCount -> execCount
    int redirectCount -> redirectCount
    int maxRedirects -> maxRedirects
    org.apache.http.HttpHost virtualHost -> virtualHost
    org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest) -> wrapRequest
    void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute) -> rewriteRequestURI
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext) -> tryConnect
    org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext) -> tryExecute
    void releaseConnection() -> releaseConnection
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> establishRoute
    boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> createTunnelToTarget
    boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext) -> createTunnelToProxy
    org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> createConnectRequest
    org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> handleResponse
    void abortConnection() -> abortConnection
org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy -> org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy:
    int maxRetries -> maxRetries
    long retryInterval -> retryInterval
    boolean retryRequest(org.apache.http.HttpResponse,int,org.apache.http.protocol.HttpContext) -> retryRequest
    long getRetryInterval() -> getRetryInterval
org.apache.http.impl.client.DefaultTargetAuthenticationHandler -> org.apache.http.impl.client.DefaultTargetAuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getAuthPreferences
org.apache.http.impl.client.DefaultUserTokenHandler -> org.apache.http.impl.client.DefaultUserTokenHandler:
    java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
    java.security.Principal getAuthPrincipal(org.apache.http.auth.AuthState) -> getAuthPrincipal
org.apache.http.impl.client.EntityEnclosingRequestWrapper -> org.apache.http.impl.client.EntityEnclosingRequestWrapper:
    org.apache.http.HttpEntity entity -> entity
    boolean consumed -> consumed
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    boolean isRepeatable() -> isRepeatable
    boolean access$002(org.apache.http.impl.client.EntityEnclosingRequestWrapper,boolean) -> access$002
org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper -> org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper:
    org.apache.http.impl.client.EntityEnclosingRequestWrapper this$0 -> this$0
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.impl.client.HttpAuthenticator -> org.apache.http.impl.client.HttpAuthenticator:
    org.apache.commons.logging.Log log -> log
    boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    boolean authenticate(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext) -> authenticate
org.apache.http.impl.client.HttpAuthenticator$1 -> org.apache.http.impl.client.HttpAuthenticator$1:
    int[] $SwitchMap$org$apache$http$auth$AuthProtocolState -> $SwitchMap$org$apache$http$auth$AuthProtocolState
org.apache.http.impl.client.LaxRedirectStrategy -> org.apache.http.impl.client.LaxRedirectStrategy:
    java.lang.String[] REDIRECT_METHODS -> REDIRECT_METHODS
    boolean isRedirectable(java.lang.String) -> isRedirectable
org.apache.http.impl.client.NullBackoffStrategy -> org.apache.http.impl.client.NullBackoffStrategy:
    boolean shouldBackoff(java.lang.Throwable) -> shouldBackoff
    boolean shouldBackoff(org.apache.http.HttpResponse) -> shouldBackoff
org.apache.http.impl.client.ProxyAuthenticationStrategy -> org.apache.http.impl.client.ProxyAuthenticationStrategy:
org.apache.http.impl.client.ProxyClient -> org.apache.http.impl.client.ProxyClient:
    org.apache.http.protocol.HttpProcessor httpProcessor -> httpProcessor
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.impl.client.ProxyAuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.impl.client.HttpAuthenticator authenticator -> authenticator
    org.apache.http.auth.AuthState proxyAuthState -> proxyAuthState
    org.apache.http.auth.AuthSchemeRegistry authSchemeRegistry -> authSchemeRegistry
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.params.HttpParams params -> params
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.auth.AuthSchemeRegistry getAuthSchemeRegistry() -> getAuthSchemeRegistry
    java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials) -> tunnel
org.apache.http.impl.client.ProxyClient$ProxyConnection -> org.apache.http.impl.client.ProxyClient$ProxyConnection:
    org.apache.http.conn.routing.HttpRoute route -> route
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    boolean isSecure() -> isSecure
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    java.net.Socket getSocket() -> getSocket
org.apache.http.impl.client.RedirectLocations -> org.apache.http.impl.client.RedirectLocations:
    java.util.Set unique -> unique
    java.util.List all -> all
    boolean contains(java.net.URI) -> contains
    void add(java.net.URI) -> add
    boolean remove(java.net.URI) -> remove
    java.util.List getAll() -> getAll
org.apache.http.impl.client.RequestWrapper -> org.apache.http.impl.client.RequestWrapper:
    org.apache.http.HttpRequest original -> original
    java.net.URI uri -> uri
    java.lang.String method -> method
    org.apache.http.ProtocolVersion version -> version
    int execCount -> execCount
    void resetHeaders() -> resetHeaders
    java.lang.String getMethod() -> getMethod
    void setMethod(java.lang.String) -> setMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    void setProtocolVersion(org.apache.http.ProtocolVersion) -> setProtocolVersion
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
    void abort() -> abort
    boolean isAborted() -> isAborted
    org.apache.http.HttpRequest getOriginal() -> getOriginal
    boolean isRepeatable() -> isRepeatable
    int getExecCount() -> getExecCount
    void incrementExecCount() -> incrementExecCount
org.apache.http.impl.client.RoutedRequest -> org.apache.http.impl.client.RoutedRequest:
    org.apache.http.impl.client.RequestWrapper request -> request
    org.apache.http.conn.routing.HttpRoute route -> route
    org.apache.http.impl.client.RequestWrapper getRequest() -> getRequest
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
org.apache.http.impl.client.StandardHttpRequestRetryHandler -> org.apache.http.impl.client.StandardHttpRequestRetryHandler:
    java.util.Map idempotentMethods -> idempotentMethods
    boolean handleAsIdempotent(org.apache.http.HttpRequest) -> handleAsIdempotent
org.apache.http.impl.client.SystemClock -> org.apache.http.impl.client.SystemClock:
    long getCurrentTime() -> getCurrentTime
org.apache.http.impl.client.SystemDefaultHttpClient -> org.apache.http.impl.client.SystemDefaultHttpClient:
    org.apache.http.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
org.apache.http.impl.client.TargetAuthenticationStrategy -> org.apache.http.impl.client.TargetAuthenticationStrategy:
org.apache.http.impl.client.TunnelRefusedException -> org.apache.http.impl.client.TunnelRefusedException:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpResponse response -> response
    org.apache.http.HttpResponse getResponse() -> getResponse
org.apache.http.impl.conn.AbstractClientConnAdapter -> org.apache.http.impl.conn.AbstractClientConnAdapter:
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.conn.OperatedClientConnection wrappedConnection -> wrappedConnection
    boolean markedReusable -> markedReusable
    boolean released -> released
    long duration -> duration
    void detach() -> detach
    org.apache.http.conn.OperatedClientConnection getWrappedConnection() -> getWrappedConnection
    org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    void assertNotAborted() -> assertNotAborted
    boolean isReleased() -> isReleased
    void assertValid(org.apache.http.conn.OperatedClientConnection) -> assertValid
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
    void flush() -> flush
    boolean isResponseAvailable(int) -> isResponseAvailable
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    boolean isSecure() -> isSecure
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
org.apache.http.impl.conn.AbstractPoolEntry -> org.apache.http.impl.conn.AbstractPoolEntry:
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.conn.OperatedClientConnection connection -> connection
    org.apache.http.conn.routing.HttpRoute route -> route
    java.lang.Object state -> state
    org.apache.http.conn.routing.RouteTracker tracker -> tracker
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void shutdownEntry() -> shutdownEntry
org.apache.http.impl.conn.AbstractPooledConnAdapter -> org.apache.http.impl.conn.AbstractPooledConnAdapter:
    org.apache.http.impl.conn.AbstractPoolEntry poolEntry -> poolEntry
    org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
    void assertValid(org.apache.http.impl.conn.AbstractPoolEntry) -> assertValid
    void assertAttached() -> assertAttached
    void detach() -> detach
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void close() -> close
    void shutdown() -> shutdown
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
org.apache.http.impl.conn.BasicClientConnectionManager -> org.apache.http.impl.conn.BasicClientConnectionManager:
    org.apache.commons.logging.Log log -> log
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    java.lang.String MISUSE_MESSAGE -> MISUSE_MESSAGE
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.impl.conn.HttpPoolEntry poolEntry -> poolEntry
    org.apache.http.impl.conn.ManagedClientConnectionImpl conn -> conn
    boolean shutdown -> shutdown
    void finalize() -> finalize
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void assertNotShutdown() -> assertNotShutdown
    org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    void shutdownConnection(org.apache.http.HttpClientConnection) -> shutdownConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeExpiredConnections() -> closeExpiredConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void shutdown() -> shutdown
org.apache.http.impl.conn.BasicClientConnectionManager$1 -> org.apache.http.impl.conn.BasicClientConnectionManager$1:
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.impl.conn.BasicClientConnectionManager this$0 -> this$0
    void abortRequest() -> abortRequest
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.ConnectionShutdownException -> org.apache.http.impl.conn.ConnectionShutdownException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.conn.DefaultClientConnection -> org.apache.http.impl.conn.DefaultClientConnection:
    org.apache.commons.logging.Log log -> log
    org.apache.commons.logging.Log headerLog -> headerLog
    org.apache.commons.logging.Log wireLog -> wireLog
    java.net.Socket socket -> socket
    org.apache.http.HttpHost targetHost -> targetHost
    boolean connSecure -> connSecure
    boolean shutdown -> shutdown
    java.util.Map attributes -> attributes
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    boolean isSecure() -> isSecure
    java.net.Socket getSocket() -> getSocket
    void opening(java.net.Socket,org.apache.http.HttpHost) -> opening
    void openCompleted(boolean,org.apache.http.params.HttpParams) -> openCompleted
    void shutdown() -> shutdown
    void close() -> close
    org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> createResponseParser
    void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> update
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
org.apache.http.impl.conn.DefaultClientConnectionOperator -> org.apache.http.impl.conn.DefaultClientConnectionOperator:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.DnsResolver dnsResolver -> dnsResolver
    org.apache.http.conn.OperatedClientConnection createConnection() -> createConnection
    void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> openConnection
    void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> updateSecureConnection
    void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> prepareSocket
    java.net.InetAddress[] resolveHostname(java.lang.String) -> resolveHostname
org.apache.http.impl.conn.DefaultHttpResponseParser -> org.apache.http.impl.conn.DefaultHttpResponseParser:
    org.apache.commons.logging.Log log -> log
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpResponse parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    boolean reject(org.apache.http.util.CharArrayBuffer,int) -> reject
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.conn.DefaultHttpRoutePlanner -> org.apache.http.impl.conn.DefaultHttpRoutePlanner:
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
org.apache.http.impl.conn.DefaultResponseParser -> org.apache.http.impl.conn.DefaultResponseParser:
    org.apache.commons.logging.Log log -> log
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    int maxGarbageLines -> maxGarbageLines
    int getMaxGarbageLines(org.apache.http.params.HttpParams) -> getMaxGarbageLines
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.conn.HttpConnPool -> org.apache.http.impl.conn.HttpConnPool:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    org.apache.commons.logging.Log log -> log
    long timeToLive -> timeToLive
    java.util.concurrent.TimeUnit tunit -> tunit
    org.apache.http.impl.conn.HttpPoolEntry createEntry(org.apache.http.conn.routing.HttpRoute,org.apache.http.conn.OperatedClientConnection) -> createEntry
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
org.apache.http.impl.conn.HttpConnPool$InternalConnFactory -> org.apache.http.impl.conn.HttpConnPool$InternalConnFactory:
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.conn.OperatedClientConnection create(org.apache.http.conn.routing.HttpRoute) -> create
    java.lang.Object create(java.lang.Object) -> create
org.apache.http.impl.conn.HttpPoolEntry -> org.apache.http.impl.conn.HttpPoolEntry:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.routing.RouteTracker tracker -> tracker
    boolean isExpired(long) -> isExpired
    org.apache.http.conn.routing.RouteTracker getTracker() -> getTracker
    org.apache.http.conn.routing.HttpRoute getPlannedRoute() -> getPlannedRoute
    org.apache.http.conn.routing.HttpRoute getEffectiveRoute() -> getEffectiveRoute
    boolean isClosed() -> isClosed
    void close() -> close
org.apache.http.impl.conn.IdleConnectionHandler -> org.apache.http.impl.conn.IdleConnectionHandler:
    org.apache.commons.logging.Log log -> log
    java.util.Map connectionToTimes -> connectionToTimes
    void add(org.apache.http.HttpConnection,long,java.util.concurrent.TimeUnit) -> add
    boolean remove(org.apache.http.HttpConnection) -> remove
    void removeAll() -> removeAll
    void closeIdleConnections(long) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
org.apache.http.impl.conn.IdleConnectionHandler$TimeValues -> org.apache.http.impl.conn.IdleConnectionHandler$TimeValues:
    long timeAdded -> timeAdded
    long timeExpires -> timeExpires
    long access$000(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) -> access$000
    long access$100(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) -> access$100
org.apache.http.impl.conn.InMemoryDnsResolver -> org.apache.http.impl.conn.InMemoryDnsResolver:
    org.apache.commons.logging.Log log -> log
    java.util.Map dnsMap -> dnsMap
    void add(java.lang.String,java.net.InetAddress[]) -> add
    java.net.InetAddress[] resolve(java.lang.String) -> resolve
org.apache.http.impl.conn.LoggingSessionInputBuffer -> org.apache.http.impl.conn.LoggingSessionInputBuffer:
    org.apache.http.io.SessionInputBuffer in -> in
    org.apache.http.io.EofSensor eofSensor -> eofSensor
    org.apache.http.impl.conn.Wire wire -> wire
    java.lang.String charset -> charset
    boolean isDataAvailable(int) -> isDataAvailable
    int read(byte[],int,int) -> read
    int read() -> read
    int read(byte[]) -> read
    java.lang.String readLine() -> readLine
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
    boolean isEof() -> isEof
org.apache.http.impl.conn.LoggingSessionOutputBuffer -> org.apache.http.impl.conn.LoggingSessionOutputBuffer:
    org.apache.http.io.SessionOutputBuffer out -> out
    org.apache.http.impl.conn.Wire wire -> wire
    java.lang.String charset -> charset
    void write(byte[],int,int) -> write
    void write(int) -> write
    void write(byte[]) -> write
    void flush() -> flush
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void writeLine(java.lang.String) -> writeLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.conn.ManagedClientConnectionImpl -> org.apache.http.impl.conn.ManagedClientConnectionImpl:
    org.apache.http.conn.ClientConnectionManager manager -> manager
    org.apache.http.conn.ClientConnectionOperator operator -> operator
    org.apache.http.impl.conn.HttpPoolEntry poolEntry -> poolEntry
    boolean reusable -> reusable
    long duration -> duration
    org.apache.http.impl.conn.HttpPoolEntry getPoolEntry() -> getPoolEntry
    org.apache.http.impl.conn.HttpPoolEntry detach() -> detach
    org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    org.apache.http.conn.OperatedClientConnection getConnection() -> getConnection
    org.apache.http.conn.OperatedClientConnection ensureConnection() -> ensureConnection
    org.apache.http.impl.conn.HttpPoolEntry ensurePoolEntry() -> ensurePoolEntry
    void close() -> close
    void shutdown() -> shutdown
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
    void flush() -> flush
    boolean isResponseAvailable(int) -> isResponseAvailable
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    boolean isSecure() -> isSecure
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.impl.conn.PoolingClientConnectionManager -> org.apache.http.impl.conn.PoolingClientConnectionManager:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.impl.conn.HttpConnPool pool -> pool
    org.apache.http.conn.ClientConnectionOperator operator -> operator
    org.apache.http.conn.DnsResolver dnsResolver -> dnsResolver
    void finalize() -> finalize
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    java.lang.String format(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> format
    java.lang.String formatStats(org.apache.http.conn.routing.HttpRoute) -> formatStats
    java.lang.String format(org.apache.http.impl.conn.HttpPoolEntry) -> format
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    org.apache.http.conn.ManagedClientConnection leaseConnection(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit) -> leaseConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void shutdown() -> shutdown
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    int getMaxTotal() -> getMaxTotal
    void setMaxTotal(int) -> setMaxTotal
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getMaxPerRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxPerRoute
    void setMaxPerRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxPerRoute
    org.apache.http.pool.PoolStats getTotalStats() -> getTotalStats
    org.apache.http.pool.PoolStats getStats(org.apache.http.conn.routing.HttpRoute) -> getStats
    org.apache.http.pool.PoolStats getStats(java.lang.Object) -> getStats
    int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
org.apache.http.impl.conn.PoolingClientConnectionManager$1 -> org.apache.http.impl.conn.PoolingClientConnectionManager$1:
    java.util.concurrent.Future val$future -> val$future
    org.apache.http.impl.conn.PoolingClientConnectionManager this$0 -> this$0
    void abortRequest() -> abortRequest
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.ProxySelectorRoutePlanner -> org.apache.http.impl.conn.ProxySelectorRoutePlanner:
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    java.net.ProxySelector proxySelector -> proxySelector
    java.net.ProxySelector getProxySelector() -> getProxySelector
    void setProxySelector(java.net.ProxySelector) -> setProxySelector
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineProxy
    java.lang.String getHost(java.net.InetSocketAddress) -> getHost
    java.net.Proxy chooseProxy(java.util.List,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> chooseProxy
org.apache.http.impl.conn.ProxySelectorRoutePlanner$1 -> org.apache.http.impl.conn.ProxySelectorRoutePlanner$1:
    int[] $SwitchMap$java$net$Proxy$Type -> $SwitchMap$java$net$Proxy$Type
org.apache.http.impl.conn.SchemeRegistryFactory -> org.apache.http.impl.conn.SchemeRegistryFactory:
    org.apache.http.conn.scheme.SchemeRegistry createDefault() -> createDefault
    org.apache.http.conn.scheme.SchemeRegistry createSystemDefault() -> createSystemDefault
org.apache.http.impl.conn.SingleClientConnManager -> org.apache.http.impl.conn.SingleClientConnManager:
    org.apache.commons.logging.Log log -> log
    java.lang.String MISUSE_MESSAGE -> MISUSE_MESSAGE
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    boolean alwaysShutDown -> alwaysShutDown
    org.apache.http.impl.conn.SingleClientConnManager$PoolEntry uniquePoolEntry -> uniquePoolEntry
    org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter managedConn -> managedConn
    long lastReleaseTime -> lastReleaseTime
    long connectionExpiresTime -> connectionExpiresTime
    boolean isShutDown -> isShutDown
    void finalize() -> finalize
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    void assertStillUp() -> assertStillUp
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeExpiredConnections() -> closeExpiredConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void shutdown() -> shutdown
    void revokeConnection() -> revokeConnection
org.apache.http.impl.conn.SingleClientConnManager$1 -> org.apache.http.impl.conn.SingleClientConnManager$1:
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
    void abortRequest() -> abortRequest
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter -> org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter:
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
org.apache.http.impl.conn.SingleClientConnManager$PoolEntry -> org.apache.http.impl.conn.SingleClientConnManager$PoolEntry:
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
    void close() -> close
    void shutdown() -> shutdown
org.apache.http.impl.conn.SystemDefaultDnsResolver -> org.apache.http.impl.conn.SystemDefaultDnsResolver:
    java.net.InetAddress[] resolve(java.lang.String) -> resolve
org.apache.http.impl.conn.Wire -> org.apache.http.impl.conn.Wire:
    org.apache.commons.logging.Log log -> log
    void wire(java.lang.String,java.io.InputStream) -> wire
    boolean enabled() -> enabled
    void output(java.io.InputStream) -> output
    void input(java.io.InputStream) -> input
    void output(byte[],int,int) -> output
    void input(byte[],int,int) -> input
    void output(byte[]) -> output
    void input(byte[]) -> input
    void output(int) -> output
    void input(int) -> input
    void output(java.lang.String) -> output
    void input(java.lang.String) -> input
org.apache.http.impl.conn.tsccm.AbstractConnPool -> org.apache.http.impl.conn.tsccm.AbstractConnPool:
    org.apache.commons.logging.Log log -> log
    java.util.concurrent.locks.Lock poolLock -> poolLock
    java.util.Set leasedConnections -> leasedConnections
    int numConnections -> numConnections
    boolean isShutDown -> isShutDown
    java.util.Set issuedConnections -> issuedConnections
    java.lang.ref.ReferenceQueue refQueue -> refQueue
    org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler -> idleConnHandler
    void enableConnectionGC() -> enableConnectionGC
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit) -> getEntry
    org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    void handleReference(java.lang.ref.Reference) -> handleReference
    void handleLostEntry(org.apache.http.conn.routing.HttpRoute) -> handleLostEntry
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void deleteClosedConnections() -> deleteClosedConnections
    void shutdown() -> shutdown
    void closeConnection(org.apache.http.conn.OperatedClientConnection) -> closeConnection
org.apache.http.impl.conn.tsccm.BasicPoolEntry -> org.apache.http.impl.conn.tsccm.BasicPoolEntry:
    long created -> created
    long updated -> updated
    long validUntil -> validUntil
    long expiry -> expiry
    org.apache.http.conn.OperatedClientConnection getConnection() -> getConnection
    org.apache.http.conn.routing.HttpRoute getPlannedRoute() -> getPlannedRoute
    org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef() -> getWeakRef
    void shutdownEntry() -> shutdownEntry
    long getCreated() -> getCreated
    long getUpdated() -> getUpdated
    long getExpiry() -> getExpiry
    long getValidUntil() -> getValidUntil
    void updateExpiry(long,java.util.concurrent.TimeUnit) -> updateExpiry
    boolean isExpired(long) -> isExpired
org.apache.http.impl.conn.tsccm.BasicPoolEntryRef -> org.apache.http.impl.conn.tsccm.BasicPoolEntryRef:
    org.apache.http.conn.routing.HttpRoute route -> route
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter -> org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter:
    org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
    void detach() -> detach
org.apache.http.impl.conn.tsccm.ConnPoolByRoute -> org.apache.http.impl.conn.tsccm.ConnPoolByRoute:
    org.apache.commons.logging.Log log -> log
    java.util.concurrent.locks.Lock poolLock -> poolLock
    org.apache.http.conn.ClientConnectionOperator operator -> operator
    org.apache.http.conn.params.ConnPerRoute connPerRoute -> connPerRoute
    java.util.Set leasedConnections -> leasedConnections
    java.util.Queue freeConnections -> freeConnections
    java.util.Queue waitingThreads -> waitingThreads
    java.util.Map routeToPool -> routeToPool
    long connTTL -> connTTL
    java.util.concurrent.TimeUnit connTTLTimeUnit -> connTTLTimeUnit
    boolean shutdown -> shutdown
    int maxTotalConnections -> maxTotalConnections
    int numConnections -> numConnections
    java.util.concurrent.locks.Lock getLock() -> getLock
    java.util.Queue createFreeConnQueue() -> createFreeConnQueue
    java.util.Queue createWaitingThreadQueue() -> createWaitingThreadQueue
    java.util.Map createRouteToPoolMap() -> createRouteToPoolMap
    org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute) -> newRouteSpecificPool
    org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> newWaitingThread
    void closeConnection(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> closeConnection
    org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean) -> getRoutePool
    int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute) -> getConnectionsInPool
    int getConnectionsInPool() -> getConnectionsInPool
    org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter) -> getEntryBlocking
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object) -> getFreeEntry
    org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator) -> createEntry
    void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    void deleteLeastUsedEntry() -> deleteLeastUsedEntry
    void handleLostEntry(org.apache.http.conn.routing.HttpRoute) -> handleLostEntry
    void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> notifyWaitingThread
    void deleteClosedConnections() -> deleteClosedConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    int getMaxTotalConnections() -> getMaxTotalConnections
    java.util.concurrent.locks.Lock access$000(org.apache.http.impl.conn.tsccm.ConnPoolByRoute) -> access$000
org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1 -> org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1:
    org.apache.http.impl.conn.tsccm.WaitingThreadAborter val$aborter -> val$aborter
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.impl.conn.tsccm.ConnPoolByRoute this$0 -> this$0
    void abortRequest() -> abortRequest
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
org.apache.http.impl.conn.tsccm.PoolEntryRequest -> org.apache.http.impl.conn.tsccm.PoolEntryRequest:
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    void abortRequest() -> abortRequest
org.apache.http.impl.conn.tsccm.RouteSpecificPool -> org.apache.http.impl.conn.tsccm.RouteSpecificPool:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.routing.HttpRoute route -> route
    int maxEntries -> maxEntries
    org.apache.http.conn.params.ConnPerRoute connPerRoute -> connPerRoute
    java.util.LinkedList freeEntries -> freeEntries
    java.util.Queue waitingThreads -> waitingThreads
    int numEntries -> numEntries
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    int getMaxEntries() -> getMaxEntries
    boolean isUnused() -> isUnused
    int getCapacity() -> getCapacity
    int getEntryCount() -> getEntryCount
    org.apache.http.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object) -> allocEntry
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> freeEntry
    void createdEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> createdEntry
    boolean deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    void dropEntry() -> dropEntry
    void queueThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> queueThread
    boolean hasThread() -> hasThread
    org.apache.http.impl.conn.tsccm.WaitingThread nextThread() -> nextThread
    void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> removeThread
org.apache.http.impl.conn.tsccm.RouteSpecificPool$1 -> org.apache.http.impl.conn.tsccm.RouteSpecificPool$1:
    org.apache.http.impl.conn.tsccm.RouteSpecificPool this$0 -> this$0
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager -> org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool -> connectionPool
    org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool -> pool
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.conn.params.ConnPerRouteBean connPerRoute -> connPerRoute
    void finalize() -> finalize
    org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams) -> createConnectionPool
    org.apache.http.impl.conn.tsccm.ConnPoolByRoute createConnectionPool(long,java.util.concurrent.TimeUnit) -> createConnectionPool
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void shutdown() -> shutdown
    int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute) -> getConnectionsInPool
    int getConnectionsInPool() -> getConnectionsInPool
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    int getMaxTotal() -> getMaxTotal
    void setMaxTotal(int) -> setMaxTotal
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
    void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxForRoute
    org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager) -> access$000
org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 -> org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1:
    org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest -> val$poolRequest
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0 -> this$0
    void abortRequest() -> abortRequest
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.tsccm.WaitingThread -> org.apache.http.impl.conn.tsccm.WaitingThread:
    java.util.concurrent.locks.Condition cond -> cond
    org.apache.http.impl.conn.tsccm.RouteSpecificPool pool -> pool
    java.lang.Thread waiter -> waiter
    boolean aborted -> aborted
    java.util.concurrent.locks.Condition getCondition() -> getCondition
    org.apache.http.impl.conn.tsccm.RouteSpecificPool getPool() -> getPool
    java.lang.Thread getThread() -> getThread
    boolean await(java.util.Date) -> await
    void wakeup() -> wakeup
    void interrupt() -> interrupt
org.apache.http.impl.conn.tsccm.WaitingThreadAborter -> org.apache.http.impl.conn.tsccm.WaitingThreadAborter:
    org.apache.http.impl.conn.tsccm.WaitingThread waitingThread -> waitingThread
    boolean aborted -> aborted
    void abort() -> abort
    void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> setWaitingThread
org.apache.http.impl.cookie.AbstractCookieAttributeHandler -> org.apache.http.impl.cookie.AbstractCookieAttributeHandler:
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.AbstractCookieSpec -> org.apache.http.impl.cookie.AbstractCookieSpec:
    java.util.Map attribHandlerMap -> attribHandlerMap
    void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler) -> registerAttribHandler
    org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String) -> findAttribHandler
    org.apache.http.cookie.CookieAttributeHandler getAttribHandler(java.lang.String) -> getAttribHandler
    java.util.Collection getAttribHandlers() -> getAttribHandlers
org.apache.http.impl.cookie.BasicClientCookie -> org.apache.http.impl.cookie.BasicClientCookie:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.util.Map attribs -> attribs
    java.lang.String value -> value
    java.lang.String cookieComment -> cookieComment
    java.lang.String cookieDomain -> cookieDomain
    java.util.Date cookieExpiryDate -> cookieExpiryDate
    java.lang.String cookiePath -> cookiePath
    boolean isSecure -> isSecure
    int cookieVersion -> cookieVersion
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.lang.String getCommentURL() -> getCommentURL
    java.util.Date getExpiryDate() -> getExpiryDate
    void setExpiryDate(java.util.Date) -> setExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    void setDomain(java.lang.String) -> setDomain
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    boolean isSecure() -> isSecure
    void setSecure(boolean) -> setSecure
    int[] getPorts() -> getPorts
    int getVersion() -> getVersion
    void setVersion(int) -> setVersion
    boolean isExpired(java.util.Date) -> isExpired
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    boolean containsAttribute(java.lang.String) -> containsAttribute
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.BasicClientCookie2 -> org.apache.http.impl.cookie.BasicClientCookie2:
    long serialVersionUID -> serialVersionUID
    java.lang.String commentURL -> commentURL
    int[] ports -> ports
    boolean discard -> discard
    int[] getPorts() -> getPorts
    void setPorts(int[]) -> setPorts
    java.lang.String getCommentURL() -> getCommentURL
    void setCommentURL(java.lang.String) -> setCommentURL
    void setDiscard(boolean) -> setDiscard
    boolean isPersistent() -> isPersistent
    boolean isExpired(java.util.Date) -> isExpired
    java.lang.Object clone() -> clone
org.apache.http.impl.cookie.BasicCommentHandler -> org.apache.http.impl.cookie.BasicCommentHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicDomainHandler -> org.apache.http.impl.cookie.BasicDomainHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BasicExpiresHandler -> org.apache.http.impl.cookie.BasicExpiresHandler:
    java.lang.String[] datepatterns -> datepatterns
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicMaxAgeHandler -> org.apache.http.impl.cookie.BasicMaxAgeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicPathHandler -> org.apache.http.impl.cookie.BasicPathHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BasicSecureHandler -> org.apache.http.impl.cookie.BasicSecureHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BestMatchSpec -> org.apache.http.impl.cookie.BestMatchSpec:
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    org.apache.http.impl.cookie.RFC2965Spec strict -> strict
    org.apache.http.impl.cookie.RFC2109Spec obsoleteStrict -> obsoleteStrict
    org.apache.http.impl.cookie.BrowserCompatSpec compat -> compat
    org.apache.http.impl.cookie.RFC2965Spec getStrict() -> getStrict
    org.apache.http.impl.cookie.RFC2109Spec getObsoleteStrict() -> getObsoleteStrict
    org.apache.http.impl.cookie.BrowserCompatSpec getCompat() -> getCompat
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.BestMatchSpecFactory -> org.apache.http.impl.cookie.BestMatchSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.BrowserCompatSpec -> org.apache.http.impl.cookie.BrowserCompatSpec:
    java.lang.String[] DEFAULT_DATE_PATTERNS -> DEFAULT_DATE_PATTERNS
    java.lang.String[] datepatterns -> datepatterns
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.BrowserCompatSpecFactory -> org.apache.http.impl.cookie.BrowserCompatSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler -> org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.CookieSpecBase -> org.apache.http.impl.cookie.CookieSpecBase:
    java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin) -> getDefaultPath
    java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin) -> getDefaultDomain
    java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.DateParseException -> org.apache.http.impl.cookie.DateParseException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.cookie.DateUtils -> org.apache.http.impl.cookie.DateUtils:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.lang.String PATTERN_RFC1036 -> PATTERN_RFC1036
    java.lang.String PATTERN_ASCTIME -> PATTERN_ASCTIME
    java.lang.String[] DEFAULT_PATTERNS -> DEFAULT_PATTERNS
    java.util.Date DEFAULT_TWO_DIGIT_YEAR_START -> DEFAULT_TWO_DIGIT_YEAR_START
    java.util.TimeZone GMT -> GMT
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date) -> parseDate
    java.lang.String formatDate(java.util.Date) -> formatDate
    java.lang.String formatDate(java.util.Date,java.lang.String) -> formatDate
    void clearThreadLocal() -> clearThreadLocal
org.apache.http.impl.cookie.DateUtils$DateFormatHolder -> org.apache.http.impl.cookie.DateUtils$DateFormatHolder:
    java.lang.ThreadLocal THREADLOCAL_FORMATS -> THREADLOCAL_FORMATS
    java.text.SimpleDateFormat formatFor(java.lang.String) -> formatFor
    void clearThreadLocal() -> clearThreadLocal
org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1 -> org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1:
    java.lang.ref.SoftReference initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
org.apache.http.impl.cookie.IgnoreSpec -> org.apache.http.impl.cookie.IgnoreSpec:
    int getVersion() -> getVersion
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List formatCookies(java.util.List) -> formatCookies
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.impl.cookie.IgnoreSpecFactory -> org.apache.http.impl.cookie.IgnoreSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.NetscapeDomainHandler -> org.apache.http.impl.cookie.NetscapeDomainHandler:
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean isSpecialDomain(java.lang.String) -> isSpecialDomain
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.NetscapeDraftHeaderParser -> org.apache.http.impl.cookie.NetscapeDraftHeaderParser:
    org.apache.http.impl.cookie.NetscapeDraftHeaderParser DEFAULT -> DEFAULT
    org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeader
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
org.apache.http.impl.cookie.NetscapeDraftSpec -> org.apache.http.impl.cookie.NetscapeDraftSpec:
    java.lang.String EXPIRES_PATTERN -> EXPIRES_PATTERN
    java.lang.String[] datepatterns -> datepatterns
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.NetscapeDraftSpecFactory -> org.apache.http.impl.cookie.NetscapeDraftSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.PublicSuffixFilter -> org.apache.http.impl.cookie.PublicSuffixFilter:
    org.apache.http.cookie.CookieAttributeHandler wrapped -> wrapped
    java.util.Set exceptions -> exceptions
    java.util.Set suffixes -> suffixes
    void setPublicSuffixes(java.util.Collection) -> setPublicSuffixes
    void setExceptions(java.util.Collection) -> setExceptions
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean isForPublicSuffix(org.apache.http.cookie.Cookie) -> isForPublicSuffix
org.apache.http.impl.cookie.PublicSuffixListParser -> org.apache.http.impl.cookie.PublicSuffixListParser:
    int MAX_LINE_LEN -> MAX_LINE_LEN
    org.apache.http.impl.cookie.PublicSuffixFilter filter -> filter
    void parse(java.io.Reader) -> parse
    boolean readLine(java.io.Reader,java.lang.StringBuilder) -> readLine
org.apache.http.impl.cookie.RFC2109DomainHandler -> org.apache.http.impl.cookie.RFC2109DomainHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2109Spec -> org.apache.http.impl.cookie.RFC2109Spec:
    org.apache.http.cookie.CookiePathComparator PATH_COMPARATOR -> PATH_COMPARATOR
    java.lang.String[] DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    java.util.List formatCookies(java.util.List) -> formatCookies
    java.util.List doFormatOneHeader(java.util.List) -> doFormatOneHeader
    java.util.List doFormatManyHeaders(java.util.List) -> doFormatManyHeaders
    void formatParamAsVer(org.apache.http.util.CharArrayBuffer,java.lang.String,java.lang.String,int) -> formatParamAsVer
    void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int) -> formatCookieAsVer
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.RFC2109SpecFactory -> org.apache.http.impl.cookie.RFC2109SpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.RFC2109VersionHandler -> org.apache.http.impl.cookie.RFC2109VersionHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler -> org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler -> org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965DomainAttributeHandler -> org.apache.http.impl.cookie.RFC2965DomainAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965PortAttributeHandler -> org.apache.http.impl.cookie.RFC2965PortAttributeHandler:
    int[] parsePortAttribute(java.lang.String) -> parsePortAttribute
    boolean portMatch(int,int[]) -> portMatch
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965Spec -> org.apache.http.impl.cookie.RFC2965Spec:
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List createCookies(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> createCookies
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int) -> formatCookieAsVer
    org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin) -> adjustEffectiveHost
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.RFC2965SpecFactory -> org.apache.http.impl.cookie.RFC2965SpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.RFC2965VersionAttributeHandler -> org.apache.http.impl.cookie.RFC2965VersionAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.entity.DisallowIdentityContentLengthStrategy -> org.apache.http.impl.entity.DisallowIdentityContentLengthStrategy:
    org.apache.http.entity.ContentLengthStrategy contentLengthStrategy -> contentLengthStrategy
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.impl.entity.EntityDeserializer -> org.apache.http.impl.entity.EntityDeserializer:
    org.apache.http.entity.ContentLengthStrategy lenStrategy -> lenStrategy
    org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage) -> doDeserialize
    org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage) -> deserialize
org.apache.http.impl.entity.EntitySerializer -> org.apache.http.impl.entity.EntitySerializer:
    org.apache.http.entity.ContentLengthStrategy lenStrategy -> lenStrategy
    java.io.OutputStream doSerialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage) -> doSerialize
    void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity) -> serialize
org.apache.http.impl.entity.LaxContentLengthStrategy -> org.apache.http.impl.entity.LaxContentLengthStrategy:
    int implicitLen -> implicitLen
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.impl.entity.StrictContentLengthStrategy -> org.apache.http.impl.entity.StrictContentLengthStrategy:
    int implicitLen -> implicitLen
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.impl.io.AbstractMessageParser -> org.apache.http.impl.io.AbstractMessageParser:
    int HEAD_LINE -> HEAD_LINE
    int HEADERS -> HEADERS
    org.apache.http.io.SessionInputBuffer sessionBuffer -> sessionBuffer
    int maxHeaderCount -> maxHeaderCount
    int maxLineLen -> maxLineLen
    java.util.List headerLines -> headerLines
    org.apache.http.message.LineParser lineParser -> lineParser
    int state -> state
    org.apache.http.HttpMessage message -> message
    org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser) -> parseHeaders
    org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser,java.util.List) -> parseHeaders
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    org.apache.http.HttpMessage parse() -> parse
org.apache.http.impl.io.AbstractMessageWriter -> org.apache.http.impl.io.AbstractMessageWriter:
    org.apache.http.io.SessionOutputBuffer sessionBuffer -> sessionBuffer
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.message.LineFormatter lineFormatter -> lineFormatter
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
    void write(org.apache.http.HttpMessage) -> write
org.apache.http.impl.io.AbstractSessionInputBuffer -> org.apache.http.impl.io.AbstractSessionInputBuffer:
    java.nio.charset.Charset ASCII -> ASCII
    java.io.InputStream instream -> instream
    byte[] buffer -> buffer
    int bufferpos -> bufferpos
    int bufferlen -> bufferlen
    org.apache.http.util.ByteArrayBuffer linebuffer -> linebuffer
    java.nio.charset.Charset charset -> charset
    java.nio.charset.CharsetDecoder decoder -> decoder
    java.nio.CharBuffer cbuf -> cbuf
    boolean ascii -> ascii
    int maxLineLen -> maxLineLen
    int minChunkLimit -> minChunkLimit
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    java.nio.charset.CodingErrorAction onMalformedInputAction -> onMalformedInputAction
    java.nio.charset.CodingErrorAction onUnMappableInputAction -> onUnMappableInputAction
    void init(java.io.InputStream,int,org.apache.http.params.HttpParams) -> init
    org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> createTransportMetrics
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    int fillBuffer() -> fillBuffer
    boolean hasBufferedData() -> hasBufferedData
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int locateLF() -> locateLF
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer) -> lineFromLineBuffer
    int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer,int) -> lineFromReadBuffer
    int appendDecoded(org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer) -> appendDecoded
    int handleDecodingResult(java.nio.charset.CoderResult,org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer) -> handleDecodingResult
    java.lang.String readLine() -> readLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.AbstractSessionOutputBuffer -> org.apache.http.impl.io.AbstractSessionOutputBuffer:
    java.nio.charset.Charset ASCII -> ASCII
    byte[] CRLF -> CRLF
    java.io.OutputStream outstream -> outstream
    org.apache.http.util.ByteArrayBuffer buffer -> buffer
    java.nio.charset.Charset charset -> charset
    java.nio.charset.CharsetEncoder encoder -> encoder
    java.nio.ByteBuffer bbuf -> bbuf
    boolean ascii -> ascii
    int minChunkLimit -> minChunkLimit
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    java.nio.charset.CodingErrorAction onMalformedInputAction -> onMalformedInputAction
    java.nio.charset.CodingErrorAction onUnMappableInputAction -> onUnMappableInputAction
    void init(java.io.OutputStream,int,org.apache.http.params.HttpParams) -> init
    org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> createTransportMetrics
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    void flushBuffer() -> flushBuffer
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void writeEncoded(java.nio.CharBuffer) -> writeEncoded
    void handleEncodingResult(java.nio.charset.CoderResult) -> handleEncodingResult
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.ChunkedInputStream -> org.apache.http.impl.io.ChunkedInputStream:
    int CHUNK_LEN -> CHUNK_LEN
    int CHUNK_DATA -> CHUNK_DATA
    int CHUNK_CRLF -> CHUNK_CRLF
    int BUFFER_SIZE -> BUFFER_SIZE
    org.apache.http.io.SessionInputBuffer in -> in
    org.apache.http.util.CharArrayBuffer buffer -> buffer
    int state -> state
    int chunkSize -> chunkSize
    int pos -> pos
    boolean eof -> eof
    boolean closed -> closed
    org.apache.http.Header[] footers -> footers
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    void nextChunk() -> nextChunk
    int getChunkSize() -> getChunkSize
    void parseTrailerHeaders() -> parseTrailerHeaders
    void close() -> close
    org.apache.http.Header[] getFooters() -> getFooters
org.apache.http.impl.io.ChunkedOutputStream -> org.apache.http.impl.io.ChunkedOutputStream:
    org.apache.http.io.SessionOutputBuffer out -> out
    byte[] cache -> cache
    int cachePosition -> cachePosition
    boolean wroteLastChunk -> wroteLastChunk
    boolean closed -> closed
    void flushCache() -> flushCache
    void flushCacheWithAppend(byte[],int,int) -> flushCacheWithAppend
    void writeClosingChunk() -> writeClosingChunk
    void finish() -> finish
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
org.apache.http.impl.io.ContentLengthInputStream -> org.apache.http.impl.io.ContentLengthInputStream:
    int BUFFER_SIZE -> BUFFER_SIZE
    long contentLength -> contentLength
    long pos -> pos
    boolean closed -> closed
    org.apache.http.io.SessionInputBuffer in -> in
    void close() -> close
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    long skip(long) -> skip
org.apache.http.impl.io.ContentLengthOutputStream -> org.apache.http.impl.io.ContentLengthOutputStream:
    org.apache.http.io.SessionOutputBuffer out -> out
    long contentLength -> contentLength
    long total -> total
    boolean closed -> closed
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
org.apache.http.impl.io.DefaultHttpRequestParser -> org.apache.http.impl.io.DefaultHttpRequestParser:
    org.apache.http.HttpRequestFactory requestFactory -> requestFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpRequest parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.DefaultHttpResponseParser -> org.apache.http.impl.io.DefaultHttpResponseParser:
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpResponse parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.HttpRequestParser -> org.apache.http.impl.io.HttpRequestParser:
    org.apache.http.HttpRequestFactory requestFactory -> requestFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.HttpRequestWriter -> org.apache.http.impl.io.HttpRequestWriter:
    void writeHeadLine(org.apache.http.HttpRequest) -> writeHeadLine
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.HttpResponseParser -> org.apache.http.impl.io.HttpResponseParser:
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.HttpResponseWriter -> org.apache.http.impl.io.HttpResponseWriter:
    void writeHeadLine(org.apache.http.HttpResponse) -> writeHeadLine
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.HttpTransportMetricsImpl -> org.apache.http.impl.io.HttpTransportMetricsImpl:
    long bytesTransferred -> bytesTransferred
    long getBytesTransferred() -> getBytesTransferred
    void setBytesTransferred(long) -> setBytesTransferred
    void incrementBytesTransferred(long) -> incrementBytesTransferred
    void reset() -> reset
org.apache.http.impl.io.IdentityInputStream -> org.apache.http.impl.io.IdentityInputStream:
    org.apache.http.io.SessionInputBuffer in -> in
    boolean closed -> closed
    int available() -> available
    void close() -> close
    int read() -> read
    int read(byte[],int,int) -> read
org.apache.http.impl.io.IdentityOutputStream -> org.apache.http.impl.io.IdentityOutputStream:
    org.apache.http.io.SessionOutputBuffer out -> out
    boolean closed -> closed
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
org.apache.http.impl.io.SocketInputBuffer -> org.apache.http.impl.io.SocketInputBuffer:
    java.net.Socket socket -> socket
    boolean eof -> eof
    int fillBuffer() -> fillBuffer
    boolean isDataAvailable(int) -> isDataAvailable
    boolean isEof() -> isEof
org.apache.http.impl.io.SocketOutputBuffer -> org.apache.http.impl.io.SocketOutputBuffer:
org.apache.http.impl.pool.BasicConnFactory -> org.apache.http.impl.pool.BasicConnFactory:
    javax.net.ssl.SSLSocketFactory sslfactory -> sslfactory
    org.apache.http.params.HttpParams params -> params
    org.apache.http.HttpClientConnection create(java.net.Socket,org.apache.http.params.HttpParams) -> create
    org.apache.http.HttpClientConnection create(org.apache.http.HttpHost) -> create
    java.lang.Object create(java.lang.Object) -> create
org.apache.http.impl.pool.BasicConnPool -> org.apache.http.impl.pool.BasicConnPool:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    org.apache.http.impl.pool.BasicPoolEntry createEntry(org.apache.http.HttpHost,org.apache.http.HttpClientConnection) -> createEntry
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
org.apache.http.impl.pool.BasicPoolEntry -> org.apache.http.impl.pool.BasicPoolEntry:
    void close() -> close
    boolean isClosed() -> isClosed
org.apache.http.io.BufferInfo -> org.apache.http.io.BufferInfo:
    int length() -> length
    int capacity() -> capacity
    int available() -> available
org.apache.http.io.EofSensor -> org.apache.http.io.EofSensor:
    boolean isEof() -> isEof
org.apache.http.io.HttpMessageParser -> org.apache.http.io.HttpMessageParser:
    org.apache.http.HttpMessage parse() -> parse
org.apache.http.io.HttpMessageWriter -> org.apache.http.io.HttpMessageWriter:
    void write(org.apache.http.HttpMessage) -> write
org.apache.http.io.HttpTransportMetrics -> org.apache.http.io.HttpTransportMetrics:
    long getBytesTransferred() -> getBytesTransferred
    void reset() -> reset
org.apache.http.io.SessionInputBuffer -> org.apache.http.io.SessionInputBuffer:
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int read() -> read
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    java.lang.String readLine() -> readLine
    boolean isDataAvailable(int) -> isDataAvailable
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.io.SessionOutputBuffer -> org.apache.http.io.SessionOutputBuffer:
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void flush() -> flush
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.message.AbstractHttpMessage -> org.apache.http.message.AbstractHttpMessage:
    org.apache.http.message.HeaderGroup headergroup -> headergroup
    org.apache.http.params.HttpParams params -> params
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    void removeHeader(org.apache.http.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    org.apache.http.HeaderIterator headerIterator() -> headerIterator
    org.apache.http.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
org.apache.http.message.BasicHeader -> org.apache.http.message.BasicHeader:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    org.apache.http.HeaderElement[] getElements() -> getElements
    java.lang.Object clone() -> clone
org.apache.http.message.BasicHeaderElement -> org.apache.http.message.BasicHeaderElement:
    java.lang.String name -> name
    java.lang.String value -> value
    org.apache.http.NameValuePair[] parameters -> parameters
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.NameValuePair[] getParameters() -> getParameters
    int getParameterCount() -> getParameterCount
    org.apache.http.NameValuePair getParameter(int) -> getParameter
    org.apache.http.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.BasicHeaderElementIterator -> org.apache.http.message.BasicHeaderElementIterator:
    org.apache.http.HeaderIterator headerIt -> headerIt
    org.apache.http.message.HeaderValueParser parser -> parser
    org.apache.http.HeaderElement currentElement -> currentElement
    org.apache.http.util.CharArrayBuffer buffer -> buffer
    org.apache.http.message.ParserCursor cursor -> cursor
    void bufferHeaderValue() -> bufferHeaderValue
    void parseNextElement() -> parseNextElement
    boolean hasNext() -> hasNext
    org.apache.http.HeaderElement nextElement() -> nextElement
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.http.message.BasicHeaderIterator -> org.apache.http.message.BasicHeaderIterator:
    org.apache.http.Header[] allHeaders -> allHeaders
    int currentIndex -> currentIndex
    java.lang.String headerName -> headerName
    int findNext(int) -> findNext
    boolean filterHeader(int) -> filterHeader
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.http.message.BasicHeaderValueFormatter -> org.apache.http.message.BasicHeaderValueFormatter:
    org.apache.http.message.BasicHeaderValueFormatter DEFAULT -> DEFAULT
    java.lang.String SEPARATORS -> SEPARATORS
    java.lang.String UNSAFE_CHARS -> UNSAFE_CHARS
    java.lang.String formatElements(org.apache.http.HeaderElement[],boolean,org.apache.http.message.HeaderValueFormatter) -> formatElements
    org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean) -> formatElements
    int estimateElementsLen(org.apache.http.HeaderElement[]) -> estimateElementsLen
    java.lang.String formatHeaderElement(org.apache.http.HeaderElement,boolean,org.apache.http.message.HeaderValueFormatter) -> formatHeaderElement
    org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean) -> formatHeaderElement
    int estimateHeaderElementLen(org.apache.http.HeaderElement) -> estimateHeaderElementLen
    java.lang.String formatParameters(org.apache.http.NameValuePair[],boolean,org.apache.http.message.HeaderValueFormatter) -> formatParameters
    org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean) -> formatParameters
    int estimateParametersLen(org.apache.http.NameValuePair[]) -> estimateParametersLen
    java.lang.String formatNameValuePair(org.apache.http.NameValuePair,boolean,org.apache.http.message.HeaderValueFormatter) -> formatNameValuePair
    org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean) -> formatNameValuePair
    int estimateNameValuePairLen(org.apache.http.NameValuePair) -> estimateNameValuePairLen
    void doFormatValue(org.apache.http.util.CharArrayBuffer,java.lang.String,boolean) -> doFormatValue
    boolean isSeparator(char) -> isSeparator
    boolean isUnsafe(char) -> isUnsafe
org.apache.http.message.BasicHeaderValueParser -> org.apache.http.message.BasicHeaderValueParser:
    org.apache.http.message.BasicHeaderValueParser DEFAULT -> DEFAULT
    char PARAM_DELIMITER -> PARAM_DELIMITER
    char ELEM_DELIMITER -> ELEM_DELIMITER
    char[] ALL_DELIMITERS -> ALL_DELIMITERS
    org.apache.http.HeaderElement[] parseElements(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseElements
    org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseElements
    org.apache.http.HeaderElement parseHeaderElement(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseHeaderElement
    org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeaderElement
    org.apache.http.HeaderElement createHeaderElement(java.lang.String,java.lang.String,org.apache.http.NameValuePair[]) -> createHeaderElement
    org.apache.http.NameValuePair[] parseParameters(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseParameters
    org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseParameters
    org.apache.http.NameValuePair parseNameValuePair(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseNameValuePair
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
    boolean isOneOf(char,char[]) -> isOneOf
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[]) -> parseNameValuePair
    org.apache.http.NameValuePair createNameValuePair(java.lang.String,java.lang.String) -> createNameValuePair
org.apache.http.message.BasicHttpEntityEnclosingRequest -> org.apache.http.message.BasicHttpEntityEnclosingRequest:
    org.apache.http.HttpEntity entity -> entity
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
org.apache.http.message.BasicHttpRequest -> org.apache.http.message.BasicHttpRequest:
    java.lang.String method -> method
    java.lang.String uri -> uri
    org.apache.http.RequestLine requestline -> requestline
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
    java.lang.String toString() -> toString
org.apache.http.message.BasicHttpResponse -> org.apache.http.message.BasicHttpResponse:
    org.apache.http.StatusLine statusline -> statusline
    org.apache.http.HttpEntity entity -> entity
    org.apache.http.ReasonPhraseCatalog reasonCatalog -> reasonCatalog
    java.util.Locale locale -> locale
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    org.apache.http.StatusLine getStatusLine() -> getStatusLine
    org.apache.http.HttpEntity getEntity() -> getEntity
    java.util.Locale getLocale() -> getLocale
    void setStatusLine(org.apache.http.StatusLine) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    void setLocale(java.util.Locale) -> setLocale
    java.lang.String getReason(int) -> getReason
    java.lang.String toString() -> toString
org.apache.http.message.BasicLineFormatter -> org.apache.http.message.BasicLineFormatter:
    org.apache.http.message.BasicLineFormatter DEFAULT -> DEFAULT
    org.apache.http.util.CharArrayBuffer initBuffer(org.apache.http.util.CharArrayBuffer) -> initBuffer
    java.lang.String formatProtocolVersion(org.apache.http.ProtocolVersion,org.apache.http.message.LineFormatter) -> formatProtocolVersion
    org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion) -> appendProtocolVersion
    int estimateProtocolVersionLen(org.apache.http.ProtocolVersion) -> estimateProtocolVersionLen
    java.lang.String formatRequestLine(org.apache.http.RequestLine,org.apache.http.message.LineFormatter) -> formatRequestLine
    org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> formatRequestLine
    void doFormatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> doFormatRequestLine
    java.lang.String formatStatusLine(org.apache.http.StatusLine,org.apache.http.message.LineFormatter) -> formatStatusLine
    org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> formatStatusLine
    void doFormatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> doFormatStatusLine
    java.lang.String formatHeader(org.apache.http.Header,org.apache.http.message.LineFormatter) -> formatHeader
    org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> formatHeader
    void doFormatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> doFormatHeader
org.apache.http.message.BasicLineParser -> org.apache.http.message.BasicLineParser:
    org.apache.http.message.BasicLineParser DEFAULT -> DEFAULT
    org.apache.http.ProtocolVersion protocol -> protocol
    org.apache.http.ProtocolVersion parseProtocolVersion(java.lang.String,org.apache.http.message.LineParser) -> parseProtocolVersion
    org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseProtocolVersion
    org.apache.http.ProtocolVersion createProtocolVersion(int,int) -> createProtocolVersion
    boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> hasProtocolVersion
    org.apache.http.RequestLine parseRequestLine(java.lang.String,org.apache.http.message.LineParser) -> parseRequestLine
    org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseRequestLine
    org.apache.http.RequestLine createRequestLine(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion) -> createRequestLine
    org.apache.http.StatusLine parseStatusLine(java.lang.String,org.apache.http.message.LineParser) -> parseStatusLine
    org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseStatusLine
    org.apache.http.StatusLine createStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> createStatusLine
    org.apache.http.Header parseHeader(java.lang.String,org.apache.http.message.LineParser) -> parseHeader
    org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
    void skipWhitespace(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> skipWhitespace
org.apache.http.message.BasicListHeaderIterator -> org.apache.http.message.BasicListHeaderIterator:
    java.util.List allHeaders -> allHeaders
    int currentIndex -> currentIndex
    int lastIndex -> lastIndex
    java.lang.String headerName -> headerName
    int findNext(int) -> findNext
    boolean filterHeader(int) -> filterHeader
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.http.message.BasicNameValuePair -> org.apache.http.message.BasicNameValuePair:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
org.apache.http.message.BasicRequestLine -> org.apache.http.message.BasicRequestLine:
    long serialVersionUID -> serialVersionUID
    org.apache.http.ProtocolVersion protoversion -> protoversion
    java.lang.String method -> method
    java.lang.String uri -> uri
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.BasicStatusLine -> org.apache.http.message.BasicStatusLine:
    long serialVersionUID -> serialVersionUID
    org.apache.http.ProtocolVersion protoVersion -> protoVersion
    int statusCode -> statusCode
    java.lang.String reasonPhrase -> reasonPhrase
    int getStatusCode() -> getStatusCode
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.BasicTokenIterator -> org.apache.http.message.BasicTokenIterator:
    java.lang.String HTTP_SEPARATORS -> HTTP_SEPARATORS
    org.apache.http.HeaderIterator headerIt -> headerIt
    java.lang.String currentHeader -> currentHeader
    java.lang.String currentToken -> currentToken
    int searchPos -> searchPos
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> nextToken
    java.lang.Object next() -> next
    void remove() -> remove
    int findNext(int) -> findNext
    java.lang.String createToken(java.lang.String,int,int) -> createToken
    int findTokenStart(int) -> findTokenStart
    int findTokenSeparator(int) -> findTokenSeparator
    int findTokenEnd(int) -> findTokenEnd
    boolean isTokenSeparator(char) -> isTokenSeparator
    boolean isWhitespace(char) -> isWhitespace
    boolean isTokenChar(char) -> isTokenChar
    boolean isHttpSeparator(char) -> isHttpSeparator
org.apache.http.message.BufferedHeader -> org.apache.http.message.BufferedHeader:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    org.apache.http.util.CharArrayBuffer buffer -> buffer
    int valuePos -> valuePos
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.HeaderElement[] getElements() -> getElements
    int getValuePos() -> getValuePos
    org.apache.http.util.CharArrayBuffer getBuffer() -> getBuffer
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.HeaderGroup -> org.apache.http.message.HeaderGroup:
    long serialVersionUID -> serialVersionUID
    java.util.List headers -> headers
    void clear() -> clear
    void addHeader(org.apache.http.Header) -> addHeader
    void removeHeader(org.apache.http.Header) -> removeHeader
    void updateHeader(org.apache.http.Header) -> updateHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    org.apache.http.Header getCondensedHeader(java.lang.String) -> getCondensedHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.HeaderIterator iterator() -> iterator
    org.apache.http.HeaderIterator iterator(java.lang.String) -> iterator
    org.apache.http.message.HeaderGroup copy() -> copy
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
org.apache.http.message.HeaderValueFormatter -> org.apache.http.message.HeaderValueFormatter:
    org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean) -> formatElements
    org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean) -> formatHeaderElement
    org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean) -> formatParameters
    org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean) -> formatNameValuePair
org.apache.http.message.HeaderValueParser -> org.apache.http.message.HeaderValueParser:
    org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseElements
    org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeaderElement
    org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseParameters
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
org.apache.http.message.LineFormatter -> org.apache.http.message.LineFormatter:
    org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion) -> appendProtocolVersion
    org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> formatRequestLine
    org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> formatStatusLine
    org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> formatHeader
org.apache.http.message.LineParser -> org.apache.http.message.LineParser:
    org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseProtocolVersion
    boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> hasProtocolVersion
    org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseRequestLine
    org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseStatusLine
    org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
org.apache.http.message.ParserCursor -> org.apache.http.message.ParserCursor:
    int lowerBound -> lowerBound
    int upperBound -> upperBound
    int pos -> pos
    int getLowerBound() -> getLowerBound
    int getUpperBound() -> getUpperBound
    int getPos() -> getPos
    void updatePos(int) -> updatePos
    boolean atEnd() -> atEnd
    java.lang.String toString() -> toString
org.apache.http.params.AbstractHttpParams -> org.apache.http.params.AbstractHttpParams:
    long getLongParameter(java.lang.String,long) -> getLongParameter
    org.apache.http.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    org.apache.http.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
    java.util.Set getNames() -> getNames
org.apache.http.params.BasicHttpParams -> org.apache.http.params.BasicHttpParams:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap parameters -> parameters
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    boolean isParameterSet(java.lang.String) -> isParameterSet
    boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    void clear() -> clear
    org.apache.http.params.HttpParams copy() -> copy
    java.lang.Object clone() -> clone
    void copyParams(org.apache.http.params.HttpParams) -> copyParams
    java.util.Set getNames() -> getNames
org.apache.http.params.CoreConnectionPNames -> org.apache.http.params.CoreConnectionPNames:
    java.lang.String SO_TIMEOUT -> SO_TIMEOUT
    java.lang.String TCP_NODELAY -> TCP_NODELAY
    java.lang.String SOCKET_BUFFER_SIZE -> SOCKET_BUFFER_SIZE
    java.lang.String SO_LINGER -> SO_LINGER
    java.lang.String SO_REUSEADDR -> SO_REUSEADDR
    java.lang.String CONNECTION_TIMEOUT -> CONNECTION_TIMEOUT
    java.lang.String STALE_CONNECTION_CHECK -> STALE_CONNECTION_CHECK
    java.lang.String MAX_LINE_LENGTH -> MAX_LINE_LENGTH
    java.lang.String MAX_HEADER_COUNT -> MAX_HEADER_COUNT
    java.lang.String MIN_CHUNK_LIMIT -> MIN_CHUNK_LIMIT
    java.lang.String SO_KEEPALIVE -> SO_KEEPALIVE
org.apache.http.params.CoreProtocolPNames -> org.apache.http.params.CoreProtocolPNames:
    java.lang.String PROTOCOL_VERSION -> PROTOCOL_VERSION
    java.lang.String HTTP_ELEMENT_CHARSET -> HTTP_ELEMENT_CHARSET
    java.lang.String HTTP_CONTENT_CHARSET -> HTTP_CONTENT_CHARSET
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String ORIGIN_SERVER -> ORIGIN_SERVER
    java.lang.String STRICT_TRANSFER_ENCODING -> STRICT_TRANSFER_ENCODING
    java.lang.String USE_EXPECT_CONTINUE -> USE_EXPECT_CONTINUE
    java.lang.String WAIT_FOR_CONTINUE -> WAIT_FOR_CONTINUE
    java.lang.String HTTP_MALFORMED_INPUT_ACTION -> HTTP_MALFORMED_INPUT_ACTION
    java.lang.String HTTP_UNMAPPABLE_INPUT_ACTION -> HTTP_UNMAPPABLE_INPUT_ACTION
org.apache.http.params.DefaultedHttpParams -> org.apache.http.params.DefaultedHttpParams:
    org.apache.http.params.HttpParams local -> local
    org.apache.http.params.HttpParams defaults -> defaults
    org.apache.http.params.HttpParams copy() -> copy
    java.lang.Object getParameter(java.lang.String) -> getParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    org.apache.http.params.HttpParams getDefaults() -> getDefaults
    java.util.Set getNames() -> getNames
    java.util.Set getDefaultNames() -> getDefaultNames
    java.util.Set getLocalNames() -> getLocalNames
    java.util.Set getNames(org.apache.http.params.HttpParams) -> getNames
org.apache.http.params.HttpAbstractParamBean -> org.apache.http.params.HttpAbstractParamBean:
    org.apache.http.params.HttpParams params -> params
org.apache.http.params.HttpConnectionParamBean -> org.apache.http.params.HttpConnectionParamBean:
    void setSoTimeout(int) -> setSoTimeout
    void setTcpNoDelay(boolean) -> setTcpNoDelay
    void setSocketBufferSize(int) -> setSocketBufferSize
    void setLinger(int) -> setLinger
    void setConnectionTimeout(int) -> setConnectionTimeout
    void setStaleCheckingEnabled(boolean) -> setStaleCheckingEnabled
org.apache.http.params.HttpConnectionParams -> org.apache.http.params.HttpConnectionParams:
    int getSoTimeout(org.apache.http.params.HttpParams) -> getSoTimeout
    void setSoTimeout(org.apache.http.params.HttpParams,int) -> setSoTimeout
    boolean getSoReuseaddr(org.apache.http.params.HttpParams) -> getSoReuseaddr
    void setSoReuseaddr(org.apache.http.params.HttpParams,boolean) -> setSoReuseaddr
    boolean getTcpNoDelay(org.apache.http.params.HttpParams) -> getTcpNoDelay
    void setTcpNoDelay(org.apache.http.params.HttpParams,boolean) -> setTcpNoDelay
    int getSocketBufferSize(org.apache.http.params.HttpParams) -> getSocketBufferSize
    void setSocketBufferSize(org.apache.http.params.HttpParams,int) -> setSocketBufferSize
    int getLinger(org.apache.http.params.HttpParams) -> getLinger
    void setLinger(org.apache.http.params.HttpParams,int) -> setLinger
    int getConnectionTimeout(org.apache.http.params.HttpParams) -> getConnectionTimeout
    void setConnectionTimeout(org.apache.http.params.HttpParams,int) -> setConnectionTimeout
    boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams) -> isStaleCheckingEnabled
    void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean) -> setStaleCheckingEnabled
    boolean getSoKeepalive(org.apache.http.params.HttpParams) -> getSoKeepalive
    void setSoKeepalive(org.apache.http.params.HttpParams,boolean) -> setSoKeepalive
org.apache.http.params.HttpParams -> org.apache.http.params.HttpParams:
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    org.apache.http.params.HttpParams copy() -> copy
    boolean removeParameter(java.lang.String) -> removeParameter
    long getLongParameter(java.lang.String,long) -> getLongParameter
    org.apache.http.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    org.apache.http.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
org.apache.http.params.HttpParamsNames -> org.apache.http.params.HttpParamsNames:
    java.util.Set getNames() -> getNames
org.apache.http.params.HttpProtocolParamBean -> org.apache.http.params.HttpProtocolParamBean:
    void setHttpElementCharset(java.lang.String) -> setHttpElementCharset
    void setContentCharset(java.lang.String) -> setContentCharset
    void setVersion(org.apache.http.HttpVersion) -> setVersion
    void setUserAgent(java.lang.String) -> setUserAgent
    void setUseExpectContinue(boolean) -> setUseExpectContinue
org.apache.http.params.HttpProtocolParams -> org.apache.http.params.HttpProtocolParams:
    java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams) -> getHttpElementCharset
    void setHttpElementCharset(org.apache.http.params.HttpParams,java.lang.String) -> setHttpElementCharset
    java.lang.String getContentCharset(org.apache.http.params.HttpParams) -> getContentCharset
    void setContentCharset(org.apache.http.params.HttpParams,java.lang.String) -> setContentCharset
    org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams) -> getVersion
    void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion) -> setVersion
    java.lang.String getUserAgent(org.apache.http.params.HttpParams) -> getUserAgent
    void setUserAgent(org.apache.http.params.HttpParams,java.lang.String) -> setUserAgent
    boolean useExpectContinue(org.apache.http.params.HttpParams) -> useExpectContinue
    void setUseExpectContinue(org.apache.http.params.HttpParams,boolean) -> setUseExpectContinue
    java.nio.charset.CodingErrorAction getMalformedInputAction(org.apache.http.params.HttpParams) -> getMalformedInputAction
    void setMalformedInputAction(org.apache.http.params.HttpParams,java.nio.charset.CodingErrorAction) -> setMalformedInputAction
    java.nio.charset.CodingErrorAction getUnmappableInputAction(org.apache.http.params.HttpParams) -> getUnmappableInputAction
    void setUnmappableInputAction(org.apache.http.params.HttpParams,java.nio.charset.CodingErrorAction) -> setUnmappableInputAction
org.apache.http.params.SyncBasicHttpParams -> org.apache.http.params.SyncBasicHttpParams:
    long serialVersionUID -> serialVersionUID
    boolean removeParameter(java.lang.String) -> removeParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    java.lang.Object getParameter(java.lang.String) -> getParameter
    boolean isParameterSet(java.lang.String) -> isParameterSet
    boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    void clear() -> clear
    java.lang.Object clone() -> clone
org.apache.http.pool.AbstractConnPool -> org.apache.http.pool.AbstractConnPool:
    java.util.concurrent.locks.Lock lock -> lock
    org.apache.http.pool.ConnFactory connFactory -> connFactory
    java.util.Map routeToPool -> routeToPool
    java.util.Set leased -> leased
    java.util.LinkedList available -> available
    java.util.LinkedList pending -> pending
    java.util.Map maxPerRoute -> maxPerRoute
    boolean isShutDown -> isShutDown
    int defaultMaxPerRoute -> defaultMaxPerRoute
    int maxTotal -> maxTotal
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
    boolean isShutdown() -> isShutdown
    void shutdown() -> shutdown
    org.apache.http.pool.RouteSpecificPool getPool(java.lang.Object) -> getPool
    java.util.concurrent.Future lease(java.lang.Object,java.lang.Object,org.apache.http.concurrent.FutureCallback) -> lease
    java.util.concurrent.Future lease(java.lang.Object,java.lang.Object) -> lease
    org.apache.http.pool.PoolEntry getPoolEntryBlocking(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.pool.PoolEntryFuture) -> getPoolEntryBlocking
    void notifyPending(org.apache.http.pool.RouteSpecificPool) -> notifyPending
    void release(org.apache.http.pool.PoolEntry,boolean) -> release
    int getMax(java.lang.Object) -> getMax
    void setMaxTotal(int) -> setMaxTotal
    int getMaxTotal() -> getMaxTotal
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
    int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    org.apache.http.pool.PoolStats getTotalStats() -> getTotalStats
    org.apache.http.pool.PoolStats getStats(java.lang.Object) -> getStats
    void closeIdle(long,java.util.concurrent.TimeUnit) -> closeIdle
    void closeExpired() -> closeExpired
    java.lang.String toString() -> toString
    void release(java.lang.Object,boolean) -> release
    org.apache.http.pool.PoolEntry access$000(org.apache.http.pool.AbstractConnPool,java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.pool.PoolEntryFuture) -> access$000
org.apache.http.pool.AbstractConnPool$1 -> org.apache.http.pool.AbstractConnPool$1:
    java.lang.Object val$route -> val$route
    org.apache.http.pool.AbstractConnPool this$0 -> this$0
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object) -> createEntry
org.apache.http.pool.AbstractConnPool$2 -> org.apache.http.pool.AbstractConnPool$2:
    java.lang.Object val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.pool.AbstractConnPool this$0 -> this$0
    org.apache.http.pool.PoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    java.lang.Object getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
org.apache.http.pool.ConnFactory -> org.apache.http.pool.ConnFactory:
    java.lang.Object create(java.lang.Object) -> create
org.apache.http.pool.ConnPool -> org.apache.http.pool.ConnPool:
    java.util.concurrent.Future lease(java.lang.Object,java.lang.Object,org.apache.http.concurrent.FutureCallback) -> lease
    void release(java.lang.Object,boolean) -> release
org.apache.http.pool.ConnPoolControl -> org.apache.http.pool.ConnPoolControl:
    void setMaxTotal(int) -> setMaxTotal
    int getMaxTotal() -> getMaxTotal
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
    int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    org.apache.http.pool.PoolStats getTotalStats() -> getTotalStats
    org.apache.http.pool.PoolStats getStats(java.lang.Object) -> getStats
org.apache.http.pool.PoolEntry -> org.apache.http.pool.PoolEntry:
    java.lang.String id -> id
    java.lang.Object route -> route
    java.lang.Object conn -> conn
    long created -> created
    long validUnit -> validUnit
    long updated -> updated
    long expiry -> expiry
    java.lang.Object state -> state
    java.lang.String getId() -> getId
    java.lang.Object getRoute() -> getRoute
    java.lang.Object getConnection() -> getConnection
    long getCreated() -> getCreated
    long getValidUnit() -> getValidUnit
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
    long getUpdated() -> getUpdated
    long getExpiry() -> getExpiry
    void updateExpiry(long,java.util.concurrent.TimeUnit) -> updateExpiry
    boolean isExpired(long) -> isExpired
    void close() -> close
    boolean isClosed() -> isClosed
    java.lang.String toString() -> toString
org.apache.http.pool.PoolEntryFuture -> org.apache.http.pool.PoolEntryFuture:
    java.util.concurrent.locks.Lock lock -> lock
    org.apache.http.concurrent.FutureCallback callback -> callback
    java.util.concurrent.locks.Condition condition -> condition
    boolean cancelled -> cancelled
    boolean completed -> completed
    java.lang.Object result -> result
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    boolean await(java.util.Date) -> await
    void wakeup() -> wakeup
org.apache.http.pool.PoolStats -> org.apache.http.pool.PoolStats:
    int leased -> leased
    int pending -> pending
    int available -> available
    int max -> max
    int getLeased() -> getLeased
    int getPending() -> getPending
    int getAvailable() -> getAvailable
    int getMax() -> getMax
    java.lang.String toString() -> toString
org.apache.http.pool.RouteSpecificPool -> org.apache.http.pool.RouteSpecificPool:
    java.lang.Object route -> route
    java.util.Set leased -> leased
    java.util.LinkedList available -> available
    java.util.LinkedList pending -> pending
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object) -> createEntry
    java.lang.Object getRoute() -> getRoute
    int getLeasedCount() -> getLeasedCount
    int getPendingCount() -> getPendingCount
    int getAvailableCount() -> getAvailableCount
    int getAllocatedCount() -> getAllocatedCount
    org.apache.http.pool.PoolEntry getFree(java.lang.Object) -> getFree
    org.apache.http.pool.PoolEntry getLastUsed() -> getLastUsed
    boolean remove(org.apache.http.pool.PoolEntry) -> remove
    void free(org.apache.http.pool.PoolEntry,boolean) -> free
    org.apache.http.pool.PoolEntry add(java.lang.Object) -> add
    void queue(org.apache.http.pool.PoolEntryFuture) -> queue
    org.apache.http.pool.PoolEntryFuture nextPending() -> nextPending
    void unqueue(org.apache.http.pool.PoolEntryFuture) -> unqueue
    void shutdown() -> shutdown
    java.lang.String toString() -> toString
org.apache.http.protocol.BasicHttpContext -> org.apache.http.protocol.BasicHttpContext:
    org.apache.http.protocol.HttpContext parentContext -> parentContext
    java.util.Map map -> map
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.http.protocol.BasicHttpProcessor -> org.apache.http.protocol.BasicHttpProcessor:
    java.util.List requestInterceptors -> requestInterceptors
    java.util.List responseInterceptors -> responseInterceptors
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void addInterceptor(org.apache.http.HttpRequestInterceptor) -> addInterceptor
    void addInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addInterceptor(org.apache.http.HttpResponseInterceptor) -> addInterceptor
    void addInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addInterceptor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void setInterceptors(java.util.List) -> setInterceptors
    void clearInterceptors() -> clearInterceptors
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    void copyInterceptors(org.apache.http.protocol.BasicHttpProcessor) -> copyInterceptors
    org.apache.http.protocol.BasicHttpProcessor copy() -> copy
    java.lang.Object clone() -> clone
org.apache.http.protocol.DefaultedHttpContext -> org.apache.http.protocol.DefaultedHttpContext:
    org.apache.http.protocol.HttpContext local -> local
    org.apache.http.protocol.HttpContext defaults -> defaults
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    org.apache.http.protocol.HttpContext getDefaults() -> getDefaults
    java.lang.String toString() -> toString
org.apache.http.protocol.ExecutionContext -> org.apache.http.protocol.ExecutionContext:
    java.lang.String HTTP_CONNECTION -> HTTP_CONNECTION
    java.lang.String HTTP_REQUEST -> HTTP_REQUEST
    java.lang.String HTTP_RESPONSE -> HTTP_RESPONSE
    java.lang.String HTTP_TARGET_HOST -> HTTP_TARGET_HOST
    java.lang.String HTTP_PROXY_HOST -> HTTP_PROXY_HOST
    java.lang.String HTTP_REQ_SENT -> HTTP_REQ_SENT
org.apache.http.protocol.HTTP -> org.apache.http.protocol.HTTP:
    int CR -> CR
    int LF -> LF
    int SP -> SP
    int HT -> HT
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String CONTENT_LEN -> CONTENT_LEN
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String EXPECT_DIRECTIVE -> EXPECT_DIRECTIVE
    java.lang.String CONN_DIRECTIVE -> CONN_DIRECTIVE
    java.lang.String TARGET_HOST -> TARGET_HOST
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String DATE_HEADER -> DATE_HEADER
    java.lang.String SERVER_HEADER -> SERVER_HEADER
    java.lang.String EXPECT_CONTINUE -> EXPECT_CONTINUE
    java.lang.String CONN_CLOSE -> CONN_CLOSE
    java.lang.String CONN_KEEP_ALIVE -> CONN_KEEP_ALIVE
    java.lang.String CHUNK_CODING -> CHUNK_CODING
    java.lang.String IDENTITY_CODING -> IDENTITY_CODING
    java.nio.charset.Charset DEF_CONTENT_CHARSET -> DEF_CONTENT_CHARSET
    java.nio.charset.Charset DEF_PROTOCOL_CHARSET -> DEF_PROTOCOL_CHARSET
    java.lang.String UTF_8 -> UTF_8
    java.lang.String UTF_16 -> UTF_16
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String ASCII -> ASCII
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String DEFAULT_CONTENT_CHARSET -> DEFAULT_CONTENT_CHARSET
    java.lang.String DEFAULT_PROTOCOL_CHARSET -> DEFAULT_PROTOCOL_CHARSET
    java.lang.String OCTET_STREAM_TYPE -> OCTET_STREAM_TYPE
    java.lang.String PLAIN_TEXT_TYPE -> PLAIN_TEXT_TYPE
    java.lang.String CHARSET_PARAM -> CHARSET_PARAM
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    boolean isWhitespace(char) -> isWhitespace
org.apache.http.protocol.HttpContext -> org.apache.http.protocol.HttpContext:
    java.lang.String RESERVED_PREFIX -> RESERVED_PREFIX
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
org.apache.http.protocol.HttpDateGenerator -> org.apache.http.protocol.HttpDateGenerator:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.util.TimeZone GMT -> GMT
    java.text.DateFormat dateformat -> dateformat
    long dateAsLong -> dateAsLong
    java.lang.String dateAsText -> dateAsText
    java.lang.String getCurrentDate() -> getCurrentDate
org.apache.http.protocol.HttpExpectationVerifier -> org.apache.http.protocol.HttpExpectationVerifier:
    void verify(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> verify
org.apache.http.protocol.HttpProcessor -> org.apache.http.protocol.HttpProcessor:
org.apache.http.protocol.HttpRequestExecutor -> org.apache.http.protocol.HttpRequestExecutor:
    boolean canResponseHaveBody(org.apache.http.HttpRequest,org.apache.http.HttpResponse) -> canResponseHaveBody
    org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> execute
    void closeConnection(org.apache.http.HttpClientConnection) -> closeConnection
    void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext) -> preProcess
    org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> doSendRequest
    org.apache.http.HttpResponse doReceiveResponse(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> doReceiveResponse
    void postProcess(org.apache.http.HttpResponse,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext) -> postProcess
org.apache.http.protocol.HttpRequestHandler -> org.apache.http.protocol.HttpRequestHandler:
    void handle(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> handle
org.apache.http.protocol.HttpRequestHandlerRegistry -> org.apache.http.protocol.HttpRequestHandlerRegistry:
    org.apache.http.protocol.UriPatternMatcher matcher -> matcher
    void register(java.lang.String,org.apache.http.protocol.HttpRequestHandler) -> register
    void unregister(java.lang.String) -> unregister
    void setHandlers(java.util.Map) -> setHandlers
    java.util.Map getHandlers() -> getHandlers
    org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
org.apache.http.protocol.HttpRequestHandlerResolver -> org.apache.http.protocol.HttpRequestHandlerResolver:
    org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
org.apache.http.protocol.HttpRequestInterceptorList -> org.apache.http.protocol.HttpRequestInterceptorList:
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
org.apache.http.protocol.HttpResponseInterceptorList -> org.apache.http.protocol.HttpResponseInterceptorList:
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
org.apache.http.protocol.HttpService -> org.apache.http.protocol.HttpService:
    org.apache.http.params.HttpParams params -> params
    org.apache.http.protocol.HttpProcessor processor -> processor
    org.apache.http.protocol.HttpRequestHandlerResolver handlerResolver -> handlerResolver
    org.apache.http.ConnectionReuseStrategy connStrategy -> connStrategy
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.protocol.HttpExpectationVerifier expectationVerifier -> expectationVerifier
    void setHttpProcessor(org.apache.http.protocol.HttpProcessor) -> setHttpProcessor
    void setConnReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setConnReuseStrategy
    void setResponseFactory(org.apache.http.HttpResponseFactory) -> setResponseFactory
    void setParams(org.apache.http.params.HttpParams) -> setParams
    void setHandlerResolver(org.apache.http.protocol.HttpRequestHandlerResolver) -> setHandlerResolver
    void setExpectationVerifier(org.apache.http.protocol.HttpExpectationVerifier) -> setExpectationVerifier
    org.apache.http.params.HttpParams getParams() -> getParams
    void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext) -> handleRequest
    void handleException(org.apache.http.HttpException,org.apache.http.HttpResponse) -> handleException
    void doService(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> doService
org.apache.http.protocol.ImmutableHttpProcessor -> org.apache.http.protocol.ImmutableHttpProcessor:
    org.apache.http.HttpRequestInterceptor[] requestInterceptors -> requestInterceptors
    org.apache.http.HttpResponseInterceptor[] responseInterceptors -> responseInterceptors
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestConnControl -> org.apache.http.protocol.RequestConnControl:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestContent -> org.apache.http.protocol.RequestContent:
    boolean overwrite -> overwrite
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestDate -> org.apache.http.protocol.RequestDate:
    org.apache.http.protocol.HttpDateGenerator DATE_GENERATOR -> DATE_GENERATOR
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestExpectContinue -> org.apache.http.protocol.RequestExpectContinue:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestTargetHost -> org.apache.http.protocol.RequestTargetHost:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestUserAgent -> org.apache.http.protocol.RequestUserAgent:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseConnControl -> org.apache.http.protocol.ResponseConnControl:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseContent -> org.apache.http.protocol.ResponseContent:
    boolean overwrite -> overwrite
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseDate -> org.apache.http.protocol.ResponseDate:
    org.apache.http.protocol.HttpDateGenerator DATE_GENERATOR -> DATE_GENERATOR
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseServer -> org.apache.http.protocol.ResponseServer:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.SyncBasicHttpContext -> org.apache.http.protocol.SyncBasicHttpContext:
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void clear() -> clear
org.apache.http.protocol.UriPatternMatcher -> org.apache.http.protocol.UriPatternMatcher:
    java.util.Map map -> map
    void register(java.lang.String,java.lang.Object) -> register
    void unregister(java.lang.String) -> unregister
    void setHandlers(java.util.Map) -> setHandlers
    void setObjects(java.util.Map) -> setObjects
    java.util.Map getObjects() -> getObjects
    java.lang.Object lookup(java.lang.String) -> lookup
    boolean matchUriRequestPattern(java.lang.String,java.lang.String) -> matchUriRequestPattern
org.apache.http.util.ByteArrayBuffer -> org.apache.http.util.ByteArrayBuffer:
    long serialVersionUID -> serialVersionUID
    byte[] buffer -> buffer
    int len -> len
    void expand(int) -> expand
    void append(byte[],int,int) -> append
    void append(int) -> append
    void append(char[],int,int) -> append
    void append(org.apache.http.util.CharArrayBuffer,int,int) -> append
    void clear() -> clear
    byte[] toByteArray() -> toByteArray
    int byteAt(int) -> byteAt
    int capacity() -> capacity
    int length() -> length
    void ensureCapacity(int) -> ensureCapacity
    byte[] buffer() -> buffer
    void setLength(int) -> setLength
    boolean isEmpty() -> isEmpty
    boolean isFull() -> isFull
    int indexOf(byte,int,int) -> indexOf
    int indexOf(byte) -> indexOf
org.apache.http.util.CharArrayBuffer -> org.apache.http.util.CharArrayBuffer:
    long serialVersionUID -> serialVersionUID
    char[] buffer -> buffer
    int len -> len
    void expand(int) -> expand
    void append(char[],int,int) -> append
    void append(java.lang.String) -> append
    void append(org.apache.http.util.CharArrayBuffer,int,int) -> append
    void append(org.apache.http.util.CharArrayBuffer) -> append
    void append(char) -> append
    void append(byte[],int,int) -> append
    void append(org.apache.http.util.ByteArrayBuffer,int,int) -> append
    void append(java.lang.Object) -> append
    void clear() -> clear
    char[] toCharArray() -> toCharArray
    char charAt(int) -> charAt
    char[] buffer() -> buffer
    int capacity() -> capacity
    int length() -> length
    void ensureCapacity(int) -> ensureCapacity
    void setLength(int) -> setLength
    boolean isEmpty() -> isEmpty
    boolean isFull() -> isFull
    int indexOf(int,int,int) -> indexOf
    int indexOf(int) -> indexOf
    java.lang.String substring(int,int) -> substring
    java.lang.String substringTrimmed(int,int) -> substringTrimmed
    java.lang.String toString() -> toString
org.apache.http.util.EncodingUtils -> org.apache.http.util.EncodingUtils:
    java.lang.String getString(byte[],int,int,java.lang.String) -> getString
    java.lang.String getString(byte[],java.lang.String) -> getString
    byte[] getBytes(java.lang.String,java.lang.String) -> getBytes
    byte[] getAsciiBytes(java.lang.String) -> getAsciiBytes
    java.lang.String getAsciiString(byte[],int,int) -> getAsciiString
    java.lang.String getAsciiString(byte[]) -> getAsciiString
org.apache.http.util.EntityUtils -> org.apache.http.util.EntityUtils:
    void consumeQuietly(org.apache.http.HttpEntity) -> consumeQuietly
    void consume(org.apache.http.HttpEntity) -> consume
    byte[] toByteArray(org.apache.http.HttpEntity) -> toByteArray
    java.lang.String getContentCharSet(org.apache.http.HttpEntity) -> getContentCharSet
    java.lang.String getContentMimeType(org.apache.http.HttpEntity) -> getContentMimeType
    java.lang.String toString(org.apache.http.HttpEntity,java.nio.charset.Charset) -> toString
    java.lang.String toString(org.apache.http.HttpEntity,java.lang.String) -> toString
    java.lang.String toString(org.apache.http.HttpEntity) -> toString
org.apache.http.util.ExceptionUtils -> org.apache.http.util.ExceptionUtils:
    java.lang.reflect.Method INIT_CAUSE_METHOD -> INIT_CAUSE_METHOD
    java.lang.reflect.Method getInitCauseMethod() -> getInitCauseMethod
    void initCause(java.lang.Throwable,java.lang.Throwable) -> initCause
org.apache.http.util.LangUtils -> org.apache.http.util.LangUtils:
    int HASH_SEED -> HASH_SEED
    int HASH_OFFSET -> HASH_OFFSET
    int hashCode(int,int) -> hashCode
    int hashCode(int,boolean) -> hashCode
    int hashCode(int,java.lang.Object) -> hashCode
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    boolean equals(java.lang.Object[],java.lang.Object[]) -> equals
org.apache.http.util.VersionInfo -> org.apache.http.util.VersionInfo:
    java.lang.String UNAVAILABLE -> UNAVAILABLE
    java.lang.String VERSION_PROPERTY_FILE -> VERSION_PROPERTY_FILE
    java.lang.String PROPERTY_MODULE -> PROPERTY_MODULE
    java.lang.String PROPERTY_RELEASE -> PROPERTY_RELEASE
    java.lang.String PROPERTY_TIMESTAMP -> PROPERTY_TIMESTAMP
    java.lang.String infoPackage -> infoPackage
    java.lang.String infoModule -> infoModule
    java.lang.String infoRelease -> infoRelease
    java.lang.String infoTimestamp -> infoTimestamp
    java.lang.String infoClassloader -> infoClassloader
    java.lang.String getPackage() -> getPackage
    java.lang.String getModule() -> getModule
    java.lang.String getRelease() -> getRelease
    java.lang.String getTimestamp() -> getTimestamp
    java.lang.String getClassloader() -> getClassloader
    java.lang.String toString() -> toString
    org.apache.http.util.VersionInfo[] loadVersionInfo(java.lang.String[],java.lang.ClassLoader) -> loadVersionInfo
    org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader) -> loadVersionInfo
    org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader) -> fromMap
org.apache.james.mime4j.MimeException -> org.apache.james.mime4j.MimeException:
    long serialVersionUID -> serialVersionUID
org.apache.james.mime4j.MimeIOException -> org.apache.james.mime4j.MimeIOException:
    long serialVersionUID -> serialVersionUID
org.apache.james.mime4j.codec.Base64InputStream -> org.apache.james.mime4j.codec.Base64InputStream:
    org.apache.commons.logging.Log log -> log
    int ENCODED_BUFFER_SIZE -> ENCODED_BUFFER_SIZE
    int[] BASE64_DECODE -> BASE64_DECODE
    byte BASE64_PAD -> BASE64_PAD
    int EOF -> EOF
    byte[] singleByte -> singleByte
    boolean strict -> strict
    java.io.InputStream in -> in
    boolean closed -> closed
    byte[] encoded -> encoded
    int position -> position
    int size -> size
    org.apache.james.mime4j.codec.ByteQueue q -> q
    boolean eof -> eof
    boolean $assertionsDisabled -> $assertionsDisabled
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void close() -> close
    int read0(byte[],int,int) -> read0
    int decodePad(int,int,byte[],int,int) -> decodePad
    void handleUnexpectedEof(int) -> handleUnexpectedEof
    void handleUnexpecedPad(int) -> handleUnexpecedPad
org.apache.james.mime4j.codec.Base64OutputStream -> org.apache.james.mime4j.codec.Base64OutputStream:
    int DEFAULT_LINE_LENGTH -> DEFAULT_LINE_LENGTH
    byte[] CRLF_SEPARATOR -> CRLF_SEPARATOR
    byte[] BASE64_TABLE -> BASE64_TABLE
    byte BASE64_PAD -> BASE64_PAD
    java.util.Set BASE64_CHARS -> BASE64_CHARS
    int MASK_6BITS -> MASK_6BITS
    int ENCODED_BUFFER_SIZE -> ENCODED_BUFFER_SIZE
    byte[] singleByte -> singleByte
    int lineLength -> lineLength
    byte[] lineSeparator -> lineSeparator
    boolean closed -> closed
    byte[] encoded -> encoded
    int position -> position
    int data -> data
    int modulus -> modulus
    int linePosition -> linePosition
    boolean $assertionsDisabled -> $assertionsDisabled
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void write0(byte[],int,int) -> write0
    void flush0() -> flush0
    void close0() -> close0
    void writePad() -> writePad
    void writeLineSeparator() -> writeLineSeparator
    void checkLineSeparator(byte[]) -> checkLineSeparator
org.apache.james.mime4j.codec.ByteQueue -> org.apache.james.mime4j.codec.ByteQueue:
    org.apache.james.mime4j.codec.UnboundedFifoByteBuffer buf -> buf
    int initialCapacity -> initialCapacity
    void enqueue(byte) -> enqueue
    byte dequeue() -> dequeue
    int count() -> count
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
org.apache.james.mime4j.codec.CodecUtil -> org.apache.james.mime4j.codec.CodecUtil:
    int DEFAULT_ENCODING_BUFFER_SIZE -> DEFAULT_ENCODING_BUFFER_SIZE
    void copy(java.io.InputStream,java.io.OutputStream) -> copy
    void encodeQuotedPrintableBinary(java.io.InputStream,java.io.OutputStream) -> encodeQuotedPrintableBinary
    void encodeQuotedPrintable(java.io.InputStream,java.io.OutputStream) -> encodeQuotedPrintable
    void encodeBase64(java.io.InputStream,java.io.OutputStream) -> encodeBase64
    java.io.OutputStream wrapQuotedPrintable(java.io.OutputStream,boolean) -> wrapQuotedPrintable
    java.io.OutputStream wrapBase64(java.io.OutputStream) -> wrapBase64
org.apache.james.mime4j.codec.DecoderUtil -> org.apache.james.mime4j.codec.DecoderUtil:
    org.apache.commons.logging.Log log -> log
    byte[] decodeBaseQuotedPrintable(java.lang.String) -> decodeBaseQuotedPrintable
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    java.lang.String decodeB(java.lang.String,java.lang.String) -> decodeB
    java.lang.String decodeQ(java.lang.String,java.lang.String) -> decodeQ
    java.lang.String decodeEncodedWords(java.lang.String) -> decodeEncodedWords
    java.lang.String decodeEncodedWord(java.lang.String,int,int) -> decodeEncodedWord
org.apache.james.mime4j.codec.EncoderUtil -> org.apache.james.mime4j.codec.EncoderUtil:
    byte[] BASE64_TABLE -> BASE64_TABLE
    char BASE64_PAD -> BASE64_PAD
    java.util.BitSet Q_REGULAR_CHARS -> Q_REGULAR_CHARS
    java.util.BitSet Q_RESTRICTED_CHARS -> Q_RESTRICTED_CHARS
    int MAX_USED_CHARACTERS -> MAX_USED_CHARACTERS
    java.lang.String ENC_WORD_PREFIX -> ENC_WORD_PREFIX
    java.lang.String ENC_WORD_SUFFIX -> ENC_WORD_SUFFIX
    int ENCODED_WORD_MAX_LENGTH -> ENCODED_WORD_MAX_LENGTH
    java.util.BitSet TOKEN_CHARS -> TOKEN_CHARS
    java.util.BitSet ATEXT_CHARS -> ATEXT_CHARS
    java.util.BitSet initChars(java.lang.String) -> initChars
    java.lang.String encodeAddressDisplayName(java.lang.String) -> encodeAddressDisplayName
    java.lang.String encodeAddressLocalPart(java.lang.String) -> encodeAddressLocalPart
    java.lang.String encodeHeaderParameter(java.lang.String,java.lang.String) -> encodeHeaderParameter
    java.lang.String encodeIfNecessary(java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage,int) -> encodeIfNecessary
    boolean hasToBeEncoded(java.lang.String,int) -> hasToBeEncoded
    java.lang.String encodeEncodedWord(java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage) -> encodeEncodedWord
    java.lang.String encodeEncodedWord(java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage,int) -> encodeEncodedWord
    java.lang.String encodeEncodedWord(java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage,int,java.nio.charset.Charset,org.apache.james.mime4j.codec.EncoderUtil$Encoding) -> encodeEncodedWord
    java.lang.String encodeB(byte[]) -> encodeB
    java.lang.String encodeQ(byte[],org.apache.james.mime4j.codec.EncoderUtil$Usage) -> encodeQ
    boolean isToken(java.lang.String) -> isToken
    boolean isAtomPhrase(java.lang.String) -> isAtomPhrase
    boolean isDotAtomText(java.lang.String) -> isDotAtomText
    java.lang.String quote(java.lang.String) -> quote
    java.lang.String encodeB(java.lang.String,java.lang.String,int,java.nio.charset.Charset,byte[]) -> encodeB
    int bEncodedLength(byte[]) -> bEncodedLength
    java.lang.String encodeQ(java.lang.String,java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage,int,java.nio.charset.Charset,byte[]) -> encodeQ
    int qEncodedLength(byte[],org.apache.james.mime4j.codec.EncoderUtil$Usage) -> qEncodedLength
    byte[] encode(java.lang.String,java.nio.charset.Charset) -> encode
    java.nio.charset.Charset determineCharset(java.lang.String) -> determineCharset
    org.apache.james.mime4j.codec.EncoderUtil$Encoding determineEncoding(byte[],org.apache.james.mime4j.codec.EncoderUtil$Usage) -> determineEncoding
    char hexDigit(int) -> hexDigit
org.apache.james.mime4j.codec.EncoderUtil$Encoding -> org.apache.james.mime4j.codec.EncoderUtil$Encoding:
    org.apache.james.mime4j.codec.EncoderUtil$Encoding B -> B
    org.apache.james.mime4j.codec.EncoderUtil$Encoding Q -> Q
    org.apache.james.mime4j.codec.EncoderUtil$Encoding[] $VALUES -> $VALUES
    org.apache.james.mime4j.codec.EncoderUtil$Encoding[] values() -> values
    org.apache.james.mime4j.codec.EncoderUtil$Encoding valueOf(java.lang.String) -> valueOf
org.apache.james.mime4j.codec.EncoderUtil$Usage -> org.apache.james.mime4j.codec.EncoderUtil$Usage:
    org.apache.james.mime4j.codec.EncoderUtil$Usage TEXT_TOKEN -> TEXT_TOKEN
    org.apache.james.mime4j.codec.EncoderUtil$Usage WORD_ENTITY -> WORD_ENTITY
    org.apache.james.mime4j.codec.EncoderUtil$Usage[] $VALUES -> $VALUES
    org.apache.james.mime4j.codec.EncoderUtil$Usage[] values() -> values
    org.apache.james.mime4j.codec.EncoderUtil$Usage valueOf(java.lang.String) -> valueOf
org.apache.james.mime4j.codec.QuotedPrintableEncoder -> org.apache.james.mime4j.codec.QuotedPrintableEncoder:
    byte TAB -> TAB
    byte SPACE -> SPACE
    byte EQUALS -> EQUALS
    byte CR -> CR
    byte LF -> LF
    byte QUOTED_PRINTABLE_LAST_PLAIN -> QUOTED_PRINTABLE_LAST_PLAIN
    int QUOTED_PRINTABLE_MAX_LINE_LENGTH -> QUOTED_PRINTABLE_MAX_LINE_LENGTH
    int QUOTED_PRINTABLE_OCTETS_PER_ESCAPE -> QUOTED_PRINTABLE_OCTETS_PER_ESCAPE
    byte[] HEX_DIGITS -> HEX_DIGITS
    byte[] inBuffer -> inBuffer
    byte[] outBuffer -> outBuffer
    boolean binary -> binary
    boolean pendingSpace -> pendingSpace
    boolean pendingTab -> pendingTab
    boolean pendingCR -> pendingCR
    int nextSoftBreak -> nextSoftBreak
    int outputIndex -> outputIndex
    java.io.OutputStream out -> out
    void initEncoding(java.io.OutputStream) -> initEncoding
    void encodeChunk(byte[],int,int) -> encodeChunk
    void completeEncoding() -> completeEncoding
    void encode(java.io.InputStream,java.io.OutputStream) -> encode
    void writePending() -> writePending
    void clearPending() -> clearPending
    void encode(byte) -> encode
    void plain(byte) -> plain
    void escape(byte) -> escape
    void write(byte) -> write
    void softBreak() -> softBreak
    void lineBreak() -> lineBreak
    void flushOutput() -> flushOutput
org.apache.james.mime4j.codec.QuotedPrintableInputStream -> org.apache.james.mime4j.codec.QuotedPrintableInputStream:
    org.apache.commons.logging.Log log -> log
    java.io.InputStream stream -> stream
    org.apache.james.mime4j.codec.ByteQueue byteq -> byteq
    org.apache.james.mime4j.codec.ByteQueue pushbackq -> pushbackq
    byte state -> state
    boolean closed -> closed
    void close() -> close
    int read() -> read
    void populatePushbackQueue() -> populatePushbackQueue
    void fillBuffer() -> fillBuffer
    byte asciiCharToNumericValue(byte) -> asciiCharToNumericValue
org.apache.james.mime4j.codec.QuotedPrintableOutputStream -> org.apache.james.mime4j.codec.QuotedPrintableOutputStream:
    org.apache.james.mime4j.codec.QuotedPrintableEncoder encoder -> encoder
    boolean closed -> closed
    void close() -> close
    void flush() -> flush
    void write(int) -> write
    void write(byte[],int,int) -> write
org.apache.james.mime4j.codec.UnboundedFifoByteBuffer -> org.apache.james.mime4j.codec.UnboundedFifoByteBuffer:
    byte[] buffer -> buffer
    int head -> head
    int tail -> tail
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean add(byte) -> add
    byte get() -> get
    byte remove() -> remove
    int increment(int) -> increment
    int decrement(int) -> decrement
    java.util.Iterator iterator() -> iterator
    int access$000(org.apache.james.mime4j.codec.UnboundedFifoByteBuffer,int) -> access$000
    int access$100(org.apache.james.mime4j.codec.UnboundedFifoByteBuffer,int) -> access$100
org.apache.james.mime4j.codec.UnboundedFifoByteBuffer$1 -> org.apache.james.mime4j.codec.UnboundedFifoByteBuffer$1:
    int index -> index
    int lastReturnedIndex -> lastReturnedIndex
    org.apache.james.mime4j.codec.UnboundedFifoByteBuffer this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Byte next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.james.mime4j.descriptor.BodyDescriptor -> org.apache.james.mime4j.descriptor.BodyDescriptor:
    java.lang.String getBoundary() -> getBoundary
org.apache.james.mime4j.descriptor.ContentDescriptor -> org.apache.james.mime4j.descriptor.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.util.Map getContentTypeParameters() -> getContentTypeParameters
    long getContentLength() -> getContentLength
org.apache.james.mime4j.descriptor.DefaultBodyDescriptor -> org.apache.james.mime4j.descriptor.DefaultBodyDescriptor:
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String SUB_TYPE_EMAIL -> SUB_TYPE_EMAIL
    java.lang.String MEDIA_TYPE_TEXT -> MEDIA_TYPE_TEXT
    java.lang.String MEDIA_TYPE_MESSAGE -> MEDIA_TYPE_MESSAGE
    java.lang.String EMAIL_MESSAGE_MIME_TYPE -> EMAIL_MESSAGE_MIME_TYPE
    java.lang.String DEFAULT_SUB_TYPE -> DEFAULT_SUB_TYPE
    java.lang.String DEFAULT_MEDIA_TYPE -> DEFAULT_MEDIA_TYPE
    java.lang.String DEFAULT_MIME_TYPE -> DEFAULT_MIME_TYPE
    org.apache.commons.logging.Log log -> log
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    java.lang.String mimeType -> mimeType
    java.lang.String boundary -> boundary
    java.lang.String charset -> charset
    java.lang.String transferEncoding -> transferEncoding
    java.util.Map parameters -> parameters
    boolean contentTypeSet -> contentTypeSet
    boolean contentTransferEncSet -> contentTransferEncSet
    long contentLength -> contentLength
    void addField(org.apache.james.mime4j.parser.Field) -> addField
    void parseContentType(java.lang.String) -> parseContentType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getBoundary() -> getBoundary
    java.lang.String getCharset() -> getCharset
    java.util.Map getContentTypeParameters() -> getContentTypeParameters
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String toString() -> toString
    long getContentLength() -> getContentLength
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
org.apache.james.mime4j.descriptor.MaximalBodyDescriptor -> org.apache.james.mime4j.descriptor.MaximalBodyDescriptor:
    int DEFAULT_MINOR_VERSION -> DEFAULT_MINOR_VERSION
    int DEFAULT_MAJOR_VERSION -> DEFAULT_MAJOR_VERSION
    boolean isMimeVersionSet -> isMimeVersionSet
    int mimeMinorVersion -> mimeMinorVersion
    int mimeMajorVersion -> mimeMajorVersion
    org.apache.james.mime4j.MimeException mimeVersionException -> mimeVersionException
    java.lang.String contentId -> contentId
    boolean isContentIdSet -> isContentIdSet
    java.lang.String contentDescription -> contentDescription
    boolean isContentDescriptionSet -> isContentDescriptionSet
    java.lang.String contentDispositionType -> contentDispositionType
    java.util.Map contentDispositionParameters -> contentDispositionParameters
    org.apache.james.mime4j.field.datetime.DateTime contentDispositionModificationDate -> contentDispositionModificationDate
    org.apache.james.mime4j.MimeException contentDispositionModificationDateParseException -> contentDispositionModificationDateParseException
    org.apache.james.mime4j.field.datetime.DateTime contentDispositionCreationDate -> contentDispositionCreationDate
    org.apache.james.mime4j.MimeException contentDispositionCreationDateParseException -> contentDispositionCreationDateParseException
    org.apache.james.mime4j.field.datetime.DateTime contentDispositionReadDate -> contentDispositionReadDate
    org.apache.james.mime4j.MimeException contentDispositionReadDateParseException -> contentDispositionReadDateParseException
    long contentDispositionSize -> contentDispositionSize
    org.apache.james.mime4j.MimeException contentDispositionSizeParseException -> contentDispositionSizeParseException
    boolean isContentDispositionSet -> isContentDispositionSet
    java.util.List contentLanguage -> contentLanguage
    org.apache.james.mime4j.MimeException contentLanguageParseException -> contentLanguageParseException
    boolean isContentLanguageSet -> isContentLanguageSet
    org.apache.james.mime4j.MimeException contentLocationParseException -> contentLocationParseException
    java.lang.String contentLocation -> contentLocation
    boolean isContentLocationSet -> isContentLocationSet
    java.lang.String contentMD5Raw -> contentMD5Raw
    boolean isContentMD5Set -> isContentMD5Set
    void addField(org.apache.james.mime4j.parser.Field) -> addField
    void parseMD5(java.lang.String) -> parseMD5
    void parseLocation(java.lang.String) -> parseLocation
    void parseLanguage(java.lang.String) -> parseLanguage
    void parseContentDisposition(java.lang.String) -> parseContentDisposition
    org.apache.james.mime4j.field.datetime.DateTime parseDate(java.lang.String) -> parseDate
    void parseContentDescription(java.lang.String) -> parseContentDescription
    void parseContentId(java.lang.String) -> parseContentId
    void parseMimeVersion(java.lang.String) -> parseMimeVersion
    int getMimeMajorVersion() -> getMimeMajorVersion
    int getMimeMinorVersion() -> getMimeMinorVersion
    org.apache.james.mime4j.MimeException getMimeVersionParseException() -> getMimeVersionParseException
    java.lang.String getContentDescription() -> getContentDescription
    java.lang.String getContentId() -> getContentId
    java.lang.String getContentDispositionType() -> getContentDispositionType
    java.util.Map getContentDispositionParameters() -> getContentDispositionParameters
    java.lang.String getContentDispositionFilename() -> getContentDispositionFilename
    org.apache.james.mime4j.field.datetime.DateTime getContentDispositionModificationDate() -> getContentDispositionModificationDate
    org.apache.james.mime4j.MimeException getContentDispositionModificationDateParseException() -> getContentDispositionModificationDateParseException
    org.apache.james.mime4j.field.datetime.DateTime getContentDispositionCreationDate() -> getContentDispositionCreationDate
    org.apache.james.mime4j.MimeException getContentDispositionCreationDateParseException() -> getContentDispositionCreationDateParseException
    org.apache.james.mime4j.field.datetime.DateTime getContentDispositionReadDate() -> getContentDispositionReadDate
    org.apache.james.mime4j.MimeException getContentDispositionReadDateParseException() -> getContentDispositionReadDateParseException
    long getContentDispositionSize() -> getContentDispositionSize
    org.apache.james.mime4j.MimeException getContentDispositionSizeParseException() -> getContentDispositionSizeParseException
    java.util.List getContentLanguage() -> getContentLanguage
    org.apache.james.mime4j.MimeException getContentLanguageParseException() -> getContentLanguageParseException
    java.lang.String getContentLocation() -> getContentLocation
    org.apache.james.mime4j.MimeException getContentLocationParseException() -> getContentLocationParseException
    java.lang.String getContentMD5Raw() -> getContentMD5Raw
org.apache.james.mime4j.descriptor.MutableBodyDescriptor -> org.apache.james.mime4j.descriptor.MutableBodyDescriptor:
    void addField(org.apache.james.mime4j.parser.Field) -> addField
org.apache.james.mime4j.field.AbstractField -> org.apache.james.mime4j.field.AbstractField:
    java.util.regex.Pattern FIELD_NAME_PATTERN -> FIELD_NAME_PATTERN
    org.apache.james.mime4j.field.DefaultFieldParser parser -> parser
    java.lang.String name -> name
    java.lang.String body -> body
    org.apache.james.mime4j.util.ByteSequence raw -> raw
    org.apache.james.mime4j.field.ParsedField parse(org.apache.james.mime4j.util.ByteSequence) -> parse
    org.apache.james.mime4j.field.ParsedField parse(java.lang.String) -> parse
    org.apache.james.mime4j.field.DefaultFieldParser getParser() -> getParser
    java.lang.String getName() -> getName
    org.apache.james.mime4j.util.ByteSequence getRaw() -> getRaw
    java.lang.String getBody() -> getBody
    boolean isValidField() -> isValidField
    org.apache.james.mime4j.field.ParseException getParseException() -> getParseException
    java.lang.String toString() -> toString
    org.apache.james.mime4j.field.ParsedField parse(org.apache.james.mime4j.util.ByteSequence,java.lang.String) -> parse
org.apache.james.mime4j.field.AddressListField -> org.apache.james.mime4j.field.AddressListField:
    org.apache.commons.logging.Log log -> log
    boolean parsed -> parsed
    org.apache.james.mime4j.field.address.AddressList addressList -> addressList
    org.apache.james.mime4j.field.address.parser.ParseException parseException -> parseException
    org.apache.james.mime4j.field.FieldParser PARSER -> PARSER
    org.apache.james.mime4j.field.address.AddressList getAddressList() -> getAddressList
    org.apache.james.mime4j.field.address.parser.ParseException getParseException() -> getParseException
    void parse() -> parse
    org.apache.james.mime4j.field.ParseException getParseException() -> getParseException
org.apache.james.mime4j.field.AddressListField$1 -> org.apache.james.mime4j.field.AddressListField$1:
    org.apache.james.mime4j.field.ParsedField parse(java.lang.String,java.lang.String,org.apache.james.mime4j.util.ByteSequence) -> parse
org.apache.james.mime4j.field.ContentDispositionField -> org.apache.james.mime4j.field.ContentDispositionField:
    org.apache.commons.logging.Log log -> log
    java.lang.String DISPOSITION_TYPE_INLINE -> DISPOSITION_TYPE_INLINE
    java.lang.String DISPOSITION_TYPE_ATTACHMENT -> DISPOSITION_TYPE_ATTACHMENT
    java.lang.String PARAM_FILENAME -> PARAM_FILENAME
    java.lang.String PARAM_CREATION_DATE -> PARAM_CREATION_DATE
    java.lang.String PARAM_MODIFICATION_DATE -> PARAM_MODIFICATION_DATE
    java.lang.String PARAM_READ_DATE -> PARAM_READ_DATE
    java.lang.String PARAM_SIZE -> PARAM_SIZE
    boolean parsed -> parsed
    java.lang.String dispositionType -> dispositionType
    java.util.Map parameters -> parameters
    org.apache.james.mime4j.field.ParseException parseException -> parseException
    boolean creationDateParsed -> creationDateParsed
    java.util.Date creationDate -> creationDate
    boolean modificationDateParsed -> modificationDateParsed
    java.util.Date modificationDate -> modificationDate
    boolean readDateParsed -> readDateParsed
    java.util.Date readDate -> readDate
    org.apache.james.mime4j.field.FieldParser PARSER -> PARSER
    org.apache.james.mime4j.field.ParseException getParseException() -> getParseException
    java.lang.String getDispositionType() -> getDispositionType
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.util.Map getParameters() -> getParameters
    boolean isDispositionType(java.lang.String) -> isDispositionType
    boolean isInline() -> isInline
    boolean isAttachment() -> isAttachment
    java.lang.String getFilename() -> getFilename
    java.util.Date getCreationDate() -> getCreationDate
    java.util.Date getModificationDate() -> getModificationDate
    java.util.Date getReadDate() -> getReadDate
    long getSize() -> getSize
    java.util.Date parseDate(java.lang.String) -> parseDate
    void parse() -> parse
org.apache.james.mime4j.field.ContentDispositionField$1 -> org.apache.james.mime4j.field.ContentDispositionField$1:
    org.apache.james.mime4j.field.ParsedField parse(java.lang.String,java.lang.String,org.apache.james.mime4j.util.ByteSequence) -> parse
org.apache.james.mime4j.field.ContentTransferEncodingField -> org.apache.james.mime4j.field.ContentTransferEncodingField:
    java.lang.String encoding -> encoding
    org.apache.james.mime4j.field.FieldParser PARSER -> PARSER
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getEncoding(org.apache.james.mime4j.field.ContentTransferEncodingField) -> getEncoding
org.apache.james.mime4j.field.ContentTransferEncodingField$1 -> org.apache.james.mime4j.field.ContentTransferEncodingField$1:
    org.apache.james.mime4j.field.ParsedField parse(java.lang.String,java.lang.String,org.apache.james.mime4j.util.ByteSequence) -> parse
org.apache.james.mime4j.field.ContentTypeField -> org.apache.james.mime4j.field.ContentTypeField:
    org.apache.commons.logging.Log log -> log
    java.lang.String TYPE_MULTIPART_PREFIX -> TYPE_MULTIPART_PREFIX
    java.lang.String TYPE_MULTIPART_DIGEST -> TYPE_MULTIPART_DIGEST
    java.lang.String TYPE_TEXT_PLAIN -> TYPE_TEXT_PLAIN
    java.lang.String TYPE_MESSAGE_RFC822 -> TYPE_MESSAGE_RFC822
    java.lang.String PARAM_BOUNDARY -> PARAM_BOUNDARY
    java.lang.String PARAM_CHARSET -> PARAM_CHARSET
    boolean parsed -> parsed
    java.lang.String mimeType -> mimeType
    java.util.Map parameters -> parameters
    org.apache.james.mime4j.field.contenttype.parser.ParseException parseException -> parseException
    org.apache.james.mime4j.field.FieldParser PARSER -> PARSER
    org.apache.james.mime4j.field.contenttype.parser.ParseException getParseException() -> getParseException
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.util.Map getParameters() -> getParameters
    boolean isMimeType(java.lang.String) -> isMimeType
    boolean isMultipart() -> isMultipart
    java.lang.String getBoundary() -> getBoundary
    java.lang.String getCharset() -> getCharset
    java.lang.String getMimeType(org.apache.james.mime4j.field.ContentTypeField,org.apache.james.mime4j.field.ContentTypeField) -> getMimeType
    java.lang.String getCharset(org.apache.james.mime4j.field.ContentTypeField) -> getCharset
    void parse() -> parse
    org.apache.james.mime4j.field.ParseException getParseException() -> getParseException
org.apache.james.mime4j.field.ContentTypeField$1 -> org.apache.james.mime4j.field.ContentTypeField$1:
    org.apache.james.mime4j.field.ParsedField parse(java.lang.String,java.lang.String,org.apache.james.mime4j.util.ByteSequence) -> parse
org.apache.james.mime4j.field.DateTimeField -> org.apache.james.mime4j.field.DateTimeField:
    org.apache.commons.logging.Log log -> log
    boolean parsed -> parsed
    java.util.Date date -> date
    org.apache.james.mime4j.field.datetime.parser.ParseException parseException -> parseException
    org.apache.james.mime4j.field.FieldParser PARSER -> PARSER
    java.util.Date getDate() -> getDate
    org.apache.james.mime4j.field.datetime.parser.ParseException getParseException() -> getParseException
    void parse() -> parse
    org.apache.james.mime4j.field.ParseException getParseException() -> getParseException
org.apache.james.mime4j.field.DateTimeField$1 -> org.apache.james.mime4j.field.DateTimeField$1:
    org.apache.james.mime4j.field.ParsedField parse(java.lang.String,java.lang.String,org.apache.james.mime4j.util.ByteSequence) -> parse
org.apache.james.mime4j.field.DefaultFieldParser -> org.apache.james.mime4j.field.DefaultFieldParser:
org.apache.james.mime4j.field.DelegatingFieldParser -> org.apache.james.mime4j.field.DelegatingFieldParser:
    java.util.Map parsers -> parsers
    org.apache.james.mime4j.field.FieldParser defaultParser -> defaultParser
    void setFieldParser(java.lang.String,org.apache.james.mime4j.field.FieldParser) -> setFieldParser
    org.apache.james.mime4j.field.FieldParser getParser(java.lang.String) -> getParser
    org.apache.james.mime4j.field.ParsedField parse(java.lang.String,java.lang.String,org.apache.james.mime4j.util.ByteSequence) -> parse
org.apache.james.mime4j.field.FieldName -> org.apache.james.mime4j.field.FieldName:
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String CONTENT_TRANSFER_ENCODING -> CONTENT_TRANSFER_ENCODING
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String DATE -> DATE
    java.lang.String MESSAGE_ID -> MESSAGE_ID
    java.lang.String SUBJECT -> SUBJECT
    java.lang.String FROM -> FROM
    java.lang.String SENDER -> SENDER
    java.lang.String TO -> TO
    java.lang.String CC -> CC
    java.lang.String BCC -> BCC
    java.lang.String REPLY_TO -> REPLY_TO
    java.lang.String RESENT_DATE -> RESENT_DATE
    java.lang.String RESENT_FROM -> RESENT_FROM
    java.lang.String RESENT_SENDER -> RESENT_SENDER
    java.lang.String RESENT_TO -> RESENT_TO
    java.lang.String RESENT_CC -> RESENT_CC
    java.lang.String RESENT_BCC -> RESENT_BCC
org.apache.james.mime4j.field.FieldParser -> org.apache.james.mime4j.field.FieldParser:
    org.apache.james.mime4j.field.ParsedField parse(java.lang.String,java.lang.String,org.apache.james.mime4j.util.ByteSequence) -> parse
org.apache.james.mime4j.field.Fields -> org.apache.james.mime4j.field.Fields:
    java.util.regex.Pattern FIELD_NAME_PATTERN -> FIELD_NAME_PATTERN
    org.apache.james.mime4j.field.ContentTypeField contentType(java.lang.String) -> contentType
    org.apache.james.mime4j.field.ContentTypeField contentType(java.lang.String,java.util.Map) -> contentType
    org.apache.james.mime4j.field.ContentTransferEncodingField contentTransferEncoding(java.lang.String) -> contentTransferEncoding
    org.apache.james.mime4j.field.ContentDispositionField contentDisposition(java.lang.String) -> contentDisposition
    org.apache.james.mime4j.field.ContentDispositionField contentDisposition(java.lang.String,java.util.Map) -> contentDisposition
    org.apache.james.mime4j.field.ContentDispositionField contentDisposition(java.lang.String,java.lang.String) -> contentDisposition
    org.apache.james.mime4j.field.ContentDispositionField contentDisposition(java.lang.String,java.lang.String,long) -> contentDisposition
    org.apache.james.mime4j.field.ContentDispositionField contentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date) -> contentDisposition
    org.apache.james.mime4j.field.DateTimeField date(java.util.Date) -> date
    org.apache.james.mime4j.field.DateTimeField date(java.lang.String,java.util.Date) -> date
    org.apache.james.mime4j.field.DateTimeField date(java.lang.String,java.util.Date,java.util.TimeZone) -> date
    org.apache.james.mime4j.parser.Field messageId(java.lang.String) -> messageId
    org.apache.james.mime4j.field.UnstructuredField subject(java.lang.String) -> subject
    org.apache.james.mime4j.field.MailboxField sender(org.apache.james.mime4j.field.address.Mailbox) -> sender
    org.apache.james.mime4j.field.MailboxListField from(org.apache.james.mime4j.field.address.Mailbox) -> from
    org.apache.james.mime4j.field.MailboxListField from(org.apache.james.mime4j.field.address.Mailbox[]) -> from
    org.apache.james.mime4j.field.MailboxListField from(java.lang.Iterable) -> from
    org.apache.james.mime4j.field.AddressListField to(org.apache.james.mime4j.field.address.Address) -> to
    org.apache.james.mime4j.field.AddressListField to(org.apache.james.mime4j.field.address.Address[]) -> to
    org.apache.james.mime4j.field.AddressListField to(java.lang.Iterable) -> to
    org.apache.james.mime4j.field.AddressListField cc(org.apache.james.mime4j.field.address.Address) -> cc
    org.apache.james.mime4j.field.AddressListField cc(org.apache.james.mime4j.field.address.Address[]) -> cc
    org.apache.james.mime4j.field.AddressListField cc(java.lang.Iterable) -> cc
    org.apache.james.mime4j.field.AddressListField bcc(org.apache.james.mime4j.field.address.Address) -> bcc
    org.apache.james.mime4j.field.AddressListField bcc(org.apache.james.mime4j.field.address.Address[]) -> bcc
    org.apache.james.mime4j.field.AddressListField bcc(java.lang.Iterable) -> bcc
    org.apache.james.mime4j.field.AddressListField replyTo(org.apache.james.mime4j.field.address.Address) -> replyTo
    org.apache.james.mime4j.field.AddressListField replyTo(org.apache.james.mime4j.field.address.Address[]) -> replyTo
    org.apache.james.mime4j.field.AddressListField replyTo(java.lang.Iterable) -> replyTo
    org.apache.james.mime4j.field.MailboxField mailbox(java.lang.String,org.apache.james.mime4j.field.address.Mailbox) -> mailbox
    org.apache.james.mime4j.field.MailboxListField mailboxList(java.lang.String,java.lang.Iterable) -> mailboxList
    org.apache.james.mime4j.field.AddressListField addressList(java.lang.String,java.lang.Iterable) -> addressList
    org.apache.james.mime4j.field.DateTimeField date0(java.lang.String,java.util.Date,java.util.TimeZone) -> date0
    org.apache.james.mime4j.field.MailboxField mailbox0(java.lang.String,org.apache.james.mime4j.field.address.Mailbox) -> mailbox0
    org.apache.james.mime4j.field.MailboxListField mailboxList0(java.lang.String,java.lang.Iterable) -> mailboxList0
    org.apache.james.mime4j.field.AddressListField addressList0(java.lang.String,java.lang.Iterable) -> addressList0
    void checkValidFieldName(java.lang.String) -> checkValidFieldName
    boolean isValidMimeType(java.lang.String) -> isValidMimeType
    boolean isValidDispositionType(java.lang.String) -> isValidDispositionType
    org.apache.james.mime4j.parser.Field parse(org.apache.james.mime4j.field.FieldParser,java.lang.String,java.lang.String) -> parse
    java.lang.String encodeAddresses(java.lang.Iterable) -> encodeAddresses
org.apache.james.mime4j.field.MailboxField -> org.apache.james.mime4j.field.MailboxField:
    org.apache.commons.logging.Log log -> log
    boolean parsed -> parsed
    org.apache.james.mime4j.field.address.Mailbox mailbox -> mailbox
    org.apache.james.mime4j.field.address.parser.ParseException parseException -> parseException
    org.apache.james.mime4j.field.FieldParser PARSER -> PARSER
    org.apache.james.mime4j.field.address.Mailbox getMailbox() -> getMailbox
    org.apache.james.mime4j.field.address.parser.ParseException getParseException() -> getParseException
    void parse() -> parse
    org.apache.james.mime4j.field.ParseException getParseException() -> getParseException
org.apache.james.mime4j.field.MailboxField$1 -> org.apache.james.mime4j.field.MailboxField$1:
    org.apache.james.mime4j.field.ParsedField parse(java.lang.String,java.lang.String,org.apache.james.mime4j.util.ByteSequence) -> parse
org.apache.james.mime4j.field.MailboxListField -> org.apache.james.mime4j.field.MailboxListField:
    org.apache.commons.logging.Log log -> log
    boolean parsed -> parsed
    org.apache.james.mime4j.field.address.MailboxList mailboxList -> mailboxList
    org.apache.james.mime4j.field.address.parser.ParseException parseException -> parseException
    org.apache.james.mime4j.field.FieldParser PARSER -> PARSER
    org.apache.james.mime4j.field.address.MailboxList getMailboxList() -> getMailboxList
    org.apache.james.mime4j.field.address.parser.ParseException getParseException() -> getParseException
    void parse() -> parse
    org.apache.james.mime4j.field.ParseException getParseException() -> getParseException
org.apache.james.mime4j.field.MailboxListField$1 -> org.apache.james.mime4j.field.MailboxListField$1:
    org.apache.james.mime4j.field.ParsedField parse(java.lang.String,java.lang.String,org.apache.james.mime4j.util.ByteSequence) -> parse
org.apache.james.mime4j.field.ParseException -> org.apache.james.mime4j.field.ParseException:
    long serialVersionUID -> serialVersionUID
org.apache.james.mime4j.field.ParsedField -> org.apache.james.mime4j.field.ParsedField:
    boolean isValidField() -> isValidField
    org.apache.james.mime4j.field.ParseException getParseException() -> getParseException
org.apache.james.mime4j.field.UnstructuredField -> org.apache.james.mime4j.field.UnstructuredField:
    boolean parsed -> parsed
    java.lang.String value -> value
    org.apache.james.mime4j.field.FieldParser PARSER -> PARSER
    java.lang.String getValue() -> getValue
    void parse() -> parse
org.apache.james.mime4j.field.UnstructuredField$1 -> org.apache.james.mime4j.field.UnstructuredField$1:
    org.apache.james.mime4j.field.ParsedField parse(java.lang.String,java.lang.String,org.apache.james.mime4j.util.ByteSequence) -> parse
org.apache.james.mime4j.field.address.Address -> org.apache.james.mime4j.field.address.Address:
    long serialVersionUID -> serialVersionUID
    void addMailboxesTo(java.util.List) -> addMailboxesTo
    void doAddMailboxesTo(java.util.List) -> doAddMailboxesTo
    java.lang.String getDisplayString() -> getDisplayString
    java.lang.String getDisplayString(boolean) -> getDisplayString
    java.lang.String getEncodedString() -> getEncodedString
    org.apache.james.mime4j.field.address.Address parse(java.lang.String) -> parse
    java.lang.String toString() -> toString
org.apache.james.mime4j.field.address.AddressList -> org.apache.james.mime4j.field.address.AddressList:
    long serialVersionUID -> serialVersionUID
    java.util.List addresses -> addresses
    int size() -> size
    org.apache.james.mime4j.field.address.Address get(int) -> get
    org.apache.james.mime4j.field.address.MailboxList flatten() -> flatten
    void print() -> print
    org.apache.james.mime4j.field.address.AddressList parse(java.lang.String) -> parse
    void main(java.lang.String[]) -> main
    java.lang.Object get(int) -> get
org.apache.james.mime4j.field.address.Builder -> org.apache.james.mime4j.field.address.Builder:
    org.apache.james.mime4j.field.address.Builder singleton -> singleton
    org.apache.james.mime4j.field.address.Builder getInstance() -> getInstance
    org.apache.james.mime4j.field.address.AddressList buildAddressList(org.apache.james.mime4j.field.address.parser.ASTaddress_list) -> buildAddressList
    org.apache.james.mime4j.field.address.Address buildAddress(org.apache.james.mime4j.field.address.parser.ASTaddress) -> buildAddress
    org.apache.james.mime4j.field.address.MailboxList buildGroupBody(org.apache.james.mime4j.field.address.parser.ASTgroup_body) -> buildGroupBody
    org.apache.james.mime4j.field.address.Mailbox buildMailbox(org.apache.james.mime4j.field.address.parser.ASTmailbox) -> buildMailbox
    org.apache.james.mime4j.field.address.Mailbox buildNameAddr(org.apache.james.mime4j.field.address.parser.ASTname_addr) -> buildNameAddr
    org.apache.james.mime4j.field.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.parser.ASTangle_addr) -> buildAngleAddr
    org.apache.james.mime4j.field.address.DomainList buildRoute(org.apache.james.mime4j.field.address.parser.ASTroute) -> buildRoute
    org.apache.james.mime4j.field.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.parser.ASTaddr_spec) -> buildAddrSpec
    org.apache.james.mime4j.field.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.DomainList,org.apache.james.mime4j.field.address.parser.ASTaddr_spec) -> buildAddrSpec
    java.lang.String buildString(org.apache.james.mime4j.field.address.parser.SimpleNode,boolean) -> buildString
    void addSpecials(java.lang.StringBuilder,org.apache.james.mime4j.field.address.parser.Token) -> addSpecials
org.apache.james.mime4j.field.address.Builder$ChildNodeIterator -> org.apache.james.mime4j.field.address.Builder$ChildNodeIterator:
    org.apache.james.mime4j.field.address.parser.SimpleNode simpleNode -> simpleNode
    int index -> index
    int len -> len
    void remove() -> remove
    boolean hasNext() -> hasNext
    org.apache.james.mime4j.field.address.parser.Node next() -> next
    java.lang.Object next() -> next
org.apache.james.mime4j.field.address.DomainList -> org.apache.james.mime4j.field.address.DomainList:
    long serialVersionUID -> serialVersionUID
    java.util.List domains -> domains
    int size() -> size
    java.lang.String get(int) -> get
    java.lang.String toRouteString() -> toRouteString
    java.lang.String toString() -> toString
    java.lang.Object get(int) -> get
org.apache.james.mime4j.field.address.Group -> org.apache.james.mime4j.field.address.Group:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    org.apache.james.mime4j.field.address.MailboxList mailboxList -> mailboxList
    org.apache.james.mime4j.field.address.Group parse(java.lang.String) -> parse
    java.lang.String getName() -> getName
    org.apache.james.mime4j.field.address.MailboxList getMailboxes() -> getMailboxes
    java.lang.String getDisplayString(boolean) -> getDisplayString
    java.lang.String getEncodedString() -> getEncodedString
    void doAddMailboxesTo(java.util.List) -> doAddMailboxesTo
org.apache.james.mime4j.field.address.Mailbox -> org.apache.james.mime4j.field.address.Mailbox:
    long serialVersionUID -> serialVersionUID
    org.apache.james.mime4j.field.address.DomainList EMPTY_ROUTE_LIST -> EMPTY_ROUTE_LIST
    java.lang.String name -> name
    org.apache.james.mime4j.field.address.DomainList route -> route
    java.lang.String localPart -> localPart
    java.lang.String domain -> domain
    org.apache.james.mime4j.field.address.Mailbox parse(java.lang.String) -> parse
    java.lang.String getName() -> getName
    org.apache.james.mime4j.field.address.DomainList getRoute() -> getRoute
    java.lang.String getLocalPart() -> getLocalPart
    java.lang.String getDomain() -> getDomain
    java.lang.String getAddress() -> getAddress
    java.lang.String getDisplayString(boolean) -> getDisplayString
    java.lang.String getEncodedString() -> getEncodedString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void doAddMailboxesTo(java.util.List) -> doAddMailboxesTo
    java.lang.Object getCanonicalizedAddress() -> getCanonicalizedAddress
org.apache.james.mime4j.field.address.MailboxList -> org.apache.james.mime4j.field.address.MailboxList:
    long serialVersionUID -> serialVersionUID
    java.util.List mailboxes -> mailboxes
    int size() -> size
    org.apache.james.mime4j.field.address.Mailbox get(int) -> get
    void print() -> print
    java.lang.Object get(int) -> get
org.apache.james.mime4j.field.address.parser.ASTaddr_spec -> org.apache.james.mime4j.field.address.parser.ASTaddr_spec:
    java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object) -> jjtAccept
org.apache.james.mime4j.field.address.parser.ASTaddress -> org.apache.james.mime4j.field.address.parser.ASTaddress:
    java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object) -> jjtAccept
org.apache.james.mime4j.field.address.parser.ASTaddress_list -> org.apache.james.mime4j.field.address.parser.ASTaddress_list:
    java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object) -> jjtAccept
org.apache.james.mime4j.field.address.parser.ASTangle_addr -> org.apache.james.mime4j.field.address.parser.ASTangle_addr:
    java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object) -> jjtAccept
org.apache.james.mime4j.field.address.parser.ASTdomain -> org.apache.james.mime4j.field.address.parser.ASTdomain:
    java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object) -> jjtAccept
org.apache.james.mime4j.field.address.parser.ASTgroup_body -> org.apache.james.mime4j.field.address.parser.ASTgroup_body:
    java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object) -> jjtAccept
org.apache.james.mime4j.field.address.parser.ASTlocal_part -> org.apache.james.mime4j.field.address.parser.ASTlocal_part:
    java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object) -> jjtAccept
org.apache.james.mime4j.field.address.parser.ASTmailbox -> org.apache.james.mime4j.field.address.parser.ASTmailbox:
    java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object) -> jjtAccept
org.apache.james.mime4j.field.address.parser.ASTname_addr -> org.apache.james.mime4j.field.address.parser.ASTname_addr:
    java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object) -> jjtAccept
org.apache.james.mime4j.field.address.parser.ASTphrase -> org.apache.james.mime4j.field.address.parser.ASTphrase:
    java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object) -> jjtAccept
org.apache.james.mime4j.field.address.parser.ASTroute -> org.apache.james.mime4j.field.address.parser.ASTroute:
    java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object) -> jjtAccept
org.apache.james.mime4j.field.address.parser.AddressListParser -> org.apache.james.mime4j.field.address.parser.AddressListParser:
    org.apache.james.mime4j.field.address.parser.JJTAddressListParserState jjtree -> jjtree
    org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager token_source -> token_source
    org.apache.james.mime4j.field.address.parser.SimpleCharStream jj_input_stream -> jj_input_stream
    org.apache.james.mime4j.field.address.parser.Token token -> token
    org.apache.james.mime4j.field.address.parser.Token jj_nt -> jj_nt
    int jj_ntk -> jj_ntk
    org.apache.james.mime4j.field.address.parser.Token jj_scanpos -> jj_scanpos
    org.apache.james.mime4j.field.address.parser.Token jj_lastpos -> jj_lastpos
    int jj_la -> jj_la
    boolean lookingAhead -> lookingAhead
    boolean jj_semLA -> jj_semLA
    int jj_gen -> jj_gen
    int[] jj_la1 -> jj_la1
    int[] jj_la1_0 -> jj_la1_0
    int[] jj_la1_1 -> jj_la1_1
    org.apache.james.mime4j.field.address.parser.AddressListParser$JJCalls[] jj_2_rtns -> jj_2_rtns
    boolean jj_rescan -> jj_rescan
    int jj_gc -> jj_gc
    org.apache.james.mime4j.field.address.parser.AddressListParser$LookaheadSuccess jj_ls -> jj_ls
    java.util.Vector jj_expentries -> jj_expentries
    int[] jj_expentry -> jj_expentry
    int jj_kind -> jj_kind
    int[] jj_lasttokens -> jj_lasttokens
    int jj_endpos -> jj_endpos
    void main(java.lang.String[]) -> main
    org.apache.james.mime4j.field.address.parser.ASTaddress_list parseAddressList() -> parseAddressList
    org.apache.james.mime4j.field.address.parser.ASTaddress parseAddress() -> parseAddress
    org.apache.james.mime4j.field.address.parser.ASTmailbox parseMailbox() -> parseMailbox
    void jjtreeOpenNodeScope(org.apache.james.mime4j.field.address.parser.Node) -> jjtreeOpenNodeScope
    void jjtreeCloseNodeScope(org.apache.james.mime4j.field.address.parser.Node) -> jjtreeCloseNodeScope
    void parseLine() -> parseLine
    void parseAddressList0() -> parseAddressList0
    void parseAddress0() -> parseAddress0
    void parseMailbox0() -> parseMailbox0
    void address_list() -> address_list
    void address() -> address
    void mailbox() -> mailbox
    void name_addr() -> name_addr
    void group_body() -> group_body
    void angle_addr() -> angle_addr
    void route() -> route
    void phrase() -> phrase
    void addr_spec() -> addr_spec
    void local_part() -> local_part
    void domain() -> domain
    boolean jj_2_1(int) -> jj_2_1
    boolean jj_2_2(int) -> jj_2_2
    boolean jj_3R_12() -> jj_3R_12
    boolean jj_3R_10() -> jj_3R_10
    boolean jj_3_2() -> jj_3_2
    boolean jj_3R_9() -> jj_3R_9
    boolean jj_3R_11() -> jj_3R_11
    boolean jj_3R_13() -> jj_3R_13
    boolean jj_3R_8() -> jj_3R_8
    boolean jj_3_1() -> jj_3_1
    void jj_la1_0() -> jj_la1_0
    void jj_la1_1() -> jj_la1_1
    void ReInit(java.io.InputStream) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String) -> ReInit
    void ReInit(java.io.Reader) -> ReInit
    void ReInit(org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager) -> ReInit
    org.apache.james.mime4j.field.address.parser.Token jj_consume_token(int) -> jj_consume_token
    boolean jj_scan_token(int) -> jj_scan_token
    org.apache.james.mime4j.field.address.parser.Token getNextToken() -> getNextToken
    org.apache.james.mime4j.field.address.parser.Token getToken(int) -> getToken
    int jj_ntk() -> jj_ntk
    void jj_add_error_token(int,int) -> jj_add_error_token
    org.apache.james.mime4j.field.address.parser.ParseException generateParseException() -> generateParseException
    void enable_tracing() -> enable_tracing
    void disable_tracing() -> disable_tracing
    void jj_rescan_token() -> jj_rescan_token
    void jj_save(int,int) -> jj_save
org.apache.james.mime4j.field.address.parser.AddressListParser$1 -> org.apache.james.mime4j.field.address.parser.AddressListParser$1:
org.apache.james.mime4j.field.address.parser.AddressListParser$JJCalls -> org.apache.james.mime4j.field.address.parser.AddressListParser$JJCalls:
    int gen -> gen
    org.apache.james.mime4j.field.address.parser.Token first -> first
    int arg -> arg
    org.apache.james.mime4j.field.address.parser.AddressListParser$JJCalls next -> next
org.apache.james.mime4j.field.address.parser.AddressListParser$LookaheadSuccess -> org.apache.james.mime4j.field.address.parser.AddressListParser$LookaheadSuccess:
org.apache.james.mime4j.field.address.parser.AddressListParserConstants -> org.apache.james.mime4j.field.address.parser.AddressListParserConstants:
    int EOF -> EOF
    int WS -> WS
    int ALPHA -> ALPHA
    int DIGIT -> DIGIT
    int ATEXT -> ATEXT
    int DOTATOM -> DOTATOM
    int DOMAINLITERAL -> DOMAINLITERAL
    int COMMENT -> COMMENT
    int QUOTEDSTRING -> QUOTEDSTRING
    int QUOTEDPAIR -> QUOTEDPAIR
    int ANY -> ANY
    int DEFAULT -> DEFAULT
    int INDOMAINLITERAL -> INDOMAINLITERAL
    int INCOMMENT -> INCOMMENT
    int NESTED_COMMENT -> NESTED_COMMENT
    int INQUOTEDSTRING -> INQUOTEDSTRING
    java.lang.String[] tokenImage -> tokenImage
org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager -> org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager:
    int commentNest -> commentNest
    java.io.PrintStream debugStream -> debugStream
    long[] jjbitVec0 -> jjbitVec0
    int[] jjnextStates -> jjnextStates
    java.lang.String[] jjstrLiteralImages -> jjstrLiteralImages
    java.lang.String[] lexStateNames -> lexStateNames
    int[] jjnewLexState -> jjnewLexState
    long[] jjtoToken -> jjtoToken
    long[] jjtoSkip -> jjtoSkip
    long[] jjtoSpecial -> jjtoSpecial
    long[] jjtoMore -> jjtoMore
    org.apache.james.mime4j.field.address.parser.SimpleCharStream input_stream -> input_stream
    int[] jjrounds -> jjrounds
    int[] jjstateSet -> jjstateSet
    java.lang.StringBuffer image -> image
    int jjimageLen -> jjimageLen
    int lengthOfMatch -> lengthOfMatch
    char curChar -> curChar
    int curLexState -> curLexState
    int defaultLexState -> defaultLexState
    int jjnewStateCnt -> jjnewStateCnt
    int jjround -> jjround
    int jjmatchedPos -> jjmatchedPos
    int jjmatchedKind -> jjmatchedKind
    void setDebugStream(java.io.PrintStream) -> setDebugStream
    int jjStopStringLiteralDfa_0(int,long) -> jjStopStringLiteralDfa_0
    int jjStartNfa_0(int,long) -> jjStartNfa_0
    int jjStopAtPos(int,int) -> jjStopAtPos
    int jjStartNfaWithStates_0(int,int,int) -> jjStartNfaWithStates_0
    int jjMoveStringLiteralDfa0_0() -> jjMoveStringLiteralDfa0_0
    void jjCheckNAdd(int) -> jjCheckNAdd
    void jjAddStates(int,int) -> jjAddStates
    void jjCheckNAddTwoStates(int,int) -> jjCheckNAddTwoStates
    void jjCheckNAddStates(int,int) -> jjCheckNAddStates
    void jjCheckNAddStates(int) -> jjCheckNAddStates
    int jjMoveNfa_0(int,int) -> jjMoveNfa_0
    int jjStopStringLiteralDfa_2(int,long) -> jjStopStringLiteralDfa_2
    int jjStartNfa_2(int,long) -> jjStartNfa_2
    int jjStartNfaWithStates_2(int,int,int) -> jjStartNfaWithStates_2
    int jjMoveStringLiteralDfa0_2() -> jjMoveStringLiteralDfa0_2
    int jjMoveNfa_2(int,int) -> jjMoveNfa_2
    int jjStopStringLiteralDfa_4(int,long) -> jjStopStringLiteralDfa_4
    int jjStartNfa_4(int,long) -> jjStartNfa_4
    int jjStartNfaWithStates_4(int,int,int) -> jjStartNfaWithStates_4
    int jjMoveStringLiteralDfa0_4() -> jjMoveStringLiteralDfa0_4
    int jjMoveNfa_4(int,int) -> jjMoveNfa_4
    int jjStopStringLiteralDfa_3(int,long) -> jjStopStringLiteralDfa_3
    int jjStartNfa_3(int,long) -> jjStartNfa_3
    int jjStartNfaWithStates_3(int,int,int) -> jjStartNfaWithStates_3
    int jjMoveStringLiteralDfa0_3() -> jjMoveStringLiteralDfa0_3
    int jjMoveNfa_3(int,int) -> jjMoveNfa_3
    int jjStopStringLiteralDfa_1(int,long) -> jjStopStringLiteralDfa_1
    int jjStartNfa_1(int,long) -> jjStartNfa_1
    int jjStartNfaWithStates_1(int,int,int) -> jjStartNfaWithStates_1
    int jjMoveStringLiteralDfa0_1() -> jjMoveStringLiteralDfa0_1
    int jjMoveNfa_1(int,int) -> jjMoveNfa_1
    void ReInit(org.apache.james.mime4j.field.address.parser.SimpleCharStream) -> ReInit
    void ReInitRounds() -> ReInitRounds
    void ReInit(org.apache.james.mime4j.field.address.parser.SimpleCharStream,int) -> ReInit
    void SwitchTo(int) -> SwitchTo
    org.apache.james.mime4j.field.address.parser.Token jjFillToken() -> jjFillToken
    org.apache.james.mime4j.field.address.parser.Token getNextToken() -> getNextToken
    void MoreLexicalActions() -> MoreLexicalActions
    void TokenLexicalActions(org.apache.james.mime4j.field.address.parser.Token) -> TokenLexicalActions
org.apache.james.mime4j.field.address.parser.AddressListParserTreeConstants -> org.apache.james.mime4j.field.address.parser.AddressListParserTreeConstants:
    int JJTVOID -> JJTVOID
    int JJTADDRESS_LIST -> JJTADDRESS_LIST
    int JJTADDRESS -> JJTADDRESS
    int JJTMAILBOX -> JJTMAILBOX
    int JJTNAME_ADDR -> JJTNAME_ADDR
    int JJTGROUP_BODY -> JJTGROUP_BODY
    int JJTANGLE_ADDR -> JJTANGLE_ADDR
    int JJTROUTE -> JJTROUTE
    int JJTPHRASE -> JJTPHRASE
    int JJTADDR_SPEC -> JJTADDR_SPEC
    int JJTLOCAL_PART -> JJTLOCAL_PART
    int JJTDOMAIN -> JJTDOMAIN
    java.lang.String[] jjtNodeName -> jjtNodeName
org.apache.james.mime4j.field.address.parser.AddressListParserVisitor -> org.apache.james.mime4j.field.address.parser.AddressListParserVisitor:
    java.lang.Object visit(org.apache.james.mime4j.field.address.parser.SimpleNode,java.lang.Object) -> visit
    java.lang.Object visit(org.apache.james.mime4j.field.address.parser.ASTaddress_list,java.lang.Object) -> visit
    java.lang.Object visit(org.apache.james.mime4j.field.address.parser.ASTaddress,java.lang.Object) -> visit
    java.lang.Object visit(org.apache.james.mime4j.field.address.parser.ASTmailbox,java.lang.Object) -> visit
    java.lang.Object visit(org.apache.james.mime4j.field.address.parser.ASTname_addr,java.lang.Object) -> visit
    java.lang.Object visit(org.apache.james.mime4j.field.address.parser.ASTgroup_body,java.lang.Object) -> visit
    java.lang.Object visit(org.apache.james.mime4j.field.address.parser.ASTangle_addr,java.lang.Object) -> visit
    java.lang.Object visit(org.apache.james.mime4j.field.address.parser.ASTroute,java.lang.Object) -> visit
    java.lang.Object visit(org.apache.james.mime4j.field.address.parser.ASTphrase,java.lang.Object) -> visit
    java.lang.Object visit(org.apache.james.mime4j.field.address.parser.ASTaddr_spec,java.lang.Object) -> visit
    java.lang.Object visit(org.apache.james.mime4j.field.address.parser.ASTlocal_part,java.lang.Object) -> visit
    java.lang.Object visit(org.apache.james.mime4j.field.address.parser.ASTdomain,java.lang.Object) -> visit
org.apache.james.mime4j.field.address.parser.BaseNode -> org.apache.james.mime4j.field.address.parser.BaseNode:
    org.apache.james.mime4j.field.address.parser.Token firstToken -> firstToken
    org.apache.james.mime4j.field.address.parser.Token lastToken -> lastToken
org.apache.james.mime4j.field.address.parser.JJTAddressListParserState -> org.apache.james.mime4j.field.address.parser.JJTAddressListParserState:
    java.util.Stack nodes -> nodes
    java.util.Stack marks -> marks
    int sp -> sp
    int mk -> mk
    boolean node_created -> node_created
    boolean nodeCreated() -> nodeCreated
    void reset() -> reset
    org.apache.james.mime4j.field.address.parser.Node rootNode() -> rootNode
    void pushNode(org.apache.james.mime4j.field.address.parser.Node) -> pushNode
    org.apache.james.mime4j.field.address.parser.Node popNode() -> popNode
    org.apache.james.mime4j.field.address.parser.Node peekNode() -> peekNode
    int nodeArity() -> nodeArity
    void clearNodeScope(org.apache.james.mime4j.field.address.parser.Node) -> clearNodeScope
    void openNodeScope(org.apache.james.mime4j.field.address.parser.Node) -> openNodeScope
    void closeNodeScope(org.apache.james.mime4j.field.address.parser.Node,int) -> closeNodeScope
    void closeNodeScope(org.apache.james.mime4j.field.address.parser.Node,boolean) -> closeNodeScope
org.apache.james.mime4j.field.address.parser.Node -> org.apache.james.mime4j.field.address.parser.Node:
    void jjtOpen() -> jjtOpen
    void jjtClose() -> jjtClose
    void jjtSetParent(org.apache.james.mime4j.field.address.parser.Node) -> jjtSetParent
    org.apache.james.mime4j.field.address.parser.Node jjtGetParent() -> jjtGetParent
    void jjtAddChild(org.apache.james.mime4j.field.address.parser.Node,int) -> jjtAddChild
    org.apache.james.mime4j.field.address.parser.Node jjtGetChild(int) -> jjtGetChild
    int jjtGetNumChildren() -> jjtGetNumChildren
    java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object) -> jjtAccept
org.apache.james.mime4j.field.address.parser.ParseException -> org.apache.james.mime4j.field.address.parser.ParseException:
    long serialVersionUID -> serialVersionUID
    boolean specialConstructor -> specialConstructor
    org.apache.james.mime4j.field.address.parser.Token currentToken -> currentToken
    int[][] expectedTokenSequences -> expectedTokenSequences
    java.lang.String[] tokenImage -> tokenImage
    java.lang.String eol -> eol
    java.lang.String getMessage() -> getMessage
    java.lang.String add_escapes(java.lang.String) -> add_escapes
org.apache.james.mime4j.field.address.parser.SimpleCharStream -> org.apache.james.mime4j.field.address.parser.SimpleCharStream:
    boolean staticFlag -> staticFlag
    int bufsize -> bufsize
    int available -> available
    int tokenBegin -> tokenBegin
    int bufpos -> bufpos
    int[] bufline -> bufline
    int[] bufcolumn -> bufcolumn
    int column -> column
    int line -> line
    boolean prevCharIsCR -> prevCharIsCR
    boolean prevCharIsLF -> prevCharIsLF
    java.io.Reader inputStream -> inputStream
    char[] buffer -> buffer
    int maxNextCharInd -> maxNextCharInd
    int inBuf -> inBuf
    int tabSize -> tabSize
    void setTabSize(int) -> setTabSize
    int getTabSize(int) -> getTabSize
    void ExpandBuff(boolean) -> ExpandBuff
    void FillBuff() -> FillBuff
    char BeginToken() -> BeginToken
    void UpdateLineColumn(char) -> UpdateLineColumn
    char readChar() -> readChar
    int getColumn() -> getColumn
    int getLine() -> getLine
    int getEndColumn() -> getEndColumn
    int getEndLine() -> getEndLine
    int getBeginColumn() -> getBeginColumn
    int getBeginLine() -> getBeginLine
    void backup(int) -> backup
    void ReInit(java.io.Reader,int,int,int) -> ReInit
    void ReInit(java.io.Reader,int,int) -> ReInit
    void ReInit(java.io.Reader) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String,int,int,int) -> ReInit
    void ReInit(java.io.InputStream,int,int,int) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String) -> ReInit
    void ReInit(java.io.InputStream) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String,int,int) -> ReInit
    void ReInit(java.io.InputStream,int,int) -> ReInit
    java.lang.String GetImage() -> GetImage
    char[] GetSuffix(int) -> GetSuffix
    void Done() -> Done
    void adjustBeginLineColumn(int,int) -> adjustBeginLineColumn
org.apache.james.mime4j.field.address.parser.SimpleNode -> org.apache.james.mime4j.field.address.parser.SimpleNode:
    org.apache.james.mime4j.field.address.parser.Node parent -> parent
    org.apache.james.mime4j.field.address.parser.Node[] children -> children
    int id -> id
    org.apache.james.mime4j.field.address.parser.AddressListParser parser -> parser
    void jjtOpen() -> jjtOpen
    void jjtClose() -> jjtClose
    void jjtSetParent(org.apache.james.mime4j.field.address.parser.Node) -> jjtSetParent
    org.apache.james.mime4j.field.address.parser.Node jjtGetParent() -> jjtGetParent
    void jjtAddChild(org.apache.james.mime4j.field.address.parser.Node,int) -> jjtAddChild
    org.apache.james.mime4j.field.address.parser.Node jjtGetChild(int) -> jjtGetChild
    int jjtGetNumChildren() -> jjtGetNumChildren
    java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object) -> jjtAccept
    java.lang.Object childrenAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object) -> childrenAccept
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    void dump(java.lang.String) -> dump
org.apache.james.mime4j.field.address.parser.Token -> org.apache.james.mime4j.field.address.parser.Token:
    int kind -> kind
    int beginLine -> beginLine
    int beginColumn -> beginColumn
    int endLine -> endLine
    int endColumn -> endColumn
    java.lang.String image -> image
    org.apache.james.mime4j.field.address.parser.Token next -> next
    org.apache.james.mime4j.field.address.parser.Token specialToken -> specialToken
    java.lang.String toString() -> toString
    org.apache.james.mime4j.field.address.parser.Token newToken(int) -> newToken
org.apache.james.mime4j.field.address.parser.TokenMgrError -> org.apache.james.mime4j.field.address.parser.TokenMgrError:
    int LEXICAL_ERROR -> LEXICAL_ERROR
    int STATIC_LEXER_ERROR -> STATIC_LEXER_ERROR
    int INVALID_LEXICAL_STATE -> INVALID_LEXICAL_STATE
    int LOOP_DETECTED -> LOOP_DETECTED
    int errorCode -> errorCode
    java.lang.String addEscapes(java.lang.String) -> addEscapes
    java.lang.String LexicalError(boolean,int,int,int,java.lang.String,char) -> LexicalError
    java.lang.String getMessage() -> getMessage
org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser -> org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParser:
    java.lang.String dispositionType -> dispositionType
    java.util.List paramNames -> paramNames
    java.util.List paramValues -> paramValues
    org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParserTokenManager token_source -> token_source
    org.apache.james.mime4j.field.contentdisposition.parser.SimpleCharStream jj_input_stream -> jj_input_stream
    org.apache.james.mime4j.field.contentdisposition.parser.Token token -> token
    org.apache.james.mime4j.field.contentdisposition.parser.Token jj_nt -> jj_nt
    int jj_ntk -> jj_ntk
    int jj_gen -> jj_gen
    int[] jj_la1 -> jj_la1
    int[] jj_la1_0 -> jj_la1_0
    java.util.Vector jj_expentries -> jj_expentries
    int[] jj_expentry -> jj_expentry
    int jj_kind -> jj_kind
    java.lang.String getDispositionType() -> getDispositionType
    java.util.List getParamNames() -> getParamNames
    java.util.List getParamValues() -> getParamValues
    void main(java.lang.String[]) -> main
    void parseLine() -> parseLine
    void parseAll() -> parseAll
    void parse() -> parse
    void parameter() -> parameter
    java.lang.String value() -> value
    void jj_la1_0() -> jj_la1_0
    void ReInit(java.io.InputStream) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String) -> ReInit
    void ReInit(java.io.Reader) -> ReInit
    void ReInit(org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParserTokenManager) -> ReInit
    org.apache.james.mime4j.field.contentdisposition.parser.Token jj_consume_token(int) -> jj_consume_token
    org.apache.james.mime4j.field.contentdisposition.parser.Token getNextToken() -> getNextToken
    org.apache.james.mime4j.field.contentdisposition.parser.Token getToken(int) -> getToken
    int jj_ntk() -> jj_ntk
    org.apache.james.mime4j.field.contentdisposition.parser.ParseException generateParseException() -> generateParseException
    void enable_tracing() -> enable_tracing
    void disable_tracing() -> disable_tracing
org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParserConstants -> org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParserConstants:
    int EOF -> EOF
    int WS -> WS
    int COMMENT -> COMMENT
    int QUOTEDSTRING -> QUOTEDSTRING
    int DIGITS -> DIGITS
    int ATOKEN -> ATOKEN
    int QUOTEDPAIR -> QUOTEDPAIR
    int ANY -> ANY
    int DEFAULT -> DEFAULT
    int INCOMMENT -> INCOMMENT
    int NESTED_COMMENT -> NESTED_COMMENT
    int INQUOTEDSTRING -> INQUOTEDSTRING
    java.lang.String[] tokenImage -> tokenImage
org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParserTokenManager -> org.apache.james.mime4j.field.contentdisposition.parser.ContentDispositionParserTokenManager:
    int commentNest -> commentNest
    java.io.PrintStream debugStream -> debugStream
    long[] jjbitVec0 -> jjbitVec0
    int[] jjnextStates -> jjnextStates
    java.lang.String[] jjstrLiteralImages -> jjstrLiteralImages
    java.lang.String[] lexStateNames -> lexStateNames
    int[] jjnewLexState -> jjnewLexState
    long[] jjtoToken -> jjtoToken
    long[] jjtoSkip -> jjtoSkip
    long[] jjtoSpecial -> jjtoSpecial
    long[] jjtoMore -> jjtoMore
    org.apache.james.mime4j.field.contentdisposition.parser.SimpleCharStream input_stream -> input_stream
    int[] jjrounds -> jjrounds
    int[] jjstateSet -> jjstateSet
    java.lang.StringBuffer image -> image
    int jjimageLen -> jjimageLen
    int lengthOfMatch -> lengthOfMatch
    char curChar -> curChar
    int curLexState -> curLexState
    int defaultLexState -> defaultLexState
    int jjnewStateCnt -> jjnewStateCnt
    int jjround -> jjround
    int jjmatchedPos -> jjmatchedPos
    int jjmatchedKind -> jjmatchedKind
    void setDebugStream(java.io.PrintStream) -> setDebugStream
    int jjStopStringLiteralDfa_0(int,long) -> jjStopStringLiteralDfa_0
    int jjStartNfa_0(int,long) -> jjStartNfa_0
    int jjStopAtPos(int,int) -> jjStopAtPos
    int jjStartNfaWithStates_0(int,int,int) -> jjStartNfaWithStates_0
    int jjMoveStringLiteralDfa0_0() -> jjMoveStringLiteralDfa0_0
    void jjCheckNAdd(int) -> jjCheckNAdd
    void jjAddStates(int,int) -> jjAddStates
    void jjCheckNAddTwoStates(int,int) -> jjCheckNAddTwoStates
    void jjCheckNAddStates(int,int) -> jjCheckNAddStates
    void jjCheckNAddStates(int) -> jjCheckNAddStates
    int jjMoveNfa_0(int,int) -> jjMoveNfa_0
    int jjStopStringLiteralDfa_1(int,long) -> jjStopStringLiteralDfa_1
    int jjStartNfa_1(int,long) -> jjStartNfa_1
    int jjStartNfaWithStates_1(int,int,int) -> jjStartNfaWithStates_1
    int jjMoveStringLiteralDfa0_1() -> jjMoveStringLiteralDfa0_1
    int jjMoveNfa_1(int,int) -> jjMoveNfa_1
    int jjStopStringLiteralDfa_3(int,long) -> jjStopStringLiteralDfa_3
    int jjStartNfa_3(int,long) -> jjStartNfa_3
    int jjStartNfaWithStates_3(int,int,int) -> jjStartNfaWithStates_3
    int jjMoveStringLiteralDfa0_3() -> jjMoveStringLiteralDfa0_3
    int jjMoveNfa_3(int,int) -> jjMoveNfa_3
    int jjStopStringLiteralDfa_2(int,long) -> jjStopStringLiteralDfa_2
    int jjStartNfa_2(int,long) -> jjStartNfa_2
    int jjStartNfaWithStates_2(int,int,int) -> jjStartNfaWithStates_2
    int jjMoveStringLiteralDfa0_2() -> jjMoveStringLiteralDfa0_2
    int jjMoveNfa_2(int,int) -> jjMoveNfa_2
    void ReInit(org.apache.james.mime4j.field.contentdisposition.parser.SimpleCharStream) -> ReInit
    void ReInitRounds() -> ReInitRounds
    void ReInit(org.apache.james.mime4j.field.contentdisposition.parser.SimpleCharStream,int) -> ReInit
    void SwitchTo(int) -> SwitchTo
    org.apache.james.mime4j.field.contentdisposition.parser.Token jjFillToken() -> jjFillToken
    org.apache.james.mime4j.field.contentdisposition.parser.Token getNextToken() -> getNextToken
    void MoreLexicalActions() -> MoreLexicalActions
    void TokenLexicalActions(org.apache.james.mime4j.field.contentdisposition.parser.Token) -> TokenLexicalActions
org.apache.james.mime4j.field.contentdisposition.parser.ParseException -> org.apache.james.mime4j.field.contentdisposition.parser.ParseException:
    long serialVersionUID -> serialVersionUID
    boolean specialConstructor -> specialConstructor
    org.apache.james.mime4j.field.contentdisposition.parser.Token currentToken -> currentToken
    int[][] expectedTokenSequences -> expectedTokenSequences
    java.lang.String[] tokenImage -> tokenImage
    java.lang.String eol -> eol
    java.lang.String getMessage() -> getMessage
    java.lang.String add_escapes(java.lang.String) -> add_escapes
org.apache.james.mime4j.field.contentdisposition.parser.SimpleCharStream -> org.apache.james.mime4j.field.contentdisposition.parser.SimpleCharStream:
    boolean staticFlag -> staticFlag
    int bufsize -> bufsize
    int available -> available
    int tokenBegin -> tokenBegin
    int bufpos -> bufpos
    int[] bufline -> bufline
    int[] bufcolumn -> bufcolumn
    int column -> column
    int line -> line
    boolean prevCharIsCR -> prevCharIsCR
    boolean prevCharIsLF -> prevCharIsLF
    java.io.Reader inputStream -> inputStream
    char[] buffer -> buffer
    int maxNextCharInd -> maxNextCharInd
    int inBuf -> inBuf
    int tabSize -> tabSize
    void setTabSize(int) -> setTabSize
    int getTabSize(int) -> getTabSize
    void ExpandBuff(boolean) -> ExpandBuff
    void FillBuff() -> FillBuff
    char BeginToken() -> BeginToken
    void UpdateLineColumn(char) -> UpdateLineColumn
    char readChar() -> readChar
    int getColumn() -> getColumn
    int getLine() -> getLine
    int getEndColumn() -> getEndColumn
    int getEndLine() -> getEndLine
    int getBeginColumn() -> getBeginColumn
    int getBeginLine() -> getBeginLine
    void backup(int) -> backup
    void ReInit(java.io.Reader,int,int,int) -> ReInit
    void ReInit(java.io.Reader,int,int) -> ReInit
    void ReInit(java.io.Reader) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String,int,int,int) -> ReInit
    void ReInit(java.io.InputStream,int,int,int) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String) -> ReInit
    void ReInit(java.io.InputStream) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String,int,int) -> ReInit
    void ReInit(java.io.InputStream,int,int) -> ReInit
    java.lang.String GetImage() -> GetImage
    char[] GetSuffix(int) -> GetSuffix
    void Done() -> Done
    void adjustBeginLineColumn(int,int) -> adjustBeginLineColumn
org.apache.james.mime4j.field.contentdisposition.parser.Token -> org.apache.james.mime4j.field.contentdisposition.parser.Token:
    int kind -> kind
    int beginLine -> beginLine
    int beginColumn -> beginColumn
    int endLine -> endLine
    int endColumn -> endColumn
    java.lang.String image -> image
    org.apache.james.mime4j.field.contentdisposition.parser.Token next -> next
    org.apache.james.mime4j.field.contentdisposition.parser.Token specialToken -> specialToken
    java.lang.String toString() -> toString
    org.apache.james.mime4j.field.contentdisposition.parser.Token newToken(int) -> newToken
org.apache.james.mime4j.field.contentdisposition.parser.TokenMgrError -> org.apache.james.mime4j.field.contentdisposition.parser.TokenMgrError:
    int LEXICAL_ERROR -> LEXICAL_ERROR
    int STATIC_LEXER_ERROR -> STATIC_LEXER_ERROR
    int INVALID_LEXICAL_STATE -> INVALID_LEXICAL_STATE
    int LOOP_DETECTED -> LOOP_DETECTED
    int errorCode -> errorCode
    java.lang.String addEscapes(java.lang.String) -> addEscapes
    java.lang.String LexicalError(boolean,int,int,int,java.lang.String,char) -> LexicalError
    java.lang.String getMessage() -> getMessage
org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser -> org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser:
    java.lang.String type -> type
    java.lang.String subtype -> subtype
    java.util.List paramNames -> paramNames
    java.util.List paramValues -> paramValues
    org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager token_source -> token_source
    org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream jj_input_stream -> jj_input_stream
    org.apache.james.mime4j.field.contenttype.parser.Token token -> token
    org.apache.james.mime4j.field.contenttype.parser.Token jj_nt -> jj_nt
    int jj_ntk -> jj_ntk
    int jj_gen -> jj_gen
    int[] jj_la1 -> jj_la1
    int[] jj_la1_0 -> jj_la1_0
    java.util.Vector jj_expentries -> jj_expentries
    int[] jj_expentry -> jj_expentry
    int jj_kind -> jj_kind
    java.lang.String getType() -> getType
    java.lang.String getSubType() -> getSubType
    java.util.List getParamNames() -> getParamNames
    java.util.List getParamValues() -> getParamValues
    void main(java.lang.String[]) -> main
    void parseLine() -> parseLine
    void parseAll() -> parseAll
    void parse() -> parse
    void parameter() -> parameter
    java.lang.String value() -> value
    void jj_la1_0() -> jj_la1_0
    void ReInit(java.io.InputStream) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String) -> ReInit
    void ReInit(java.io.Reader) -> ReInit
    void ReInit(org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager) -> ReInit
    org.apache.james.mime4j.field.contenttype.parser.Token jj_consume_token(int) -> jj_consume_token
    org.apache.james.mime4j.field.contenttype.parser.Token getNextToken() -> getNextToken
    org.apache.james.mime4j.field.contenttype.parser.Token getToken(int) -> getToken
    int jj_ntk() -> jj_ntk
    org.apache.james.mime4j.field.contenttype.parser.ParseException generateParseException() -> generateParseException
    void enable_tracing() -> enable_tracing
    void disable_tracing() -> disable_tracing
org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserConstants -> org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserConstants:
    int EOF -> EOF
    int WS -> WS
    int COMMENT -> COMMENT
    int QUOTEDSTRING -> QUOTEDSTRING
    int DIGITS -> DIGITS
    int ATOKEN -> ATOKEN
    int QUOTEDPAIR -> QUOTEDPAIR
    int ANY -> ANY
    int DEFAULT -> DEFAULT
    int INCOMMENT -> INCOMMENT
    int NESTED_COMMENT -> NESTED_COMMENT
    int INQUOTEDSTRING -> INQUOTEDSTRING
    java.lang.String[] tokenImage -> tokenImage
org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager -> org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager:
    int commentNest -> commentNest
    java.io.PrintStream debugStream -> debugStream
    long[] jjbitVec0 -> jjbitVec0
    int[] jjnextStates -> jjnextStates
    java.lang.String[] jjstrLiteralImages -> jjstrLiteralImages
    java.lang.String[] lexStateNames -> lexStateNames
    int[] jjnewLexState -> jjnewLexState
    long[] jjtoToken -> jjtoToken
    long[] jjtoSkip -> jjtoSkip
    long[] jjtoSpecial -> jjtoSpecial
    long[] jjtoMore -> jjtoMore
    org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream input_stream -> input_stream
    int[] jjrounds -> jjrounds
    int[] jjstateSet -> jjstateSet
    java.lang.StringBuffer image -> image
    int jjimageLen -> jjimageLen
    int lengthOfMatch -> lengthOfMatch
    char curChar -> curChar
    int curLexState -> curLexState
    int defaultLexState -> defaultLexState
    int jjnewStateCnt -> jjnewStateCnt
    int jjround -> jjround
    int jjmatchedPos -> jjmatchedPos
    int jjmatchedKind -> jjmatchedKind
    void setDebugStream(java.io.PrintStream) -> setDebugStream
    int jjStopStringLiteralDfa_0(int,long) -> jjStopStringLiteralDfa_0
    int jjStartNfa_0(int,long) -> jjStartNfa_0
    int jjStopAtPos(int,int) -> jjStopAtPos
    int jjStartNfaWithStates_0(int,int,int) -> jjStartNfaWithStates_0
    int jjMoveStringLiteralDfa0_0() -> jjMoveStringLiteralDfa0_0
    void jjCheckNAdd(int) -> jjCheckNAdd
    void jjAddStates(int,int) -> jjAddStates
    void jjCheckNAddTwoStates(int,int) -> jjCheckNAddTwoStates
    void jjCheckNAddStates(int,int) -> jjCheckNAddStates
    void jjCheckNAddStates(int) -> jjCheckNAddStates
    int jjMoveNfa_0(int,int) -> jjMoveNfa_0
    int jjStopStringLiteralDfa_1(int,long) -> jjStopStringLiteralDfa_1
    int jjStartNfa_1(int,long) -> jjStartNfa_1
    int jjStartNfaWithStates_1(int,int,int) -> jjStartNfaWithStates_1
    int jjMoveStringLiteralDfa0_1() -> jjMoveStringLiteralDfa0_1
    int jjMoveNfa_1(int,int) -> jjMoveNfa_1
    int jjStopStringLiteralDfa_3(int,long) -> jjStopStringLiteralDfa_3
    int jjStartNfa_3(int,long) -> jjStartNfa_3
    int jjStartNfaWithStates_3(int,int,int) -> jjStartNfaWithStates_3
    int jjMoveStringLiteralDfa0_3() -> jjMoveStringLiteralDfa0_3
    int jjMoveNfa_3(int,int) -> jjMoveNfa_3
    int jjStopStringLiteralDfa_2(int,long) -> jjStopStringLiteralDfa_2
    int jjStartNfa_2(int,long) -> jjStartNfa_2
    int jjStartNfaWithStates_2(int,int,int) -> jjStartNfaWithStates_2
    int jjMoveStringLiteralDfa0_2() -> jjMoveStringLiteralDfa0_2
    int jjMoveNfa_2(int,int) -> jjMoveNfa_2
    void ReInit(org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream) -> ReInit
    void ReInitRounds() -> ReInitRounds
    void ReInit(org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream,int) -> ReInit
    void SwitchTo(int) -> SwitchTo
    org.apache.james.mime4j.field.contenttype.parser.Token jjFillToken() -> jjFillToken
    org.apache.james.mime4j.field.contenttype.parser.Token getNextToken() -> getNextToken
    void MoreLexicalActions() -> MoreLexicalActions
    void TokenLexicalActions(org.apache.james.mime4j.field.contenttype.parser.Token) -> TokenLexicalActions
org.apache.james.mime4j.field.contenttype.parser.ParseException -> org.apache.james.mime4j.field.contenttype.parser.ParseException:
    long serialVersionUID -> serialVersionUID
    boolean specialConstructor -> specialConstructor
    org.apache.james.mime4j.field.contenttype.parser.Token currentToken -> currentToken
    int[][] expectedTokenSequences -> expectedTokenSequences
    java.lang.String[] tokenImage -> tokenImage
    java.lang.String eol -> eol
    java.lang.String getMessage() -> getMessage
    java.lang.String add_escapes(java.lang.String) -> add_escapes
org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream -> org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream:
    boolean staticFlag -> staticFlag
    int bufsize -> bufsize
    int available -> available
    int tokenBegin -> tokenBegin
    int bufpos -> bufpos
    int[] bufline -> bufline
    int[] bufcolumn -> bufcolumn
    int column -> column
    int line -> line
    boolean prevCharIsCR -> prevCharIsCR
    boolean prevCharIsLF -> prevCharIsLF
    java.io.Reader inputStream -> inputStream
    char[] buffer -> buffer
    int maxNextCharInd -> maxNextCharInd
    int inBuf -> inBuf
    int tabSize -> tabSize
    void setTabSize(int) -> setTabSize
    int getTabSize(int) -> getTabSize
    void ExpandBuff(boolean) -> ExpandBuff
    void FillBuff() -> FillBuff
    char BeginToken() -> BeginToken
    void UpdateLineColumn(char) -> UpdateLineColumn
    char readChar() -> readChar
    int getColumn() -> getColumn
    int getLine() -> getLine
    int getEndColumn() -> getEndColumn
    int getEndLine() -> getEndLine
    int getBeginColumn() -> getBeginColumn
    int getBeginLine() -> getBeginLine
    void backup(int) -> backup
    void ReInit(java.io.Reader,int,int,int) -> ReInit
    void ReInit(java.io.Reader,int,int) -> ReInit
    void ReInit(java.io.Reader) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String,int,int,int) -> ReInit
    void ReInit(java.io.InputStream,int,int,int) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String) -> ReInit
    void ReInit(java.io.InputStream) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String,int,int) -> ReInit
    void ReInit(java.io.InputStream,int,int) -> ReInit
    java.lang.String GetImage() -> GetImage
    char[] GetSuffix(int) -> GetSuffix
    void Done() -> Done
    void adjustBeginLineColumn(int,int) -> adjustBeginLineColumn
org.apache.james.mime4j.field.contenttype.parser.Token -> org.apache.james.mime4j.field.contenttype.parser.Token:
    int kind -> kind
    int beginLine -> beginLine
    int beginColumn -> beginColumn
    int endLine -> endLine
    int endColumn -> endColumn
    java.lang.String image -> image
    org.apache.james.mime4j.field.contenttype.parser.Token next -> next
    org.apache.james.mime4j.field.contenttype.parser.Token specialToken -> specialToken
    java.lang.String toString() -> toString
    org.apache.james.mime4j.field.contenttype.parser.Token newToken(int) -> newToken
org.apache.james.mime4j.field.contenttype.parser.TokenMgrError -> org.apache.james.mime4j.field.contenttype.parser.TokenMgrError:
    int LEXICAL_ERROR -> LEXICAL_ERROR
    int STATIC_LEXER_ERROR -> STATIC_LEXER_ERROR
    int INVALID_LEXICAL_STATE -> INVALID_LEXICAL_STATE
    int LOOP_DETECTED -> LOOP_DETECTED
    int errorCode -> errorCode
    java.lang.String addEscapes(java.lang.String) -> addEscapes
    java.lang.String LexicalError(boolean,int,int,int,java.lang.String,char) -> LexicalError
    java.lang.String getMessage() -> getMessage
org.apache.james.mime4j.field.datetime.DateTime -> org.apache.james.mime4j.field.datetime.DateTime:
    java.util.Date date -> date
    int year -> year
    int month -> month
    int day -> day
    int hour -> hour
    int minute -> minute
    int second -> second
    int timeZone -> timeZone
    int convertToYear(java.lang.String) -> convertToYear
    java.util.Date convertToDate(int,int,int,int,int,int,int) -> convertToDate
    java.util.Date getDate() -> getDate
    int getYear() -> getYear
    int getMonth() -> getMonth
    int getDay() -> getDay
    int getHour() -> getHour
    int getMinute() -> getMinute
    int getSecond() -> getSecond
    int getTimeZone() -> getTimeZone
    void print() -> print
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.james.mime4j.field.datetime.parser.DateTimeParser -> org.apache.james.mime4j.field.datetime.parser.DateTimeParser:
    boolean ignoreMilitaryZoneOffset -> ignoreMilitaryZoneOffset
    org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager token_source -> token_source
    org.apache.james.mime4j.field.datetime.parser.SimpleCharStream jj_input_stream -> jj_input_stream
    org.apache.james.mime4j.field.datetime.parser.Token token -> token
    org.apache.james.mime4j.field.datetime.parser.Token jj_nt -> jj_nt
    int jj_ntk -> jj_ntk
    int jj_gen -> jj_gen
    int[] jj_la1 -> jj_la1
    int[] jj_la1_0 -> jj_la1_0
    int[] jj_la1_1 -> jj_la1_1
    java.util.Vector jj_expentries -> jj_expentries
    int[] jj_expentry -> jj_expentry
    int jj_kind -> jj_kind
    void main(java.lang.String[]) -> main
    int parseDigits(org.apache.james.mime4j.field.datetime.parser.Token) -> parseDigits
    int getMilitaryZoneOffset(char) -> getMilitaryZoneOffset
    org.apache.james.mime4j.field.datetime.DateTime parseLine() -> parseLine
    org.apache.james.mime4j.field.datetime.DateTime parseAll() -> parseAll
    org.apache.james.mime4j.field.datetime.DateTime date_time() -> date_time
    java.lang.String day_of_week() -> day_of_week
    org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date date() -> date
    int day() -> day
    int month() -> month
    java.lang.String year() -> year
    org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time time() -> time
    int hour() -> hour
    int minute() -> minute
    int second() -> second
    int zone() -> zone
    int obs_zone() -> obs_zone
    void jj_la1_0() -> jj_la1_0
    void jj_la1_1() -> jj_la1_1
    void ReInit(java.io.InputStream) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String) -> ReInit
    void ReInit(java.io.Reader) -> ReInit
    void ReInit(org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager) -> ReInit
    org.apache.james.mime4j.field.datetime.parser.Token jj_consume_token(int) -> jj_consume_token
    org.apache.james.mime4j.field.datetime.parser.Token getNextToken() -> getNextToken
    org.apache.james.mime4j.field.datetime.parser.Token getToken(int) -> getToken
    int jj_ntk() -> jj_ntk
    org.apache.james.mime4j.field.datetime.parser.ParseException generateParseException() -> generateParseException
    void enable_tracing() -> enable_tracing
    void disable_tracing() -> disable_tracing
org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date -> org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date:
    java.lang.String year -> year
    int month -> month
    int day -> day
    java.lang.String getYear() -> getYear
    int getMonth() -> getMonth
    int getDay() -> getDay
org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time -> org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time:
    int hour -> hour
    int minute -> minute
    int second -> second
    int zone -> zone
    int getHour() -> getHour
    int getMinute() -> getMinute
    int getSecond() -> getSecond
    int getZone() -> getZone
org.apache.james.mime4j.field.datetime.parser.DateTimeParserConstants -> org.apache.james.mime4j.field.datetime.parser.DateTimeParserConstants:
    int EOF -> EOF
    int OFFSETDIR -> OFFSETDIR
    int MILITARY_ZONE -> MILITARY_ZONE
    int WS -> WS
    int COMMENT -> COMMENT
    int DIGITS -> DIGITS
    int QUOTEDPAIR -> QUOTEDPAIR
    int ANY -> ANY
    int DEFAULT -> DEFAULT
    int INCOMMENT -> INCOMMENT
    int NESTED_COMMENT -> NESTED_COMMENT
    java.lang.String[] tokenImage -> tokenImage
org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager -> org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager:
    int commentNest -> commentNest
    java.io.PrintStream debugStream -> debugStream
    long[] jjbitVec0 -> jjbitVec0
    int[] jjnextStates -> jjnextStates
    java.lang.String[] jjstrLiteralImages -> jjstrLiteralImages
    java.lang.String[] lexStateNames -> lexStateNames
    int[] jjnewLexState -> jjnewLexState
    long[] jjtoToken -> jjtoToken
    long[] jjtoSkip -> jjtoSkip
    long[] jjtoSpecial -> jjtoSpecial
    long[] jjtoMore -> jjtoMore
    org.apache.james.mime4j.field.datetime.parser.SimpleCharStream input_stream -> input_stream
    int[] jjrounds -> jjrounds
    int[] jjstateSet -> jjstateSet
    java.lang.StringBuffer image -> image
    int jjimageLen -> jjimageLen
    int lengthOfMatch -> lengthOfMatch
    char curChar -> curChar
    int curLexState -> curLexState
    int defaultLexState -> defaultLexState
    int jjnewStateCnt -> jjnewStateCnt
    int jjround -> jjround
    int jjmatchedPos -> jjmatchedPos
    int jjmatchedKind -> jjmatchedKind
    void setDebugStream(java.io.PrintStream) -> setDebugStream
    int jjStopStringLiteralDfa_0(int,long) -> jjStopStringLiteralDfa_0
    int jjStartNfa_0(int,long) -> jjStartNfa_0
    int jjStopAtPos(int,int) -> jjStopAtPos
    int jjStartNfaWithStates_0(int,int,int) -> jjStartNfaWithStates_0
    int jjMoveStringLiteralDfa0_0() -> jjMoveStringLiteralDfa0_0
    int jjMoveStringLiteralDfa1_0(long) -> jjMoveStringLiteralDfa1_0
    int jjMoveStringLiteralDfa2_0(long,long) -> jjMoveStringLiteralDfa2_0
    void jjCheckNAdd(int) -> jjCheckNAdd
    void jjAddStates(int,int) -> jjAddStates
    void jjCheckNAddTwoStates(int,int) -> jjCheckNAddTwoStates
    void jjCheckNAddStates(int,int) -> jjCheckNAddStates
    void jjCheckNAddStates(int) -> jjCheckNAddStates
    int jjMoveNfa_0(int,int) -> jjMoveNfa_0
    int jjStopStringLiteralDfa_1(int,long) -> jjStopStringLiteralDfa_1
    int jjStartNfa_1(int,long) -> jjStartNfa_1
    int jjStartNfaWithStates_1(int,int,int) -> jjStartNfaWithStates_1
    int jjMoveStringLiteralDfa0_1() -> jjMoveStringLiteralDfa0_1
    int jjMoveNfa_1(int,int) -> jjMoveNfa_1
    int jjStopStringLiteralDfa_2(int,long) -> jjStopStringLiteralDfa_2
    int jjStartNfa_2(int,long) -> jjStartNfa_2
    int jjStartNfaWithStates_2(int,int,int) -> jjStartNfaWithStates_2
    int jjMoveStringLiteralDfa0_2() -> jjMoveStringLiteralDfa0_2
    int jjMoveNfa_2(int,int) -> jjMoveNfa_2
    void ReInit(org.apache.james.mime4j.field.datetime.parser.SimpleCharStream) -> ReInit
    void ReInitRounds() -> ReInitRounds
    void ReInit(org.apache.james.mime4j.field.datetime.parser.SimpleCharStream,int) -> ReInit
    void SwitchTo(int) -> SwitchTo
    org.apache.james.mime4j.field.datetime.parser.Token jjFillToken() -> jjFillToken
    org.apache.james.mime4j.field.datetime.parser.Token getNextToken() -> getNextToken
    void MoreLexicalActions() -> MoreLexicalActions
org.apache.james.mime4j.field.datetime.parser.ParseException -> org.apache.james.mime4j.field.datetime.parser.ParseException:
    long serialVersionUID -> serialVersionUID
    boolean specialConstructor -> specialConstructor
    org.apache.james.mime4j.field.datetime.parser.Token currentToken -> currentToken
    int[][] expectedTokenSequences -> expectedTokenSequences
    java.lang.String[] tokenImage -> tokenImage
    java.lang.String eol -> eol
    java.lang.String getMessage() -> getMessage
    java.lang.String add_escapes(java.lang.String) -> add_escapes
org.apache.james.mime4j.field.datetime.parser.SimpleCharStream -> org.apache.james.mime4j.field.datetime.parser.SimpleCharStream:
    boolean staticFlag -> staticFlag
    int bufsize -> bufsize
    int available -> available
    int tokenBegin -> tokenBegin
    int bufpos -> bufpos
    int[] bufline -> bufline
    int[] bufcolumn -> bufcolumn
    int column -> column
    int line -> line
    boolean prevCharIsCR -> prevCharIsCR
    boolean prevCharIsLF -> prevCharIsLF
    java.io.Reader inputStream -> inputStream
    char[] buffer -> buffer
    int maxNextCharInd -> maxNextCharInd
    int inBuf -> inBuf
    int tabSize -> tabSize
    void setTabSize(int) -> setTabSize
    int getTabSize(int) -> getTabSize
    void ExpandBuff(boolean) -> ExpandBuff
    void FillBuff() -> FillBuff
    char BeginToken() -> BeginToken
    void UpdateLineColumn(char) -> UpdateLineColumn
    char readChar() -> readChar
    int getColumn() -> getColumn
    int getLine() -> getLine
    int getEndColumn() -> getEndColumn
    int getEndLine() -> getEndLine
    int getBeginColumn() -> getBeginColumn
    int getBeginLine() -> getBeginLine
    void backup(int) -> backup
    void ReInit(java.io.Reader,int,int,int) -> ReInit
    void ReInit(java.io.Reader,int,int) -> ReInit
    void ReInit(java.io.Reader) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String,int,int,int) -> ReInit
    void ReInit(java.io.InputStream,int,int,int) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String) -> ReInit
    void ReInit(java.io.InputStream) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String,int,int) -> ReInit
    void ReInit(java.io.InputStream,int,int) -> ReInit
    java.lang.String GetImage() -> GetImage
    char[] GetSuffix(int) -> GetSuffix
    void Done() -> Done
    void adjustBeginLineColumn(int,int) -> adjustBeginLineColumn
org.apache.james.mime4j.field.datetime.parser.Token -> org.apache.james.mime4j.field.datetime.parser.Token:
    int kind -> kind
    int beginLine -> beginLine
    int beginColumn -> beginColumn
    int endLine -> endLine
    int endColumn -> endColumn
    java.lang.String image -> image
    org.apache.james.mime4j.field.datetime.parser.Token next -> next
    org.apache.james.mime4j.field.datetime.parser.Token specialToken -> specialToken
    java.lang.String toString() -> toString
    org.apache.james.mime4j.field.datetime.parser.Token newToken(int) -> newToken
org.apache.james.mime4j.field.datetime.parser.TokenMgrError -> org.apache.james.mime4j.field.datetime.parser.TokenMgrError:
    int LEXICAL_ERROR -> LEXICAL_ERROR
    int STATIC_LEXER_ERROR -> STATIC_LEXER_ERROR
    int INVALID_LEXICAL_STATE -> INVALID_LEXICAL_STATE
    int LOOP_DETECTED -> LOOP_DETECTED
    int errorCode -> errorCode
    java.lang.String addEscapes(java.lang.String) -> addEscapes
    java.lang.String LexicalError(boolean,int,int,int,java.lang.String,char) -> LexicalError
    java.lang.String getMessage() -> getMessage
org.apache.james.mime4j.field.language.parser.ContentLanguageParser -> org.apache.james.mime4j.field.language.parser.ContentLanguageParser:
    java.util.List languages -> languages
    org.apache.james.mime4j.field.language.parser.ContentLanguageParserTokenManager token_source -> token_source
    org.apache.james.mime4j.field.language.parser.SimpleCharStream jj_input_stream -> jj_input_stream
    org.apache.james.mime4j.field.language.parser.Token token -> token
    org.apache.james.mime4j.field.language.parser.Token jj_nt -> jj_nt
    int jj_ntk -> jj_ntk
    int jj_gen -> jj_gen
    int[] jj_la1 -> jj_la1
    int[] jj_la1_0 -> jj_la1_0
    java.util.Vector jj_expentries -> jj_expentries
    int[] jj_expentry -> jj_expentry
    int jj_kind -> jj_kind
    java.util.List parse() -> parse
    java.util.List doParse() -> doParse
    java.lang.String language() -> language
    void jj_la1_0() -> jj_la1_0
    void ReInit(java.io.InputStream) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String) -> ReInit
    void ReInit(java.io.Reader) -> ReInit
    void ReInit(org.apache.james.mime4j.field.language.parser.ContentLanguageParserTokenManager) -> ReInit
    org.apache.james.mime4j.field.language.parser.Token jj_consume_token(int) -> jj_consume_token
    org.apache.james.mime4j.field.language.parser.Token getNextToken() -> getNextToken
    org.apache.james.mime4j.field.language.parser.Token getToken(int) -> getToken
    int jj_ntk() -> jj_ntk
    org.apache.james.mime4j.field.language.parser.ParseException generateParseException() -> generateParseException
    void enable_tracing() -> enable_tracing
    void disable_tracing() -> disable_tracing
org.apache.james.mime4j.field.language.parser.ContentLanguageParserConstants -> org.apache.james.mime4j.field.language.parser.ContentLanguageParserConstants:
    int EOF -> EOF
    int WS -> WS
    int COMMENT -> COMMENT
    int QUOTEDSTRING -> QUOTEDSTRING
    int DIGITS -> DIGITS
    int ALPHA -> ALPHA
    int ALPHANUM -> ALPHANUM
    int DOT -> DOT
    int QUOTEDPAIR -> QUOTEDPAIR
    int ANY -> ANY
    int DEFAULT -> DEFAULT
    int INCOMMENT -> INCOMMENT
    int NESTED_COMMENT -> NESTED_COMMENT
    int INQUOTEDSTRING -> INQUOTEDSTRING
    java.lang.String[] tokenImage -> tokenImage
org.apache.james.mime4j.field.language.parser.ContentLanguageParserTokenManager -> org.apache.james.mime4j.field.language.parser.ContentLanguageParserTokenManager:
    int commentNest -> commentNest
    java.io.PrintStream debugStream -> debugStream
    long[] jjbitVec0 -> jjbitVec0
    int[] jjnextStates -> jjnextStates
    java.lang.String[] jjstrLiteralImages -> jjstrLiteralImages
    java.lang.String[] lexStateNames -> lexStateNames
    int[] jjnewLexState -> jjnewLexState
    long[] jjtoToken -> jjtoToken
    long[] jjtoSkip -> jjtoSkip
    long[] jjtoSpecial -> jjtoSpecial
    long[] jjtoMore -> jjtoMore
    org.apache.james.mime4j.field.language.parser.SimpleCharStream input_stream -> input_stream
    int[] jjrounds -> jjrounds
    int[] jjstateSet -> jjstateSet
    java.lang.StringBuffer image -> image
    int jjimageLen -> jjimageLen
    int lengthOfMatch -> lengthOfMatch
    char curChar -> curChar
    int curLexState -> curLexState
    int defaultLexState -> defaultLexState
    int jjnewStateCnt -> jjnewStateCnt
    int jjround -> jjround
    int jjmatchedPos -> jjmatchedPos
    int jjmatchedKind -> jjmatchedKind
    void setDebugStream(java.io.PrintStream) -> setDebugStream
    int jjStopStringLiteralDfa_0(int,long) -> jjStopStringLiteralDfa_0
    int jjStartNfa_0(int,long) -> jjStartNfa_0
    int jjStopAtPos(int,int) -> jjStopAtPos
    int jjStartNfaWithStates_0(int,int,int) -> jjStartNfaWithStates_0
    int jjMoveStringLiteralDfa0_0() -> jjMoveStringLiteralDfa0_0
    void jjCheckNAdd(int) -> jjCheckNAdd
    void jjAddStates(int,int) -> jjAddStates
    void jjCheckNAddTwoStates(int,int) -> jjCheckNAddTwoStates
    void jjCheckNAddStates(int,int) -> jjCheckNAddStates
    void jjCheckNAddStates(int) -> jjCheckNAddStates
    int jjMoveNfa_0(int,int) -> jjMoveNfa_0
    int jjStopStringLiteralDfa_1(int,long) -> jjStopStringLiteralDfa_1
    int jjStartNfa_1(int,long) -> jjStartNfa_1
    int jjStartNfaWithStates_1(int,int,int) -> jjStartNfaWithStates_1
    int jjMoveStringLiteralDfa0_1() -> jjMoveStringLiteralDfa0_1
    int jjMoveNfa_1(int,int) -> jjMoveNfa_1
    int jjStopStringLiteralDfa_3(int,long) -> jjStopStringLiteralDfa_3
    int jjStartNfa_3(int,long) -> jjStartNfa_3
    int jjStartNfaWithStates_3(int,int,int) -> jjStartNfaWithStates_3
    int jjMoveStringLiteralDfa0_3() -> jjMoveStringLiteralDfa0_3
    int jjMoveNfa_3(int,int) -> jjMoveNfa_3
    int jjStopStringLiteralDfa_2(int,long) -> jjStopStringLiteralDfa_2
    int jjStartNfa_2(int,long) -> jjStartNfa_2
    int jjStartNfaWithStates_2(int,int,int) -> jjStartNfaWithStates_2
    int jjMoveStringLiteralDfa0_2() -> jjMoveStringLiteralDfa0_2
    int jjMoveNfa_2(int,int) -> jjMoveNfa_2
    void ReInit(org.apache.james.mime4j.field.language.parser.SimpleCharStream) -> ReInit
    void ReInitRounds() -> ReInitRounds
    void ReInit(org.apache.james.mime4j.field.language.parser.SimpleCharStream,int) -> ReInit
    void SwitchTo(int) -> SwitchTo
    org.apache.james.mime4j.field.language.parser.Token jjFillToken() -> jjFillToken
    org.apache.james.mime4j.field.language.parser.Token getNextToken() -> getNextToken
    void MoreLexicalActions() -> MoreLexicalActions
    void TokenLexicalActions(org.apache.james.mime4j.field.language.parser.Token) -> TokenLexicalActions
org.apache.james.mime4j.field.language.parser.ParseException -> org.apache.james.mime4j.field.language.parser.ParseException:
    long serialVersionUID -> serialVersionUID
    boolean specialConstructor -> specialConstructor
    org.apache.james.mime4j.field.language.parser.Token currentToken -> currentToken
    int[][] expectedTokenSequences -> expectedTokenSequences
    java.lang.String[] tokenImage -> tokenImage
    java.lang.String eol -> eol
    java.lang.String getMessage() -> getMessage
    java.lang.String add_escapes(java.lang.String) -> add_escapes
org.apache.james.mime4j.field.language.parser.SimpleCharStream -> org.apache.james.mime4j.field.language.parser.SimpleCharStream:
    boolean staticFlag -> staticFlag
    int bufsize -> bufsize
    int available -> available
    int tokenBegin -> tokenBegin
    int bufpos -> bufpos
    int[] bufline -> bufline
    int[] bufcolumn -> bufcolumn
    int column -> column
    int line -> line
    boolean prevCharIsCR -> prevCharIsCR
    boolean prevCharIsLF -> prevCharIsLF
    java.io.Reader inputStream -> inputStream
    char[] buffer -> buffer
    int maxNextCharInd -> maxNextCharInd
    int inBuf -> inBuf
    int tabSize -> tabSize
    void setTabSize(int) -> setTabSize
    int getTabSize(int) -> getTabSize
    void ExpandBuff(boolean) -> ExpandBuff
    void FillBuff() -> FillBuff
    char BeginToken() -> BeginToken
    void UpdateLineColumn(char) -> UpdateLineColumn
    char readChar() -> readChar
    int getColumn() -> getColumn
    int getLine() -> getLine
    int getEndColumn() -> getEndColumn
    int getEndLine() -> getEndLine
    int getBeginColumn() -> getBeginColumn
    int getBeginLine() -> getBeginLine
    void backup(int) -> backup
    void ReInit(java.io.Reader,int,int,int) -> ReInit
    void ReInit(java.io.Reader,int,int) -> ReInit
    void ReInit(java.io.Reader) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String,int,int,int) -> ReInit
    void ReInit(java.io.InputStream,int,int,int) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String) -> ReInit
    void ReInit(java.io.InputStream) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String,int,int) -> ReInit
    void ReInit(java.io.InputStream,int,int) -> ReInit
    java.lang.String GetImage() -> GetImage
    char[] GetSuffix(int) -> GetSuffix
    void Done() -> Done
    void adjustBeginLineColumn(int,int) -> adjustBeginLineColumn
org.apache.james.mime4j.field.language.parser.Token -> org.apache.james.mime4j.field.language.parser.Token:
    int kind -> kind
    int beginLine -> beginLine
    int beginColumn -> beginColumn
    int endLine -> endLine
    int endColumn -> endColumn
    java.lang.String image -> image
    org.apache.james.mime4j.field.language.parser.Token next -> next
    org.apache.james.mime4j.field.language.parser.Token specialToken -> specialToken
    java.lang.String toString() -> toString
    org.apache.james.mime4j.field.language.parser.Token newToken(int) -> newToken
org.apache.james.mime4j.field.language.parser.TokenMgrError -> org.apache.james.mime4j.field.language.parser.TokenMgrError:
    int LEXICAL_ERROR -> LEXICAL_ERROR
    int STATIC_LEXER_ERROR -> STATIC_LEXER_ERROR
    int INVALID_LEXICAL_STATE -> INVALID_LEXICAL_STATE
    int LOOP_DETECTED -> LOOP_DETECTED
    int errorCode -> errorCode
    java.lang.String addEscapes(java.lang.String) -> addEscapes
    java.lang.String LexicalError(boolean,int,int,int,java.lang.String,char) -> LexicalError
    java.lang.String getMessage() -> getMessage
org.apache.james.mime4j.field.mimeversion.parser.MimeVersionParser -> org.apache.james.mime4j.field.mimeversion.parser.MimeVersionParser:
    int INITIAL_VERSION_VALUE -> INITIAL_VERSION_VALUE
    int major -> major
    int minor -> minor
    org.apache.james.mime4j.field.mimeversion.parser.MimeVersionParserTokenManager token_source -> token_source
    org.apache.james.mime4j.field.mimeversion.parser.SimpleCharStream jj_input_stream -> jj_input_stream
    org.apache.james.mime4j.field.mimeversion.parser.Token token -> token
    org.apache.james.mime4j.field.mimeversion.parser.Token jj_nt -> jj_nt
    int jj_ntk -> jj_ntk
    int jj_gen -> jj_gen
    int[] jj_la1 -> jj_la1
    int[] jj_la1_0 -> jj_la1_0
    java.util.Vector jj_expentries -> jj_expentries
    int[] jj_expentry -> jj_expentry
    int jj_kind -> jj_kind
    int getMinorVersion() -> getMinorVersion
    int getMajorVersion() -> getMajorVersion
    void parseLine() -> parseLine
    void parseAll() -> parseAll
    void parse() -> parse
    void jj_la1_0() -> jj_la1_0
    void ReInit(java.io.InputStream) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String) -> ReInit
    void ReInit(java.io.Reader) -> ReInit
    void ReInit(org.apache.james.mime4j.field.mimeversion.parser.MimeVersionParserTokenManager) -> ReInit
    org.apache.james.mime4j.field.mimeversion.parser.Token jj_consume_token(int) -> jj_consume_token
    org.apache.james.mime4j.field.mimeversion.parser.Token getNextToken() -> getNextToken
    org.apache.james.mime4j.field.mimeversion.parser.Token getToken(int) -> getToken
    int jj_ntk() -> jj_ntk
    org.apache.james.mime4j.field.mimeversion.parser.ParseException generateParseException() -> generateParseException
    void enable_tracing() -> enable_tracing
    void disable_tracing() -> disable_tracing
org.apache.james.mime4j.field.mimeversion.parser.MimeVersionParserConstants -> org.apache.james.mime4j.field.mimeversion.parser.MimeVersionParserConstants:
    int EOF -> EOF
    int WS -> WS
    int COMMENT -> COMMENT
    int QUOTEDSTRING -> QUOTEDSTRING
    int DIGITS -> DIGITS
    int DOT -> DOT
    int QUOTEDPAIR -> QUOTEDPAIR
    int ANY -> ANY
    int DEFAULT -> DEFAULT
    int INCOMMENT -> INCOMMENT
    int NESTED_COMMENT -> NESTED_COMMENT
    int INQUOTEDSTRING -> INQUOTEDSTRING
    java.lang.String[] tokenImage -> tokenImage
org.apache.james.mime4j.field.mimeversion.parser.MimeVersionParserTokenManager -> org.apache.james.mime4j.field.mimeversion.parser.MimeVersionParserTokenManager:
    int commentNest -> commentNest
    java.io.PrintStream debugStream -> debugStream
    long[] jjbitVec0 -> jjbitVec0
    int[] jjnextStates -> jjnextStates
    java.lang.String[] jjstrLiteralImages -> jjstrLiteralImages
    java.lang.String[] lexStateNames -> lexStateNames
    int[] jjnewLexState -> jjnewLexState
    long[] jjtoToken -> jjtoToken
    long[] jjtoSkip -> jjtoSkip
    long[] jjtoSpecial -> jjtoSpecial
    long[] jjtoMore -> jjtoMore
    org.apache.james.mime4j.field.mimeversion.parser.SimpleCharStream input_stream -> input_stream
    int[] jjrounds -> jjrounds
    int[] jjstateSet -> jjstateSet
    java.lang.StringBuffer image -> image
    int jjimageLen -> jjimageLen
    int lengthOfMatch -> lengthOfMatch
    char curChar -> curChar
    int curLexState -> curLexState
    int defaultLexState -> defaultLexState
    int jjnewStateCnt -> jjnewStateCnt
    int jjround -> jjround
    int jjmatchedPos -> jjmatchedPos
    int jjmatchedKind -> jjmatchedKind
    void setDebugStream(java.io.PrintStream) -> setDebugStream
    int jjStopStringLiteralDfa_0(int,long) -> jjStopStringLiteralDfa_0
    int jjStartNfa_0(int,long) -> jjStartNfa_0
    int jjStopAtPos(int,int) -> jjStopAtPos
    int jjStartNfaWithStates_0(int,int,int) -> jjStartNfaWithStates_0
    int jjMoveStringLiteralDfa0_0() -> jjMoveStringLiteralDfa0_0
    void jjCheckNAdd(int) -> jjCheckNAdd
    void jjAddStates(int,int) -> jjAddStates
    void jjCheckNAddTwoStates(int,int) -> jjCheckNAddTwoStates
    void jjCheckNAddStates(int,int) -> jjCheckNAddStates
    void jjCheckNAddStates(int) -> jjCheckNAddStates
    int jjMoveNfa_0(int,int) -> jjMoveNfa_0
    int jjStopStringLiteralDfa_1(int,long) -> jjStopStringLiteralDfa_1
    int jjStartNfa_1(int,long) -> jjStartNfa_1
    int jjStartNfaWithStates_1(int,int,int) -> jjStartNfaWithStates_1
    int jjMoveStringLiteralDfa0_1() -> jjMoveStringLiteralDfa0_1
    int jjMoveNfa_1(int,int) -> jjMoveNfa_1
    int jjStopStringLiteralDfa_3(int,long) -> jjStopStringLiteralDfa_3
    int jjStartNfa_3(int,long) -> jjStartNfa_3
    int jjStartNfaWithStates_3(int,int,int) -> jjStartNfaWithStates_3
    int jjMoveStringLiteralDfa0_3() -> jjMoveStringLiteralDfa0_3
    int jjMoveNfa_3(int,int) -> jjMoveNfa_3
    int jjStopStringLiteralDfa_2(int,long) -> jjStopStringLiteralDfa_2
    int jjStartNfa_2(int,long) -> jjStartNfa_2
    int jjStartNfaWithStates_2(int,int,int) -> jjStartNfaWithStates_2
    int jjMoveStringLiteralDfa0_2() -> jjMoveStringLiteralDfa0_2
    int jjMoveNfa_2(int,int) -> jjMoveNfa_2
    void ReInit(org.apache.james.mime4j.field.mimeversion.parser.SimpleCharStream) -> ReInit
    void ReInitRounds() -> ReInitRounds
    void ReInit(org.apache.james.mime4j.field.mimeversion.parser.SimpleCharStream,int) -> ReInit
    void SwitchTo(int) -> SwitchTo
    org.apache.james.mime4j.field.mimeversion.parser.Token jjFillToken() -> jjFillToken
    org.apache.james.mime4j.field.mimeversion.parser.Token getNextToken() -> getNextToken
    void MoreLexicalActions() -> MoreLexicalActions
    void TokenLexicalActions(org.apache.james.mime4j.field.mimeversion.parser.Token) -> TokenLexicalActions
org.apache.james.mime4j.field.mimeversion.parser.ParseException -> org.apache.james.mime4j.field.mimeversion.parser.ParseException:
    long serialVersionUID -> serialVersionUID
    boolean specialConstructor -> specialConstructor
    org.apache.james.mime4j.field.mimeversion.parser.Token currentToken -> currentToken
    int[][] expectedTokenSequences -> expectedTokenSequences
    java.lang.String[] tokenImage -> tokenImage
    java.lang.String eol -> eol
    java.lang.String getMessage() -> getMessage
    java.lang.String add_escapes(java.lang.String) -> add_escapes
org.apache.james.mime4j.field.mimeversion.parser.SimpleCharStream -> org.apache.james.mime4j.field.mimeversion.parser.SimpleCharStream:
    boolean staticFlag -> staticFlag
    int bufsize -> bufsize
    int available -> available
    int tokenBegin -> tokenBegin
    int bufpos -> bufpos
    int[] bufline -> bufline
    int[] bufcolumn -> bufcolumn
    int column -> column
    int line -> line
    boolean prevCharIsCR -> prevCharIsCR
    boolean prevCharIsLF -> prevCharIsLF
    java.io.Reader inputStream -> inputStream
    char[] buffer -> buffer
    int maxNextCharInd -> maxNextCharInd
    int inBuf -> inBuf
    int tabSize -> tabSize
    void setTabSize(int) -> setTabSize
    int getTabSize(int) -> getTabSize
    void ExpandBuff(boolean) -> ExpandBuff
    void FillBuff() -> FillBuff
    char BeginToken() -> BeginToken
    void UpdateLineColumn(char) -> UpdateLineColumn
    char readChar() -> readChar
    int getColumn() -> getColumn
    int getLine() -> getLine
    int getEndColumn() -> getEndColumn
    int getEndLine() -> getEndLine
    int getBeginColumn() -> getBeginColumn
    int getBeginLine() -> getBeginLine
    void backup(int) -> backup
    void ReInit(java.io.Reader,int,int,int) -> ReInit
    void ReInit(java.io.Reader,int,int) -> ReInit
    void ReInit(java.io.Reader) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String,int,int,int) -> ReInit
    void ReInit(java.io.InputStream,int,int,int) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String) -> ReInit
    void ReInit(java.io.InputStream) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String,int,int) -> ReInit
    void ReInit(java.io.InputStream,int,int) -> ReInit
    java.lang.String GetImage() -> GetImage
    char[] GetSuffix(int) -> GetSuffix
    void Done() -> Done
    void adjustBeginLineColumn(int,int) -> adjustBeginLineColumn
org.apache.james.mime4j.field.mimeversion.parser.Token -> org.apache.james.mime4j.field.mimeversion.parser.Token:
    int kind -> kind
    int beginLine -> beginLine
    int beginColumn -> beginColumn
    int endLine -> endLine
    int endColumn -> endColumn
    java.lang.String image -> image
    org.apache.james.mime4j.field.mimeversion.parser.Token next -> next
    org.apache.james.mime4j.field.mimeversion.parser.Token specialToken -> specialToken
    java.lang.String toString() -> toString
    org.apache.james.mime4j.field.mimeversion.parser.Token newToken(int) -> newToken
org.apache.james.mime4j.field.mimeversion.parser.TokenMgrError -> org.apache.james.mime4j.field.mimeversion.parser.TokenMgrError:
    int LEXICAL_ERROR -> LEXICAL_ERROR
    int STATIC_LEXER_ERROR -> STATIC_LEXER_ERROR
    int INVALID_LEXICAL_STATE -> INVALID_LEXICAL_STATE
    int LOOP_DETECTED -> LOOP_DETECTED
    int errorCode -> errorCode
    java.lang.String addEscapes(java.lang.String) -> addEscapes
    java.lang.String LexicalError(boolean,int,int,int,java.lang.String,char) -> LexicalError
    java.lang.String getMessage() -> getMessage
org.apache.james.mime4j.field.structured.parser.ParseException -> org.apache.james.mime4j.field.structured.parser.ParseException:
    long serialVersionUID -> serialVersionUID
    boolean specialConstructor -> specialConstructor
    org.apache.james.mime4j.field.structured.parser.Token currentToken -> currentToken
    int[][] expectedTokenSequences -> expectedTokenSequences
    java.lang.String[] tokenImage -> tokenImage
    java.lang.String eol -> eol
    java.lang.String getMessage() -> getMessage
    java.lang.String add_escapes(java.lang.String) -> add_escapes
org.apache.james.mime4j.field.structured.parser.SimpleCharStream -> org.apache.james.mime4j.field.structured.parser.SimpleCharStream:
    boolean staticFlag -> staticFlag
    int bufsize -> bufsize
    int available -> available
    int tokenBegin -> tokenBegin
    int bufpos -> bufpos
    int[] bufline -> bufline
    int[] bufcolumn -> bufcolumn
    int column -> column
    int line -> line
    boolean prevCharIsCR -> prevCharIsCR
    boolean prevCharIsLF -> prevCharIsLF
    java.io.Reader inputStream -> inputStream
    char[] buffer -> buffer
    int maxNextCharInd -> maxNextCharInd
    int inBuf -> inBuf
    int tabSize -> tabSize
    void setTabSize(int) -> setTabSize
    int getTabSize(int) -> getTabSize
    void ExpandBuff(boolean) -> ExpandBuff
    void FillBuff() -> FillBuff
    char BeginToken() -> BeginToken
    void UpdateLineColumn(char) -> UpdateLineColumn
    char readChar() -> readChar
    int getColumn() -> getColumn
    int getLine() -> getLine
    int getEndColumn() -> getEndColumn
    int getEndLine() -> getEndLine
    int getBeginColumn() -> getBeginColumn
    int getBeginLine() -> getBeginLine
    void backup(int) -> backup
    void ReInit(java.io.Reader,int,int,int) -> ReInit
    void ReInit(java.io.Reader,int,int) -> ReInit
    void ReInit(java.io.Reader) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String,int,int,int) -> ReInit
    void ReInit(java.io.InputStream,int,int,int) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String) -> ReInit
    void ReInit(java.io.InputStream) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String,int,int) -> ReInit
    void ReInit(java.io.InputStream,int,int) -> ReInit
    java.lang.String GetImage() -> GetImage
    char[] GetSuffix(int) -> GetSuffix
    void Done() -> Done
    void adjustBeginLineColumn(int,int) -> adjustBeginLineColumn
org.apache.james.mime4j.field.structured.parser.StructuredFieldParser -> org.apache.james.mime4j.field.structured.parser.StructuredFieldParser:
    boolean preserveFolding -> preserveFolding
    org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager token_source -> token_source
    org.apache.james.mime4j.field.structured.parser.SimpleCharStream jj_input_stream -> jj_input_stream
    org.apache.james.mime4j.field.structured.parser.Token token -> token
    org.apache.james.mime4j.field.structured.parser.Token jj_nt -> jj_nt
    int jj_ntk -> jj_ntk
    int jj_gen -> jj_gen
    int[] jj_la1 -> jj_la1
    int[] jj_la1_0 -> jj_la1_0
    java.util.Vector jj_expentries -> jj_expentries
    int[] jj_expentry -> jj_expentry
    int jj_kind -> jj_kind
    boolean isFoldingPreserved() -> isFoldingPreserved
    void setFoldingPreserved(boolean) -> setFoldingPreserved
    java.lang.String parse() -> parse
    java.lang.String doParse() -> doParse
    void jj_la1_0() -> jj_la1_0
    void ReInit(java.io.InputStream) -> ReInit
    void ReInit(java.io.InputStream,java.lang.String) -> ReInit
    void ReInit(java.io.Reader) -> ReInit
    void ReInit(org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager) -> ReInit
    org.apache.james.mime4j.field.structured.parser.Token jj_consume_token(int) -> jj_consume_token
    org.apache.james.mime4j.field.structured.parser.Token getNextToken() -> getNextToken
    org.apache.james.mime4j.field.structured.parser.Token getToken(int) -> getToken
    int jj_ntk() -> jj_ntk
    org.apache.james.mime4j.field.structured.parser.ParseException generateParseException() -> generateParseException
    void enable_tracing() -> enable_tracing
    void disable_tracing() -> disable_tracing
org.apache.james.mime4j.field.structured.parser.StructuredFieldParserConstants -> org.apache.james.mime4j.field.structured.parser.StructuredFieldParserConstants:
    int EOF -> EOF
    int STRING_CONTENT -> STRING_CONTENT
    int FOLD -> FOLD
    int QUOTEDSTRING -> QUOTEDSTRING
    int WS -> WS
    int CONTENT -> CONTENT
    int QUOTEDPAIR -> QUOTEDPAIR
    int ANY -> ANY
    int DEFAULT -> DEFAULT
    int INCOMMENT -> INCOMMENT
    int NESTED_COMMENT -> NESTED_COMMENT
    int INQUOTEDSTRING -> INQUOTEDSTRING
    java.lang.String[] tokenImage -> tokenImage
org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager -> org.apache.james.mime4j.field.structured.parser.StructuredFieldParserTokenManager:
    int commentNest -> commentNest
    java.io.PrintStream debugStream -> debugStream
    long[] jjbitVec0 -> jjbitVec0
    int[] jjnextStates -> jjnextStates
    java.lang.String[] jjstrLiteralImages -> jjstrLiteralImages
    java.lang.String[] lexStateNames -> lexStateNames
    int[] jjnewLexState -> jjnewLexState
    long[] jjtoToken -> jjtoToken
    long[] jjtoSkip -> jjtoSkip
    long[] jjtoMore -> jjtoMore
    org.apache.james.mime4j.field.structured.parser.SimpleCharStream input_stream -> input_stream
    int[] jjrounds -> jjrounds
    int[] jjstateSet -> jjstateSet
    java.lang.StringBuffer image -> image
    int jjimageLen -> jjimageLen
    int lengthOfMatch -> lengthOfMatch
    char curChar -> curChar
    int curLexState -> curLexState
    int defaultLexState -> defaultLexState
    int jjnewStateCnt -> jjnewStateCnt
    int jjround -> jjround
    int jjmatchedPos -> jjmatchedPos
    int jjmatchedKind -> jjmatchedKind
    void setDebugStream(java.io.PrintStream) -> setDebugStream
    int jjStopStringLiteralDfa_0(int,long) -> jjStopStringLiteralDfa_0
    int jjStartNfa_0(int,long) -> jjStartNfa_0
    int jjStopAtPos(int,int) -> jjStopAtPos
    int jjStartNfaWithStates_0(int,int,int) -> jjStartNfaWithStates_0
    int jjMoveStringLiteralDfa0_0() -> jjMoveStringLiteralDfa0_0
    void jjCheckNAdd(int) -> jjCheckNAdd
    void jjAddStates(int,int) -> jjAddStates
    void jjCheckNAddTwoStates(int,int) -> jjCheckNAddTwoStates
    void jjCheckNAddStates(int,int) -> jjCheckNAddStates
    void jjCheckNAddStates(int) -> jjCheckNAddStates
    int jjMoveNfa_0(int,int) -> jjMoveNfa_0
    int jjStopStringLiteralDfa_1(int,long) -> jjStopStringLiteralDfa_1
    int jjStartNfa_1(int,long) -> jjStartNfa_1
    int jjStartNfaWithStates_1(int,int,int) -> jjStartNfaWithStates_1
    int jjMoveStringLiteralDfa0_1() -> jjMoveStringLiteralDfa0_1
    int jjMoveNfa_1(int,int) -> jjMoveNfa_1
    int jjStopStringLiteralDfa_3(int,long) -> jjStopStringLiteralDfa_3
    int jjStartNfa_3(int,long) -> jjStartNfa_3
    int jjStartNfaWithStates_3(int,int,int) -> jjStartNfaWithStates_3
    int jjMoveStringLiteralDfa0_3() -> jjMoveStringLiteralDfa0_3
    int jjMoveNfa_3(int,int) -> jjMoveNfa_3
    int jjStopStringLiteralDfa_2(int,long) -> jjStopStringLiteralDfa_2
    int jjStartNfa_2(int,long) -> jjStartNfa_2
    int jjStartNfaWithStates_2(int,int,int) -> jjStartNfaWithStates_2
    int jjMoveStringLiteralDfa0_2() -> jjMoveStringLiteralDfa0_2
    int jjMoveNfa_2(int,int) -> jjMoveNfa_2
    void ReInit(org.apache.james.mime4j.field.structured.parser.SimpleCharStream) -> ReInit
    void ReInitRounds() -> ReInitRounds
    void ReInit(org.apache.james.mime4j.field.structured.parser.SimpleCharStream,int) -> ReInit
    void SwitchTo(int) -> SwitchTo
    org.apache.james.mime4j.field.structured.parser.Token jjFillToken() -> jjFillToken
    org.apache.james.mime4j.field.structured.parser.Token getNextToken() -> getNextToken
    void SkipLexicalActions(org.apache.james.mime4j.field.structured.parser.Token) -> SkipLexicalActions
    void MoreLexicalActions() -> MoreLexicalActions
    void TokenLexicalActions(org.apache.james.mime4j.field.structured.parser.Token) -> TokenLexicalActions
org.apache.james.mime4j.field.structured.parser.Token -> org.apache.james.mime4j.field.structured.parser.Token:
    int kind -> kind
    int beginLine -> beginLine
    int beginColumn -> beginColumn
    int endLine -> endLine
    int endColumn -> endColumn
    java.lang.String image -> image
    org.apache.james.mime4j.field.structured.parser.Token next -> next
    org.apache.james.mime4j.field.structured.parser.Token specialToken -> specialToken
    java.lang.String toString() -> toString
    org.apache.james.mime4j.field.structured.parser.Token newToken(int) -> newToken
org.apache.james.mime4j.field.structured.parser.TokenMgrError -> org.apache.james.mime4j.field.structured.parser.TokenMgrError:
    int LEXICAL_ERROR -> LEXICAL_ERROR
    int STATIC_LEXER_ERROR -> STATIC_LEXER_ERROR
    int INVALID_LEXICAL_STATE -> INVALID_LEXICAL_STATE
    int LOOP_DETECTED -> LOOP_DETECTED
    int errorCode -> errorCode
    java.lang.String addEscapes(java.lang.String) -> addEscapes
    java.lang.String LexicalError(boolean,int,int,int,java.lang.String,char) -> LexicalError
    java.lang.String getMessage() -> getMessage
org.apache.james.mime4j.io.BufferedLineReaderInputStream -> org.apache.james.mime4j.io.BufferedLineReaderInputStream:
    boolean truncated -> truncated
    byte[] buffer -> buffer
    int bufpos -> bufpos
    int buflen -> buflen
    int maxLineLen -> maxLineLen
    void expand(int) -> expand
    void ensureCapacity(int) -> ensureCapacity
    int fillBuffer() -> fillBuffer
    boolean hasBufferedData() -> hasBufferedData
    void truncate() -> truncate
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    boolean markSupported() -> markSupported
    int readLine(org.apache.james.mime4j.util.ByteArrayBuffer) -> readLine
    int indexOf(byte[],int,int) -> indexOf
    int indexOf(byte[]) -> indexOf
    int indexOf(byte,int,int) -> indexOf
    int indexOf(byte) -> indexOf
    byte charAt(int) -> charAt
    byte[] buf() -> buf
    int pos() -> pos
    int limit() -> limit
    int length() -> length
    int capacity() -> capacity
    int skip(int) -> skip
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.james.mime4j.io.EOLConvertingInputStream -> org.apache.james.mime4j.io.EOLConvertingInputStream:
    int CONVERT_CR -> CONVERT_CR
    int CONVERT_LF -> CONVERT_LF
    int CONVERT_BOTH -> CONVERT_BOTH
    java.io.PushbackInputStream in -> in
    int previous -> previous
    int flags -> flags
    void close() -> close
    int read() -> read
org.apache.james.mime4j.io.LimitedInputStream -> org.apache.james.mime4j.io.LimitedInputStream:
    long limit -> limit
    void enforceLimit() -> enforceLimit
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int getBytesLeft() -> getBytesLeft
org.apache.james.mime4j.io.LineNumberInputStream -> org.apache.james.mime4j.io.LineNumberInputStream:
    int lineNumber -> lineNumber
    int getLineNumber() -> getLineNumber
    int read() -> read
    int read(byte[],int,int) -> read
org.apache.james.mime4j.io.LineNumberSource -> org.apache.james.mime4j.io.LineNumberSource:
    int getLineNumber() -> getLineNumber
org.apache.james.mime4j.io.LineReaderInputStream -> org.apache.james.mime4j.io.LineReaderInputStream:
    int readLine(org.apache.james.mime4j.util.ByteArrayBuffer) -> readLine
org.apache.james.mime4j.io.LineReaderInputStreamAdaptor -> org.apache.james.mime4j.io.LineReaderInputStreamAdaptor:
    org.apache.james.mime4j.io.LineReaderInputStream bis -> bis
    int maxLineLen -> maxLineLen
    boolean used -> used
    boolean eof -> eof
    int read() -> read
    int read(byte[],int,int) -> read
    int readLine(org.apache.james.mime4j.util.ByteArrayBuffer) -> readLine
    int doReadLine(org.apache.james.mime4j.util.ByteArrayBuffer) -> doReadLine
    boolean eof() -> eof
    boolean isUsed() -> isUsed
    java.lang.String toString() -> toString
org.apache.james.mime4j.io.MaxHeaderLimitException -> org.apache.james.mime4j.io.MaxHeaderLimitException:
    long serialVersionUID -> serialVersionUID
org.apache.james.mime4j.io.MaxLineLimitException -> org.apache.james.mime4j.io.MaxLineLimitException:
    long serialVersionUID -> serialVersionUID
org.apache.james.mime4j.io.MimeBoundaryInputStream -> org.apache.james.mime4j.io.MimeBoundaryInputStream:
    byte[] boundary -> boundary
    boolean eof -> eof
    int limit -> limit
    boolean atBoundary -> atBoundary
    int boundaryLen -> boundaryLen
    boolean lastPart -> lastPart
    boolean completed -> completed
    org.apache.james.mime4j.io.BufferedLineReaderInputStream buffer -> buffer
    void close() -> close
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[],int,int) -> read
    int readLine(org.apache.james.mime4j.util.ByteArrayBuffer) -> readLine
    boolean endOfStream() -> endOfStream
    boolean hasData() -> hasData
    int fillBuffer() -> fillBuffer
    void calculateBoundaryLen() -> calculateBoundaryLen
    void skipBoundary() -> skipBoundary
    boolean isLastPart() -> isLastPart
    boolean eof() -> eof
    java.lang.String toString() -> toString
org.apache.james.mime4j.io.PositionInputStream -> org.apache.james.mime4j.io.PositionInputStream:
    long position -> position
    long markedPosition -> markedPosition
    long getPosition() -> getPosition
    int available() -> available
    int read() -> read
    void close() -> close
    void reset() -> reset
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    long skip(long) -> skip
    int read(byte[],int,int) -> read
org.apache.james.mime4j.message.BinaryBody -> org.apache.james.mime4j.message.BinaryBody:
    java.io.InputStream getInputStream() -> getInputStream
org.apache.james.mime4j.message.Body -> org.apache.james.mime4j.message.Body:
    org.apache.james.mime4j.message.Entity getParent() -> getParent
    void setParent(org.apache.james.mime4j.message.Entity) -> setParent
org.apache.james.mime4j.message.BodyCopier -> org.apache.james.mime4j.message.BodyCopier:
    org.apache.james.mime4j.message.Body copy(org.apache.james.mime4j.message.Body) -> copy
org.apache.james.mime4j.message.BodyFactory -> org.apache.james.mime4j.message.BodyFactory:
    org.apache.commons.logging.Log log -> log
    java.nio.charset.Charset FALLBACK_CHARSET -> FALLBACK_CHARSET
    org.apache.james.mime4j.storage.StorageProvider storageProvider -> storageProvider
    org.apache.james.mime4j.storage.StorageProvider getStorageProvider() -> getStorageProvider
    org.apache.james.mime4j.message.BinaryBody binaryBody(java.io.InputStream) -> binaryBody
    org.apache.james.mime4j.message.BinaryBody binaryBody(org.apache.james.mime4j.storage.Storage) -> binaryBody
    org.apache.james.mime4j.message.TextBody textBody(java.io.InputStream) -> textBody
    org.apache.james.mime4j.message.TextBody textBody(java.io.InputStream,java.lang.String) -> textBody
    org.apache.james.mime4j.message.TextBody textBody(org.apache.james.mime4j.storage.Storage) -> textBody
    org.apache.james.mime4j.message.TextBody textBody(org.apache.james.mime4j.storage.Storage,java.lang.String) -> textBody
    org.apache.james.mime4j.message.TextBody textBody(java.lang.String) -> textBody
    org.apache.james.mime4j.message.TextBody textBody(java.lang.String,java.lang.String) -> textBody
    java.nio.charset.Charset toJavaCharset(java.lang.String,boolean) -> toJavaCharset
org.apache.james.mime4j.message.BodyPart -> org.apache.james.mime4j.message.BodyPart:
org.apache.james.mime4j.message.Disposable -> org.apache.james.mime4j.message.Disposable:
    void dispose() -> dispose
org.apache.james.mime4j.message.Entity -> org.apache.james.mime4j.message.Entity:
    org.apache.james.mime4j.message.Header header -> header
    org.apache.james.mime4j.message.Body body -> body
    org.apache.james.mime4j.message.Entity parent -> parent
    org.apache.james.mime4j.message.Entity getParent() -> getParent
    void setParent(org.apache.james.mime4j.message.Entity) -> setParent
    org.apache.james.mime4j.message.Header getHeader() -> getHeader
    void setHeader(org.apache.james.mime4j.message.Header) -> setHeader
    org.apache.james.mime4j.message.Body getBody() -> getBody
    void setBody(org.apache.james.mime4j.message.Body) -> setBody
    org.apache.james.mime4j.message.Body removeBody() -> removeBody
    void setMessage(org.apache.james.mime4j.message.Message) -> setMessage
    void setMultipart(org.apache.james.mime4j.message.Multipart) -> setMultipart
    void setMultipart(org.apache.james.mime4j.message.Multipart,java.util.Map) -> setMultipart
    void setText(org.apache.james.mime4j.message.TextBody) -> setText
    void setText(org.apache.james.mime4j.message.TextBody,java.lang.String) -> setText
    void setBody(org.apache.james.mime4j.message.Body,java.lang.String) -> setBody
    void setBody(org.apache.james.mime4j.message.Body,java.lang.String,java.util.Map) -> setBody
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getCharset() -> getCharset
    java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    void setContentTransferEncoding(java.lang.String) -> setContentTransferEncoding
    java.lang.String getDispositionType() -> getDispositionType
    void setContentDisposition(java.lang.String) -> setContentDisposition
    void setContentDisposition(java.lang.String,java.lang.String) -> setContentDisposition
    void setContentDisposition(java.lang.String,java.lang.String,long) -> setContentDisposition
    void setContentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date) -> setContentDisposition
    java.lang.String getFilename() -> getFilename
    void setFilename(java.lang.String) -> setFilename
    boolean isMimeType(java.lang.String) -> isMimeType
    boolean isMultipart() -> isMultipart
    void dispose() -> dispose
    org.apache.james.mime4j.message.Header obtainHeader() -> obtainHeader
    org.apache.james.mime4j.parser.Field obtainField(java.lang.String) -> obtainField
org.apache.james.mime4j.message.Header -> org.apache.james.mime4j.message.Header:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(org.apache.james.mime4j.parser.Field) -> addField
    java.util.List getFields() -> getFields
    org.apache.james.mime4j.parser.Field getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    java.util.Iterator iterator() -> iterator
    int removeFields(java.lang.String) -> removeFields
    void setField(org.apache.james.mime4j.parser.Field) -> setField
    java.lang.String toString() -> toString
org.apache.james.mime4j.message.Header$1 -> org.apache.james.mime4j.message.Header$1:
    org.apache.james.mime4j.parser.MimeStreamParser val$parser -> val$parser
    org.apache.james.mime4j.message.Header this$0 -> this$0
    void endHeader() -> endHeader
    void field(org.apache.james.mime4j.parser.Field) -> field
org.apache.james.mime4j.message.Message -> org.apache.james.mime4j.message.Message:
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getMessageId() -> getMessageId
    void createMessageId(java.lang.String) -> createMessageId
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String) -> setSubject
    java.util.Date getDate() -> getDate
    void setDate(java.util.Date) -> setDate
    void setDate(java.util.Date,java.util.TimeZone) -> setDate
    org.apache.james.mime4j.field.address.Mailbox getSender() -> getSender
    void setSender(org.apache.james.mime4j.field.address.Mailbox) -> setSender
    org.apache.james.mime4j.field.address.MailboxList getFrom() -> getFrom
    void setFrom(org.apache.james.mime4j.field.address.Mailbox) -> setFrom
    void setFrom(org.apache.james.mime4j.field.address.Mailbox[]) -> setFrom
    void setFrom(java.util.Collection) -> setFrom
    org.apache.james.mime4j.field.address.AddressList getTo() -> getTo
    void setTo(org.apache.james.mime4j.field.address.Address) -> setTo
    void setTo(org.apache.james.mime4j.field.address.Address[]) -> setTo
    void setTo(java.util.Collection) -> setTo
    org.apache.james.mime4j.field.address.AddressList getCc() -> getCc
    void setCc(org.apache.james.mime4j.field.address.Address) -> setCc
    void setCc(org.apache.james.mime4j.field.address.Address[]) -> setCc
    void setCc(java.util.Collection) -> setCc
    org.apache.james.mime4j.field.address.AddressList getBcc() -> getBcc
    void setBcc(org.apache.james.mime4j.field.address.Address) -> setBcc
    void setBcc(org.apache.james.mime4j.field.address.Address[]) -> setBcc
    void setBcc(java.util.Collection) -> setBcc
    org.apache.james.mime4j.field.address.AddressList getReplyTo() -> getReplyTo
    void setReplyTo(org.apache.james.mime4j.field.address.Address) -> setReplyTo
    void setReplyTo(org.apache.james.mime4j.field.address.Address[]) -> setReplyTo
    void setReplyTo(java.util.Collection) -> setReplyTo
    org.apache.james.mime4j.field.address.Mailbox getMailbox(java.lang.String) -> getMailbox
    void setMailbox(java.lang.String,org.apache.james.mime4j.field.address.Mailbox) -> setMailbox
    org.apache.james.mime4j.field.address.MailboxList getMailboxList(java.lang.String) -> getMailboxList
    void setMailboxList(java.lang.String,org.apache.james.mime4j.field.address.Mailbox) -> setMailboxList
    void setMailboxList(java.lang.String,org.apache.james.mime4j.field.address.Mailbox[]) -> setMailboxList
    void setMailboxList(java.lang.String,java.util.Collection) -> setMailboxList
    org.apache.james.mime4j.field.address.AddressList getAddressList(java.lang.String) -> getAddressList
    void setAddressList(java.lang.String,org.apache.james.mime4j.field.address.Address) -> setAddressList
    void setAddressList(java.lang.String,org.apache.james.mime4j.field.address.Address[]) -> setAddressList
    void setAddressList(java.lang.String,java.util.Collection) -> setAddressList
org.apache.james.mime4j.message.MessageBuilder -> org.apache.james.mime4j.message.MessageBuilder:
    org.apache.james.mime4j.message.Entity entity -> entity
    org.apache.james.mime4j.message.BodyFactory bodyFactory -> bodyFactory
    java.util.Stack stack -> stack
    void expect(java.lang.Class) -> expect
    void startMessage() -> startMessage
    void endMessage() -> endMessage
    void startHeader() -> startHeader
    void field(org.apache.james.mime4j.parser.Field) -> field
    void endHeader() -> endHeader
    void startMultipart(org.apache.james.mime4j.descriptor.BodyDescriptor) -> startMultipart
    void body(org.apache.james.mime4j.descriptor.BodyDescriptor,java.io.InputStream) -> body
    void endMultipart() -> endMultipart
    void startBodyPart() -> startBodyPart
    void endBodyPart() -> endBodyPart
    void epilogue(java.io.InputStream) -> epilogue
    void preamble(java.io.InputStream) -> preamble
    void raw(java.io.InputStream) -> raw
    org.apache.james.mime4j.util.ByteSequence loadStream(java.io.InputStream) -> loadStream
org.apache.james.mime4j.message.MessageWriter -> org.apache.james.mime4j.message.MessageWriter:
    byte[] CRLF -> CRLF
    byte[] DASHES -> DASHES
    org.apache.james.mime4j.message.MessageWriter DEFAULT -> DEFAULT
    void writeBody(org.apache.james.mime4j.message.Body,java.io.OutputStream) -> writeBody
    void writeEntity(org.apache.james.mime4j.message.Entity,java.io.OutputStream) -> writeEntity
    void writeMultipart(org.apache.james.mime4j.message.Multipart,java.io.OutputStream) -> writeMultipart
    void writeHeader(org.apache.james.mime4j.message.Header,java.io.OutputStream) -> writeHeader
    java.io.OutputStream encodeStream(java.io.OutputStream,java.lang.String,boolean) -> encodeStream
    org.apache.james.mime4j.field.ContentTypeField getContentType(org.apache.james.mime4j.message.Multipart) -> getContentType
    org.apache.james.mime4j.util.ByteSequence getBoundary(org.apache.james.mime4j.field.ContentTypeField) -> getBoundary
    void writeBytes(org.apache.james.mime4j.util.ByteSequence,java.io.OutputStream) -> writeBytes
org.apache.james.mime4j.message.Multipart -> org.apache.james.mime4j.message.Multipart:
    java.util.List bodyParts -> bodyParts
    org.apache.james.mime4j.message.Entity parent -> parent
    org.apache.james.mime4j.util.ByteSequence preamble -> preamble
    java.lang.String preambleStrCache -> preambleStrCache
    org.apache.james.mime4j.util.ByteSequence epilogue -> epilogue
    java.lang.String epilogueStrCache -> epilogueStrCache
    java.lang.String subType -> subType
    java.lang.String getSubType() -> getSubType
    void setSubType(java.lang.String) -> setSubType
    org.apache.james.mime4j.message.Entity getParent() -> getParent
    void setParent(org.apache.james.mime4j.message.Entity) -> setParent
    int getCount() -> getCount
    java.util.List getBodyParts() -> getBodyParts
    void setBodyParts(java.util.List) -> setBodyParts
    void addBodyPart(org.apache.james.mime4j.message.BodyPart) -> addBodyPart
    void addBodyPart(org.apache.james.mime4j.message.BodyPart,int) -> addBodyPart
    org.apache.james.mime4j.message.BodyPart removeBodyPart(int) -> removeBodyPart
    org.apache.james.mime4j.message.BodyPart replaceBodyPart(org.apache.james.mime4j.message.BodyPart,int) -> replaceBodyPart
    org.apache.james.mime4j.util.ByteSequence getPreambleRaw() -> getPreambleRaw
    void setPreambleRaw(org.apache.james.mime4j.util.ByteSequence) -> setPreambleRaw
    java.lang.String getPreamble() -> getPreamble
    void setPreamble(java.lang.String) -> setPreamble
    org.apache.james.mime4j.util.ByteSequence getEpilogueRaw() -> getEpilogueRaw
    void setEpilogueRaw(org.apache.james.mime4j.util.ByteSequence) -> setEpilogueRaw
    java.lang.String getEpilogue() -> getEpilogue
    void setEpilogue(java.lang.String) -> setEpilogue
    void dispose() -> dispose
org.apache.james.mime4j.message.SimpleContentHandler -> org.apache.james.mime4j.message.SimpleContentHandler:
    org.apache.james.mime4j.message.Header currHeader -> currHeader
    void headers(org.apache.james.mime4j.message.Header) -> headers
    void bodyDecoded(org.apache.james.mime4j.descriptor.BodyDescriptor,java.io.InputStream) -> bodyDecoded
    void startHeader() -> startHeader
    void field(org.apache.james.mime4j.parser.Field) -> field
    void endHeader() -> endHeader
    void body(org.apache.james.mime4j.descriptor.BodyDescriptor,java.io.InputStream) -> body
org.apache.james.mime4j.message.SingleBody -> org.apache.james.mime4j.message.SingleBody:
    org.apache.james.mime4j.message.Entity parent -> parent
    org.apache.james.mime4j.message.Entity getParent() -> getParent
    void setParent(org.apache.james.mime4j.message.Entity) -> setParent
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.james.mime4j.message.SingleBody copy() -> copy
    void dispose() -> dispose
org.apache.james.mime4j.message.StorageBinaryBody -> org.apache.james.mime4j.message.StorageBinaryBody:
    org.apache.james.mime4j.storage.MultiReferenceStorage storage -> storage
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.james.mime4j.message.StorageBinaryBody copy() -> copy
    void dispose() -> dispose
    org.apache.james.mime4j.message.SingleBody copy() -> copy
org.apache.james.mime4j.message.StorageTextBody -> org.apache.james.mime4j.message.StorageTextBody:
    org.apache.james.mime4j.storage.MultiReferenceStorage storage -> storage
    java.nio.charset.Charset charset -> charset
    java.lang.String getMimeCharset() -> getMimeCharset
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.james.mime4j.message.StorageTextBody copy() -> copy
    void dispose() -> dispose
    org.apache.james.mime4j.message.SingleBody copy() -> copy
org.apache.james.mime4j.message.StringTextBody -> org.apache.james.mime4j.message.StringTextBody:
    java.lang.String text -> text
    java.nio.charset.Charset charset -> charset
    java.lang.String getMimeCharset() -> getMimeCharset
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.james.mime4j.message.StringTextBody copy() -> copy
    org.apache.james.mime4j.message.SingleBody copy() -> copy
org.apache.james.mime4j.message.TextBody -> org.apache.james.mime4j.message.TextBody:
    java.lang.String getMimeCharset() -> getMimeCharset
    java.io.Reader getReader() -> getReader
org.apache.james.mime4j.parser.AbstractContentHandler -> org.apache.james.mime4j.parser.AbstractContentHandler:
    void endMultipart() -> endMultipart
    void startMultipart(org.apache.james.mime4j.descriptor.BodyDescriptor) -> startMultipart
    void body(org.apache.james.mime4j.descriptor.BodyDescriptor,java.io.InputStream) -> body
    void endBodyPart() -> endBodyPart
    void endHeader() -> endHeader
    void endMessage() -> endMessage
    void epilogue(java.io.InputStream) -> epilogue
    void field(org.apache.james.mime4j.parser.Field) -> field
    void preamble(java.io.InputStream) -> preamble
    void startBodyPart() -> startBodyPart
    void startHeader() -> startHeader
    void startMessage() -> startMessage
    void raw(java.io.InputStream) -> raw
org.apache.james.mime4j.parser.AbstractEntity -> org.apache.james.mime4j.parser.AbstractEntity:
    org.apache.commons.logging.Log log -> log
    org.apache.james.mime4j.descriptor.BodyDescriptor parent -> parent
    int startState -> startState
    int endState -> endState
    org.apache.james.mime4j.parser.MimeEntityConfig config -> config
    org.apache.james.mime4j.descriptor.MutableBodyDescriptor body -> body
    int state -> state
    org.apache.james.mime4j.util.ByteArrayBuffer linebuf -> linebuf
    int lineCount -> lineCount
    org.apache.james.mime4j.parser.Field field -> field
    boolean endOfHeader -> endOfHeader
    int headerCount -> headerCount
    java.util.BitSet fieldChars -> fieldChars
    int T_IN_BODYPART -> T_IN_BODYPART
    int T_IN_MESSAGE -> T_IN_MESSAGE
    int getState() -> getState
    org.apache.james.mime4j.descriptor.MutableBodyDescriptor newBodyDescriptor(org.apache.james.mime4j.descriptor.BodyDescriptor) -> newBodyDescriptor
    int getLineNumber() -> getLineNumber
    org.apache.james.mime4j.io.LineReaderInputStream getDataStream() -> getDataStream
    org.apache.james.mime4j.util.ByteArrayBuffer fillFieldBuffer() -> fillFieldBuffer
    boolean parseField() -> parseField
    org.apache.james.mime4j.descriptor.BodyDescriptor getBodyDescriptor() -> getBodyDescriptor
    org.apache.james.mime4j.parser.Field getField() -> getField
    void monitor(org.apache.james.mime4j.parser.Event) -> monitor
    java.lang.String message(org.apache.james.mime4j.parser.Event) -> message
    void warn(org.apache.james.mime4j.parser.Event) -> warn
    void debug(org.apache.james.mime4j.parser.Event) -> debug
    java.lang.String toString() -> toString
    java.lang.String stateToString(int) -> stateToString
org.apache.james.mime4j.parser.ContentHandler -> org.apache.james.mime4j.parser.ContentHandler:
    void startMessage() -> startMessage
    void endMessage() -> endMessage
    void startBodyPart() -> startBodyPart
    void endBodyPart() -> endBodyPart
    void startHeader() -> startHeader
    void field(org.apache.james.mime4j.parser.Field) -> field
    void endHeader() -> endHeader
    void preamble(java.io.InputStream) -> preamble
    void epilogue(java.io.InputStream) -> epilogue
    void startMultipart(org.apache.james.mime4j.descriptor.BodyDescriptor) -> startMultipart
    void endMultipart() -> endMultipart
    void body(org.apache.james.mime4j.descriptor.BodyDescriptor,java.io.InputStream) -> body
    void raw(java.io.InputStream) -> raw
org.apache.james.mime4j.parser.EntityStateMachine -> org.apache.james.mime4j.parser.EntityStateMachine:
    int getState() -> getState
    void setRecursionMode(int) -> setRecursionMode
    org.apache.james.mime4j.parser.EntityStateMachine advance() -> advance
    org.apache.james.mime4j.descriptor.BodyDescriptor getBodyDescriptor() -> getBodyDescriptor
    java.io.InputStream getContentStream() -> getContentStream
    org.apache.james.mime4j.parser.Field getField() -> getField
org.apache.james.mime4j.parser.EntityStates -> org.apache.james.mime4j.parser.EntityStates:
    int T_END_OF_STREAM -> T_END_OF_STREAM
    int T_START_MESSAGE -> T_START_MESSAGE
    int T_END_MESSAGE -> T_END_MESSAGE
    int T_RAW_ENTITY -> T_RAW_ENTITY
    int T_START_HEADER -> T_START_HEADER
    int T_FIELD -> T_FIELD
    int T_END_HEADER -> T_END_HEADER
    int T_START_MULTIPART -> T_START_MULTIPART
    int T_END_MULTIPART -> T_END_MULTIPART
    int T_PREAMBLE -> T_PREAMBLE
    int T_EPILOGUE -> T_EPILOGUE
    int T_START_BODYPART -> T_START_BODYPART
    int T_END_BODYPART -> T_END_BODYPART
    int T_BODY -> T_BODY
org.apache.james.mime4j.parser.Event -> org.apache.james.mime4j.parser.Event:
    org.apache.james.mime4j.parser.Event MIME_BODY_PREMATURE_END -> MIME_BODY_PREMATURE_END
    org.apache.james.mime4j.parser.Event HEADERS_PREMATURE_END -> HEADERS_PREMATURE_END
    org.apache.james.mime4j.parser.Event INALID_HEADER -> INALID_HEADER
    java.lang.String code -> code
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.james.mime4j.parser.Field -> org.apache.james.mime4j.parser.Field:
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    org.apache.james.mime4j.util.ByteSequence getRaw() -> getRaw
org.apache.james.mime4j.parser.MimeEntity -> org.apache.james.mime4j.parser.MimeEntity:
    int T_IN_BODYPART -> T_IN_BODYPART
    int T_IN_MESSAGE -> T_IN_MESSAGE
    org.apache.james.mime4j.io.LineNumberSource lineSource -> lineSource
    org.apache.james.mime4j.io.BufferedLineReaderInputStream inbuffer -> inbuffer
    int recursionMode -> recursionMode
    org.apache.james.mime4j.io.MimeBoundaryInputStream mimeStream -> mimeStream
    org.apache.james.mime4j.io.LineReaderInputStreamAdaptor dataStream -> dataStream
    boolean skipHeader -> skipHeader
    byte[] tmpbuf -> tmpbuf
    int getRecursionMode() -> getRecursionMode
    void setRecursionMode(int) -> setRecursionMode
    void skipHeader(java.lang.String) -> skipHeader
    int getLineNumber() -> getLineNumber
    org.apache.james.mime4j.io.LineReaderInputStream getDataStream() -> getDataStream
    org.apache.james.mime4j.parser.EntityStateMachine advance() -> advance
    void createMimeStream() -> createMimeStream
    void clearMimeStream() -> clearMimeStream
    void advanceToBoundary() -> advanceToBoundary
    org.apache.james.mime4j.parser.EntityStateMachine nextMessage() -> nextMessage
    org.apache.james.mime4j.parser.EntityStateMachine nextMimeEntity() -> nextMimeEntity
    java.io.InputStream getLimitedContentStream() -> getLimitedContentStream
    java.io.InputStream getContentStream() -> getContentStream
org.apache.james.mime4j.parser.MimeEntityConfig -> org.apache.james.mime4j.parser.MimeEntityConfig:
    boolean maximalBodyDescriptor -> maximalBodyDescriptor
    boolean strictParsing -> strictParsing
    int maxLineLen -> maxLineLen
    int maxHeaderCount -> maxHeaderCount
    long maxContentLen -> maxContentLen
    boolean countLineNumbers -> countLineNumbers
    boolean isMaximalBodyDescriptor() -> isMaximalBodyDescriptor
    void setMaximalBodyDescriptor(boolean) -> setMaximalBodyDescriptor
    void setStrictParsing(boolean) -> setStrictParsing
    boolean isStrictParsing() -> isStrictParsing
    void setMaxLineLen(int) -> setMaxLineLen
    int getMaxLineLen() -> getMaxLineLen
    void setMaxHeaderCount(int) -> setMaxHeaderCount
    int getMaxHeaderCount() -> getMaxHeaderCount
    void setMaxContentLen(long) -> setMaxContentLen
    long getMaxContentLen() -> getMaxContentLen
    void setCountLineNumbers(boolean) -> setCountLineNumbers
    boolean isCountLineNumbers() -> isCountLineNumbers
    org.apache.james.mime4j.parser.MimeEntityConfig clone() -> clone
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.james.mime4j.parser.MimeParseEventException -> org.apache.james.mime4j.parser.MimeParseEventException:
    long serialVersionUID -> serialVersionUID
    org.apache.james.mime4j.parser.Event event -> event
    org.apache.james.mime4j.parser.Event getEvent() -> getEvent
org.apache.james.mime4j.parser.MimeStreamParser -> org.apache.james.mime4j.parser.MimeStreamParser:
    org.apache.james.mime4j.parser.ContentHandler handler -> handler
    boolean contentDecoding -> contentDecoding
    org.apache.james.mime4j.parser.MimeTokenStream mimeTokenStream -> mimeTokenStream
    boolean isContentDecoding() -> isContentDecoding
    void setContentDecoding(boolean) -> setContentDecoding
    void parse(java.io.InputStream) -> parse
    boolean isRaw() -> isRaw
    void setRaw(boolean) -> setRaw
    void stop() -> stop
    void setContentHandler(org.apache.james.mime4j.parser.ContentHandler) -> setContentHandler
org.apache.james.mime4j.parser.MimeTokenStream -> org.apache.james.mime4j.parser.MimeTokenStream:
    org.apache.james.mime4j.parser.MimeEntityConfig config -> config
    java.util.LinkedList entities -> entities
    int state -> state
    org.apache.james.mime4j.parser.EntityStateMachine currentStateMachine -> currentStateMachine
    int recursionMode -> recursionMode
    org.apache.james.mime4j.io.BufferedLineReaderInputStream inbuffer -> inbuffer
    org.apache.james.mime4j.parser.MimeTokenStream createMaximalDescriptorStream() -> createMaximalDescriptorStream
    org.apache.james.mime4j.parser.MimeTokenStream createStrictValidationStream() -> createStrictValidationStream
    void parse(java.io.InputStream) -> parse
    void parseHeadless(java.io.InputStream,java.lang.String) -> parseHeadless
    void doParse(java.io.InputStream,java.lang.String) -> doParse
    boolean isRaw() -> isRaw
    int getRecursionMode() -> getRecursionMode
    void setRecursionMode(int) -> setRecursionMode
    void stop() -> stop
    int getState() -> getState
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getDecodedInputStream() -> getDecodedInputStream
    java.io.Reader getReader() -> getReader
    org.apache.james.mime4j.descriptor.BodyDescriptor getBodyDescriptor() -> getBodyDescriptor
    org.apache.james.mime4j.parser.Field getField() -> getField
    int next() -> next
    java.lang.String stateToString(int) -> stateToString
org.apache.james.mime4j.parser.RawEntity -> org.apache.james.mime4j.parser.RawEntity:
    java.io.InputStream stream -> stream
    int state -> state
    int getState() -> getState
    void setRecursionMode(int) -> setRecursionMode
    org.apache.james.mime4j.parser.EntityStateMachine advance() -> advance
    java.io.InputStream getContentStream() -> getContentStream
    org.apache.james.mime4j.descriptor.BodyDescriptor getBodyDescriptor() -> getBodyDescriptor
    org.apache.james.mime4j.parser.Field getField() -> getField
    java.lang.String getFieldName() -> getFieldName
    java.lang.String getFieldValue() -> getFieldValue
org.apache.james.mime4j.parser.RawField -> org.apache.james.mime4j.parser.RawField:
    org.apache.james.mime4j.util.ByteSequence raw -> raw
    int colonIdx -> colonIdx
    java.lang.String name -> name
    java.lang.String body -> body
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    org.apache.james.mime4j.util.ByteSequence getRaw() -> getRaw
    java.lang.String toString() -> toString
    java.lang.String parseName() -> parseName
    java.lang.String parseBody() -> parseBody
org.apache.james.mime4j.parser.RecursionMode -> org.apache.james.mime4j.parser.RecursionMode:
    int M_RECURSE -> M_RECURSE
    int M_NO_RECURSE -> M_NO_RECURSE
    int M_RAW -> M_RAW
    int M_FLAT -> M_FLAT
org.apache.james.mime4j.storage.AbstractStorageProvider -> org.apache.james.mime4j.storage.AbstractStorageProvider:
    org.apache.james.mime4j.storage.Storage store(java.io.InputStream) -> store
org.apache.james.mime4j.storage.CipherStorageProvider -> org.apache.james.mime4j.storage.CipherStorageProvider:
    org.apache.james.mime4j.storage.StorageProvider backend -> backend
    java.lang.String algorithm -> algorithm
    javax.crypto.KeyGenerator keygen -> keygen
    org.apache.james.mime4j.storage.StorageOutputStream createStorageOutputStream() -> createStorageOutputStream
    javax.crypto.spec.SecretKeySpec getSecretKeySpec() -> getSecretKeySpec
org.apache.james.mime4j.storage.CipherStorageProvider$CipherStorage -> org.apache.james.mime4j.storage.CipherStorageProvider$CipherStorage:
    org.apache.james.mime4j.storage.Storage encrypted -> encrypted
    java.lang.String algorithm -> algorithm
    javax.crypto.spec.SecretKeySpec skeySpec -> skeySpec
    void delete() -> delete
    java.io.InputStream getInputStream() -> getInputStream
org.apache.james.mime4j.storage.CipherStorageProvider$CipherStorageOutputStream -> org.apache.james.mime4j.storage.CipherStorageProvider$CipherStorageOutputStream:
    org.apache.james.mime4j.storage.StorageOutputStream storageOut -> storageOut
    java.lang.String algorithm -> algorithm
    javax.crypto.spec.SecretKeySpec skeySpec -> skeySpec
    javax.crypto.CipherOutputStream cipherOut -> cipherOut
    void close() -> close
    void write0(byte[],int,int) -> write0
    org.apache.james.mime4j.storage.Storage toStorage0() -> toStorage0
org.apache.james.mime4j.storage.DefaultStorageProvider -> org.apache.james.mime4j.storage.DefaultStorageProvider:
    java.lang.String DEFAULT_STORAGE_PROVIDER_PROPERTY -> DEFAULT_STORAGE_PROVIDER_PROPERTY
    org.apache.commons.logging.Log log -> log
    org.apache.james.mime4j.storage.StorageProvider instance -> instance
    org.apache.james.mime4j.storage.StorageProvider getInstance() -> getInstance
    void setInstance(org.apache.james.mime4j.storage.StorageProvider) -> setInstance
    void initialize() -> initialize
    void reset() -> reset
org.apache.james.mime4j.storage.MemoryStorageProvider -> org.apache.james.mime4j.storage.MemoryStorageProvider:
    org.apache.james.mime4j.storage.StorageOutputStream createStorageOutputStream() -> createStorageOutputStream
org.apache.james.mime4j.storage.MemoryStorageProvider$1 -> org.apache.james.mime4j.storage.MemoryStorageProvider$1:
org.apache.james.mime4j.storage.MemoryStorageProvider$MemoryStorage -> org.apache.james.mime4j.storage.MemoryStorageProvider$MemoryStorage:
    byte[] data -> data
    int count -> count
    java.io.InputStream getInputStream() -> getInputStream
    void delete() -> delete
org.apache.james.mime4j.storage.MemoryStorageProvider$MemoryStorageOutputStream -> org.apache.james.mime4j.storage.MemoryStorageProvider$MemoryStorageOutputStream:
    org.apache.james.mime4j.util.ByteArrayBuffer bab -> bab
    void write0(byte[],int,int) -> write0
    org.apache.james.mime4j.storage.Storage toStorage0() -> toStorage0
org.apache.james.mime4j.storage.MultiReferenceStorage -> org.apache.james.mime4j.storage.MultiReferenceStorage:
    org.apache.james.mime4j.storage.Storage storage -> storage
    int referenceCounter -> referenceCounter
    void addReference() -> addReference
    void delete() -> delete
    java.io.InputStream getInputStream() -> getInputStream
    void incrementCounter() -> incrementCounter
    boolean decrementCounter() -> decrementCounter
org.apache.james.mime4j.storage.Storage -> org.apache.james.mime4j.storage.Storage:
    java.io.InputStream getInputStream() -> getInputStream
    void delete() -> delete
org.apache.james.mime4j.storage.StorageOutputStream -> org.apache.james.mime4j.storage.StorageOutputStream:
    byte[] singleByte -> singleByte
    boolean closed -> closed
    boolean usedUp -> usedUp
    org.apache.james.mime4j.storage.Storage toStorage() -> toStorage
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void write0(byte[],int,int) -> write0
    org.apache.james.mime4j.storage.Storage toStorage0() -> toStorage0
org.apache.james.mime4j.storage.StorageProvider -> org.apache.james.mime4j.storage.StorageProvider:
    org.apache.james.mime4j.storage.Storage store(java.io.InputStream) -> store
    org.apache.james.mime4j.storage.StorageOutputStream createStorageOutputStream() -> createStorageOutputStream
org.apache.james.mime4j.storage.TempFileStorageProvider -> org.apache.james.mime4j.storage.TempFileStorageProvider:
    java.lang.String DEFAULT_PREFIX -> DEFAULT_PREFIX
    java.lang.String prefix -> prefix
    java.lang.String suffix -> suffix
    java.io.File directory -> directory
    org.apache.james.mime4j.storage.StorageOutputStream createStorageOutputStream() -> createStorageOutputStream
org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage -> org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorage:
    java.io.File file -> file
    java.util.Set filesToDelete -> filesToDelete
    void delete() -> delete
    java.io.InputStream getInputStream() -> getInputStream
org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorageOutputStream -> org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorageOutputStream:
    java.io.File file -> file
    java.io.OutputStream out -> out
    void close() -> close
    void write0(byte[],int,int) -> write0
    org.apache.james.mime4j.storage.Storage toStorage0() -> toStorage0
org.apache.james.mime4j.storage.ThresholdStorageProvider -> org.apache.james.mime4j.storage.ThresholdStorageProvider:
    org.apache.james.mime4j.storage.StorageProvider backend -> backend
    int thresholdSize -> thresholdSize
    org.apache.james.mime4j.storage.StorageOutputStream createStorageOutputStream() -> createStorageOutputStream
    int access$000(org.apache.james.mime4j.storage.ThresholdStorageProvider) -> access$000
    org.apache.james.mime4j.storage.StorageProvider access$100(org.apache.james.mime4j.storage.ThresholdStorageProvider) -> access$100
org.apache.james.mime4j.storage.ThresholdStorageProvider$ThresholdStorage -> org.apache.james.mime4j.storage.ThresholdStorageProvider$ThresholdStorage:
    byte[] head -> head
    int headLen -> headLen
    org.apache.james.mime4j.storage.Storage tail -> tail
    void delete() -> delete
    java.io.InputStream getInputStream() -> getInputStream
org.apache.james.mime4j.storage.ThresholdStorageProvider$ThresholdStorageOutputStream -> org.apache.james.mime4j.storage.ThresholdStorageProvider$ThresholdStorageOutputStream:
    org.apache.james.mime4j.util.ByteArrayBuffer head -> head
    org.apache.james.mime4j.storage.StorageOutputStream tail -> tail
    org.apache.james.mime4j.storage.ThresholdStorageProvider this$0 -> this$0
    void close() -> close
    void write0(byte[],int,int) -> write0
    org.apache.james.mime4j.storage.Storage toStorage0() -> toStorage0
org.apache.james.mime4j.util.ByteArrayBuffer -> org.apache.james.mime4j.util.ByteArrayBuffer:
    byte[] buffer -> buffer
    int len -> len
    void expand(int) -> expand
    void append(byte[],int,int) -> append
    void append(int) -> append
    void clear() -> clear
    byte[] toByteArray() -> toByteArray
    byte byteAt(int) -> byteAt
    int capacity() -> capacity
    int length() -> length
    byte[] buffer() -> buffer
    int indexOf(byte) -> indexOf
    int indexOf(byte,int,int) -> indexOf
    void setLength(int) -> setLength
    boolean isEmpty() -> isEmpty
    boolean isFull() -> isFull
    java.lang.String toString() -> toString
org.apache.james.mime4j.util.ByteSequence -> org.apache.james.mime4j.util.ByteSequence:
    org.apache.james.mime4j.util.ByteSequence EMPTY -> EMPTY
    int length() -> length
    byte byteAt(int) -> byteAt
    byte[] toByteArray() -> toByteArray
org.apache.james.mime4j.util.CharsetUtil -> org.apache.james.mime4j.util.CharsetUtil:
    org.apache.commons.logging.Log log -> log
    org.apache.james.mime4j.util.CharsetUtil$Charset[] JAVA_CHARSETS -> JAVA_CHARSETS
    java.util.SortedSet decodingSupported -> decodingSupported
    java.util.SortedSet encodingSupported -> encodingSupported
    java.util.Map charsetMap -> charsetMap
    java.lang.String CRLF -> CRLF
    int CR -> CR
    int LF -> LF
    int SP -> SP
    int HT -> HT
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    boolean isASCII(char) -> isASCII
    boolean isASCII(java.lang.String) -> isASCII
    boolean isWhitespace(char) -> isWhitespace
    boolean isWhitespace(java.lang.String) -> isWhitespace
    boolean isEncodingSupported(java.lang.String) -> isEncodingSupported
    boolean isDecodingSupported(java.lang.String) -> isDecodingSupported
    java.lang.String toMimeCharset(java.lang.String) -> toMimeCharset
    java.lang.String toJavaCharset(java.lang.String) -> toJavaCharset
    java.nio.charset.Charset getCharset(java.lang.String) -> getCharset
org.apache.james.mime4j.util.CharsetUtil$1 -> org.apache.james.mime4j.util.CharsetUtil$1:
org.apache.james.mime4j.util.CharsetUtil$Charset -> org.apache.james.mime4j.util.CharsetUtil$Charset:
    java.lang.String canonical -> canonical
    java.lang.String mime -> mime
    java.lang.String[] aliases -> aliases
    int compareTo(org.apache.james.mime4j.util.CharsetUtil$Charset) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String access$100(org.apache.james.mime4j.util.CharsetUtil$Charset) -> access$100
    java.lang.String access$200(org.apache.james.mime4j.util.CharsetUtil$Charset) -> access$200
    java.lang.String[] access$300(org.apache.james.mime4j.util.CharsetUtil$Charset) -> access$300
org.apache.james.mime4j.util.ContentUtil -> org.apache.james.mime4j.util.ContentUtil:
    org.apache.james.mime4j.util.ByteSequence encode(java.lang.String) -> encode
    org.apache.james.mime4j.util.ByteSequence encode(java.nio.charset.Charset,java.lang.String) -> encode
    java.lang.String decode(org.apache.james.mime4j.util.ByteSequence) -> decode
    java.lang.String decode(java.nio.charset.Charset,org.apache.james.mime4j.util.ByteSequence) -> decode
    java.lang.String decode(org.apache.james.mime4j.util.ByteSequence,int,int) -> decode
    java.lang.String decode(java.nio.charset.Charset,org.apache.james.mime4j.util.ByteSequence,int,int) -> decode
    java.lang.String decode(java.nio.charset.Charset,byte[],int,int) -> decode
org.apache.james.mime4j.util.EmptyByteSequence -> org.apache.james.mime4j.util.EmptyByteSequence:
    byte[] EMPTY_BYTES -> EMPTY_BYTES
    int length() -> length
    byte byteAt(int) -> byteAt
    byte[] toByteArray() -> toByteArray
org.apache.james.mime4j.util.MimeUtil -> org.apache.james.mime4j.util.MimeUtil:
    org.apache.commons.logging.Log log -> log
    java.lang.String ENC_QUOTED_PRINTABLE -> ENC_QUOTED_PRINTABLE
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.lang.String ENC_BASE64 -> ENC_BASE64
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_7BIT -> ENC_7BIT
    java.lang.String MIME_HEADER_MIME_VERSION -> MIME_HEADER_MIME_VERSION
    java.lang.String MIME_HEADER_CONTENT_ID -> MIME_HEADER_CONTENT_ID
    java.lang.String MIME_HEADER_CONTENT_DESCRIPTION -> MIME_HEADER_CONTENT_DESCRIPTION
    java.lang.String MIME_HEADER_CONTENT_DISPOSITION -> MIME_HEADER_CONTENT_DISPOSITION
    java.lang.String PARAM_FILENAME -> PARAM_FILENAME
    java.lang.String PARAM_MODIFICATION_DATE -> PARAM_MODIFICATION_DATE
    java.lang.String PARAM_CREATION_DATE -> PARAM_CREATION_DATE
    java.lang.String PARAM_READ_DATE -> PARAM_READ_DATE
    java.lang.String PARAM_SIZE -> PARAM_SIZE
    java.lang.String MIME_HEADER_LANGAUGE -> MIME_HEADER_LANGAUGE
    java.lang.String MIME_HEADER_LOCATION -> MIME_HEADER_LOCATION
    java.lang.String MIME_HEADER_MD5 -> MIME_HEADER_MD5
    java.util.Random random -> random
    int counter -> counter
    java.lang.ThreadLocal RFC822_DATE_FORMAT -> RFC822_DATE_FORMAT
    boolean isSameMimeType(java.lang.String,java.lang.String) -> isSameMimeType
    boolean isMessage(java.lang.String) -> isMessage
    boolean isMultipart(java.lang.String) -> isMultipart
    boolean isBase64Encoding(java.lang.String) -> isBase64Encoding
    boolean isQuotedPrintableEncoded(java.lang.String) -> isQuotedPrintableEncoded
    java.util.Map getHeaderParams(java.lang.String) -> getHeaderParams
    java.lang.String createUniqueBoundary() -> createUniqueBoundary
    java.lang.String createUniqueMessageId(java.lang.String) -> createUniqueMessageId
    java.lang.String formatDate(java.util.Date,java.util.TimeZone) -> formatDate
    java.lang.String fold(java.lang.String,int) -> fold
    java.lang.String unfold(java.lang.String) -> unfold
    java.lang.String unfold0(java.lang.String,int) -> unfold0
    int indexOfWsp(java.lang.String,int) -> indexOfWsp
    int nextCounterValue() -> nextCounterValue
org.apache.james.mime4j.util.MimeUtil$1 -> org.apache.james.mime4j.util.MimeUtil$1:
    java.text.DateFormat initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
org.apache.james.mime4j.util.MimeUtil$Rfc822DateFormat -> org.apache.james.mime4j.util.MimeUtil$Rfc822DateFormat:
    long serialVersionUID -> serialVersionUID
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
org.apache.james.mime4j.util.StringArrayMap -> org.apache.james.mime4j.util.StringArrayMap:
    long serialVersionUID -> serialVersionUID
    java.util.Map map -> map
    java.lang.String asString(java.lang.Object) -> asString
    java.lang.String[] asStringArray(java.lang.Object) -> asStringArray
    java.util.Enumeration asStringEnum(java.lang.Object) -> asStringEnum
    java.util.Map asMap(java.util.Map) -> asMap
    void addMapValue(java.util.Map,java.lang.String,java.lang.String) -> addMapValue
    java.lang.String convertName(java.lang.String) -> convertName
    java.lang.String getValue(java.lang.String) -> getValue
    java.lang.String[] getValues(java.lang.String) -> getValues
    java.util.Enumeration getValueEnum(java.lang.String) -> getValueEnum
    java.util.Enumeration getNames() -> getNames
    java.util.Map getMap() -> getMap
    void addValue(java.lang.String,java.lang.String) -> addValue
    java.lang.String[] getNameArray() -> getNameArray
org.apache.james.mime4j.util.StringArrayMap$1 -> org.apache.james.mime4j.util.StringArrayMap$1:
    java.lang.Object value -> value
    java.lang.Object val$pValue -> val$pValue
    boolean hasMoreElements() -> hasMoreElements
    java.lang.String nextElement() -> nextElement
    java.lang.Object nextElement() -> nextElement
org.apache.james.mime4j.util.StringArrayMap$2 -> org.apache.james.mime4j.util.StringArrayMap$2:
    int offset -> offset
    java.lang.String[] val$values -> val$values
    boolean hasMoreElements() -> hasMoreElements
    java.lang.String nextElement() -> nextElement
    java.lang.Object nextElement() -> nextElement
u.aly.a -> a.a.a:
    int a -> a
    int b -> b
    java.lang.String c -> c
    java.util.List d -> d
    u.aly.ay e -> e
    boolean a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    boolean g() -> g
    u.aly.ay d() -> d
    java.util.List e() -> e
    void a(java.util.List) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String f() -> f
    void a(u.aly.az) -> a
u.aly.aa -> a.a.b:
    int d -> d
    int a -> a
    int b -> b
    int e -> e
    long c -> c
    long f -> f
    long g -> g
    android.content.Context n -> h
    void b(android.content.Context) -> b
    boolean f() -> a
    void g() -> b
    void h() -> c
    void i() -> d
    void j() -> e
    void k() -> f
    void l() -> g
    boolean m() -> h
    long n() -> i
    long o() -> j
    u.aly.ap a(android.content.Context) -> a
    void a() -> k
    void b() -> l
    void c() -> m
    void d() -> n
u.aly.ab -> a.a.c:
    java.lang.String a -> a
    long b -> b
u.aly.ac -> a.a.d:
    u.aly.bm a(android.content.Context) -> a
    long[] b(android.content.Context) -> b
u.aly.ad -> a.a.e:
    java.util.Map b -> a
    java.util.ArrayList c -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    void a(android.content.Context) -> a
    java.util.List a(android.content.SharedPreferences) -> a
u.aly.ag -> a.a.f:
    java.lang.String a(java.lang.Throwable) -> a
    void a(u.aly.bn,java.lang.String) -> a
u.aly.ai -> a.a.g:
    void a(org.json.JSONArray) -> a
u.aly.aj -> a.a.h:
    void a(u.aly.bn,java.lang.String) -> a
u.aly.ak -> a.a.i:
    int h -> a
    long i -> b
    u.aly.bn a(android.content.Context,u.aly.bn) -> a
    u.aly.bl a(android.content.Context) -> a
    long a() -> a
    void a(int) -> a
    boolean c() -> b
u.aly.al -> a.a.j:
    u.aly.al a -> a
    u.aly.al b -> b
    u.aly.al c -> c
    u.aly.al d -> d
    int e -> e
    u.aly.al[] f -> f
    u.aly.al[] values() -> values
    u.aly.al valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.al a(int) -> a
u.aly.am -> a.a.k:
    u.aly.dl c -> c
    u.aly.db d -> d
    java.util.Map e -> e
    long a -> a
    byte g -> f
    java.util.Map b -> b
    boolean e() -> a
    void a(boolean) -> a
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void f() -> b
    u.aly.dl h() -> c
    u.aly.db i() -> d
u.aly.am$1 -> a.a.l:
u.aly.am$a -> a.a.m:
    void a(u.aly.dg,u.aly.am) -> a
    void b(u.aly.dg,u.aly.am) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.am$b -> a.a.n:
    u.aly.am$a a() -> a
    u.aly.do b() -> b
u.aly.am$c -> a.a.o:
    void a(u.aly.dg,u.aly.am) -> a
    void b(u.aly.dg,u.aly.am) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.am$d -> a.a.p:
    u.aly.am$c a() -> a
    u.aly.do b() -> b
u.aly.am$e -> a.a.q:
    u.aly.am$e a -> a
    java.util.Map b -> b
    short c -> c
    java.lang.String d -> d
    u.aly.am$e[] e -> e
    u.aly.am$e[] values() -> values
    u.aly.am$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.an -> a.a.r:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map g -> g
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.Map c -> c
    void a(boolean) -> a
    void b(boolean) -> b
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void j() -> a
    u.aly.dl k() -> b
    u.aly.db l() -> c
    u.aly.db m() -> d
u.aly.an$1 -> a.a.s:
u.aly.an$a -> a.a.t:
    void a(u.aly.dg,u.aly.an) -> a
    void b(u.aly.dg,u.aly.an) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.an$b -> a.a.u:
    u.aly.an$a a() -> a
    u.aly.do b() -> b
u.aly.an$c -> a.a.v:
    void a(u.aly.dg,u.aly.an) -> a
    void b(u.aly.dg,u.aly.an) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.an$d -> a.a.w:
    u.aly.an$c a() -> a
    u.aly.do b() -> b
u.aly.an$e -> a.a.x:
    u.aly.an$e a -> a
    u.aly.an$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.an$e[] f -> f
    u.aly.an$e[] values() -> values
    u.aly.an$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ao -> a.a.y:
    u.aly.dl l -> l
    u.aly.db m -> m
    u.aly.db n -> n
    u.aly.db o -> o
    u.aly.db p -> p
    u.aly.db q -> q
    u.aly.db r -> r
    u.aly.db s -> s
    u.aly.db t -> t
    u.aly.db u -> u
    u.aly.db v -> v
    java.util.Map w -> w
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    u.aly.bk e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    byte z -> x
    u.aly.ao$e[] A -> y
    java.util.Map k -> k
    u.aly.ao a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.ao b(java.lang.String) -> b
    boolean i() -> a
    void b(boolean) -> b
    u.aly.ao a(int) -> a
    boolean l() -> b
    void c(boolean) -> c
    u.aly.ao c(java.lang.String) -> c
    boolean o() -> c
    void d(boolean) -> d
    u.aly.ao a(u.aly.bk) -> a
    void e(boolean) -> e
    u.aly.ao d(java.lang.String) -> d
    void f(boolean) -> f
    u.aly.ao e(java.lang.String) -> e
    void g(boolean) -> g
    u.aly.ao f(java.lang.String) -> f
    boolean A() -> d
    void h(boolean) -> h
    u.aly.ao g(java.lang.String) -> g
    boolean D() -> e
    void i(boolean) -> i
    u.aly.ao c(int) -> b
    boolean G() -> f
    void j(boolean) -> j
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void H() -> g
    u.aly.dl I() -> h
    u.aly.db J() -> i
    u.aly.db K() -> j
    u.aly.db L() -> k
    u.aly.db M() -> l
    u.aly.db N() -> m
    u.aly.db O() -> n
    u.aly.db P() -> o
    u.aly.db Q() -> p
    u.aly.db R() -> q
    u.aly.db S() -> r
u.aly.ao$1 -> a.a.z:
u.aly.ao$a -> a.a.aa:
    void a(u.aly.dg,u.aly.ao) -> a
    void b(u.aly.dg,u.aly.ao) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ao$b -> a.a.ab:
    u.aly.ao$a a() -> a
    u.aly.do b() -> b
u.aly.ao$c -> a.a.ac:
    void a(u.aly.dg,u.aly.ao) -> a
    void b(u.aly.dg,u.aly.ao) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ao$d -> a.a.ad:
    u.aly.ao$c a() -> a
    u.aly.do b() -> b
u.aly.ao$e -> a.a.ae:
    u.aly.ao$e a -> a
    u.aly.ao$e b -> b
    u.aly.ao$e c -> c
    u.aly.ao$e d -> d
    u.aly.ao$e e -> e
    u.aly.ao$e f -> f
    u.aly.ao$e g -> g
    u.aly.ao$e h -> h
    u.aly.ao$e i -> i
    u.aly.ao$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.ao$e[] n -> n
    u.aly.ao$e[] values() -> values
    u.aly.ao$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ap -> a.a.af:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    int a -> a
    int b -> b
    int c -> c
    byte m -> j
    u.aly.ap$e[] n -> k
    java.util.Map d -> d
    u.aly.ap a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.ap c(int) -> b
    boolean i() -> b
    void b(boolean) -> b
    u.aly.ap d(int) -> c
    boolean l() -> c
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> d
    u.aly.dl n() -> e
    u.aly.db o() -> f
    u.aly.db p() -> g
    u.aly.db q() -> h
u.aly.ap$1 -> a.a.ag:
u.aly.ap$a -> a.a.ah:
    void a(u.aly.dg,u.aly.ap) -> a
    void b(u.aly.dg,u.aly.ap) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ap$b -> a.a.ai:
    u.aly.ap$a a() -> a
    u.aly.do b() -> b
u.aly.ap$c -> a.a.aj:
    void a(u.aly.dg,u.aly.ap) -> a
    void b(u.aly.dg,u.aly.ap) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ap$d -> a.a.ak:
    u.aly.ap$c a() -> a
    u.aly.do b() -> b
u.aly.ap$e -> a.a.al:
    u.aly.ap$e a -> a
    u.aly.ap$e b -> b
    u.aly.ap$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ap$e[] g -> g
    u.aly.ap$e[] values() -> values
    u.aly.ap$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.aq -> a.a.am:
    u.aly.dl c -> c
    u.aly.db d -> d
    java.util.Map e -> e
    u.aly.bd a -> a
    u.aly.aq$e[] f -> f
    java.util.Map b -> b
    u.aly.aq a(u.aly.bd) -> a
    boolean e() -> a
    void a(boolean) -> a
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void f() -> b
    u.aly.dl h() -> c
    u.aly.db i() -> d
u.aly.aq$1 -> a.a.an:
u.aly.aq$a -> a.a.ao:
    void a(u.aly.dg,u.aly.aq) -> a
    void b(u.aly.dg,u.aly.aq) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.aq$b -> a.a.ap:
    u.aly.aq$a a() -> a
    u.aly.do b() -> b
u.aly.aq$c -> a.a.aq:
    void a(u.aly.dg,u.aly.aq) -> a
    void b(u.aly.dg,u.aly.aq) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.aq$d -> a.a.ar:
    u.aly.aq$c a() -> a
    u.aly.do b() -> b
u.aly.aq$e -> a.a.as:
    u.aly.aq$e a -> a
    java.util.Map b -> b
    short c -> c
    java.lang.String d -> d
    u.aly.aq$e[] e -> e
    u.aly.aq$e[] values() -> values
    u.aly.aq$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ar -> a.a.at:
    u.aly.dl s -> s
    u.aly.db t -> t
    u.aly.db u -> u
    u.aly.db v -> v
    u.aly.db w -> w
    u.aly.db x -> x
    u.aly.db y -> y
    u.aly.db z -> z
    u.aly.db A -> A
    u.aly.db B -> B
    u.aly.db C -> C
    u.aly.db D -> D
    u.aly.db E -> E
    u.aly.db F -> F
    u.aly.db G -> G
    u.aly.db H -> H
    u.aly.db I -> I
    u.aly.db J -> J
    java.util.Map K -> K
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    u.aly.bi i -> i
    boolean j -> j
    boolean k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    long n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    byte O -> L
    u.aly.ar$e[] P -> M
    java.util.Map r -> r
    u.aly.ar a(java.lang.String) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.ar b(java.lang.String) -> b
    boolean i() -> b
    void b(boolean) -> b
    u.aly.ar c(java.lang.String) -> c
    boolean l() -> c
    void c(boolean) -> c
    boolean o() -> d
    void d(boolean) -> d
    u.aly.ar e(java.lang.String) -> d
    boolean r() -> e
    void e(boolean) -> e
    u.aly.ar f(java.lang.String) -> e
    boolean u() -> f
    void f(boolean) -> f
    u.aly.ar g(java.lang.String) -> f
    boolean x() -> g
    void g(boolean) -> g
    u.aly.ar h(java.lang.String) -> g
    boolean A() -> h
    void h(boolean) -> h
    u.aly.ar a(u.aly.bi) -> a
    boolean D() -> i
    void i(boolean) -> i
    boolean G() -> j
    void k(boolean) -> j
    boolean J() -> k
    void m(boolean) -> k
    u.aly.ar i(java.lang.String) -> h
    boolean M() -> l
    void n(boolean) -> l
    u.aly.ar j(java.lang.String) -> i
    boolean P() -> m
    void o(boolean) -> m
    u.aly.ar a(long) -> a
    boolean S() -> n
    void p(boolean) -> n
    u.aly.ar k(java.lang.String) -> j
    boolean V() -> o
    void q(boolean) -> o
    u.aly.ar l(java.lang.String) -> k
    boolean Y() -> p
    void r(boolean) -> p
    u.aly.ar m(java.lang.String) -> l
    boolean ab() -> q
    void s(boolean) -> q
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void ac() -> r
    u.aly.dl ad() -> s
    u.aly.db ae() -> t
    u.aly.db af() -> u
    u.aly.db ag() -> v
    u.aly.db ah() -> w
    u.aly.db ai() -> x
    u.aly.db aj() -> y
    u.aly.db ak() -> z
    u.aly.db al() -> A
    u.aly.db am() -> B
    u.aly.db an() -> C
    u.aly.db ao() -> D
    u.aly.db ap() -> E
    u.aly.db aq() -> F
    u.aly.db ar() -> G
    u.aly.db as() -> H
    u.aly.db at() -> I
    u.aly.db au() -> J
u.aly.ar$1 -> a.a.au:
u.aly.ar$a -> a.a.av:
    void a(u.aly.dg,u.aly.ar) -> a
    void b(u.aly.dg,u.aly.ar) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ar$b -> a.a.aw:
    u.aly.ar$a a() -> a
    u.aly.do b() -> b
u.aly.ar$c -> a.a.ax:
    void a(u.aly.dg,u.aly.ar) -> a
    void b(u.aly.dg,u.aly.ar) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ar$d -> a.a.ay:
    u.aly.ar$c a() -> a
    u.aly.do b() -> b
u.aly.ar$e -> a.a.az:
    u.aly.ar$e a -> a
    u.aly.ar$e b -> b
    u.aly.ar$e c -> c
    u.aly.ar$e d -> d
    u.aly.ar$e e -> e
    u.aly.ar$e f -> f
    u.aly.ar$e g -> g
    u.aly.ar$e h -> h
    u.aly.ar$e i -> i
    u.aly.ar$e j -> j
    u.aly.ar$e k -> k
    u.aly.ar$e l -> l
    u.aly.ar$e m -> m
    u.aly.ar$e n -> n
    u.aly.ar$e o -> o
    u.aly.ar$e p -> p
    u.aly.ar$e q -> q
    java.util.Map r -> r
    short s -> s
    java.lang.String t -> t
    u.aly.ar$e[] u -> u
    u.aly.ar$e[] values() -> values
    u.aly.ar$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.at -> a.a.ba:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    long a -> a
    java.lang.String b -> b
    u.aly.au c -> c
    byte k -> j
    u.aly.at$e[] l -> k
    java.util.Map d -> d
    u.aly.at a(long) -> a
    boolean e() -> a
    void b(boolean) -> a
    u.aly.at a(java.lang.String) -> a
    void c(boolean) -> b
    u.aly.at a(u.aly.au) -> a
    boolean l() -> b
    void d(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> c
    u.aly.dl n() -> d
    u.aly.db o() -> e
    u.aly.db p() -> f
    u.aly.db q() -> g
u.aly.at$1 -> a.a.bb:
u.aly.at$a -> a.a.bc:
    void a(u.aly.dg,u.aly.at) -> a
    void b(u.aly.dg,u.aly.at) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.at$b -> a.a.bd:
    u.aly.at$a a() -> a
    u.aly.do b() -> b
u.aly.at$c -> a.a.be:
    void a(u.aly.dg,u.aly.at) -> a
    void b(u.aly.dg,u.aly.at) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.at$d -> a.a.bf:
    u.aly.at$c a() -> a
    u.aly.do b() -> b
u.aly.at$e -> a.a.bg:
    u.aly.at$e a -> a
    u.aly.at$e b -> b
    u.aly.at$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.at$e[] g -> g
    u.aly.at$e[] values() -> values
    u.aly.at$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.au -> a.a.bh:
    u.aly.au a -> a
    u.aly.au b -> b
    int c -> c
    u.aly.au[] d -> d
    u.aly.au[] values() -> values
    u.aly.au valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.au a(int) -> a
u.aly.av -> a.a.bi:
    u.aly.dl g -> g
    u.aly.db h -> h
    u.aly.db i -> i
    u.aly.db j -> j
    u.aly.db k -> k
    u.aly.db l -> l
    java.util.Map m -> m
    java.lang.String a -> a
    java.util.Map b -> b
    long c -> c
    int d -> d
    long e -> e
    byte q -> n
    u.aly.av$e[] r -> o
    java.util.Map f -> f
    void a(boolean) -> a
    void b(boolean) -> b
    boolean m() -> a
    void c(boolean) -> c
    boolean p() -> b
    void d(boolean) -> d
    boolean s() -> c
    void e(boolean) -> e
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void t() -> d
    u.aly.dl u() -> e
    u.aly.db v() -> f
    u.aly.db w() -> g
    u.aly.db x() -> h
    u.aly.db y() -> i
    u.aly.db z() -> j
u.aly.av$1 -> a.a.bj:
u.aly.av$a -> a.a.bk:
    void a(u.aly.dg,u.aly.av) -> a
    void b(u.aly.dg,u.aly.av) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.av$b -> a.a.bl:
    u.aly.av$a a() -> a
    u.aly.do b() -> b
u.aly.av$c -> a.a.bm:
    void a(u.aly.dg,u.aly.av) -> a
    void b(u.aly.dg,u.aly.av) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.av$d -> a.a.bn:
    u.aly.av$c a() -> a
    u.aly.do b() -> b
u.aly.av$e -> a.a.bo:
    u.aly.av$e a -> a
    u.aly.av$e b -> b
    u.aly.av$e c -> c
    u.aly.av$e d -> d
    u.aly.av$e e -> e
    java.util.Map f -> f
    short g -> g
    java.lang.String h -> h
    u.aly.av$e[] i -> i
    u.aly.av$e[] values() -> values
    u.aly.av$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ax -> a.a.bp:
    u.aly.dl f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    u.aly.db i -> i
    u.aly.db j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    byte m -> l
    u.aly.ax$e[] n -> m
    java.util.Map e -> e
    u.aly.ax a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.ax b(java.lang.String) -> b
    boolean i() -> a
    void b(boolean) -> b
    u.aly.ax c(java.lang.String) -> c
    void c(boolean) -> c
    u.aly.ax a(long) -> a
    boolean o() -> b
    void d(boolean) -> d
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void p() -> c
    u.aly.dl q() -> d
    u.aly.db r() -> e
    u.aly.db s() -> f
    u.aly.db t() -> g
    u.aly.db u() -> h
u.aly.ax$1 -> a.a.bq:
u.aly.ax$a -> a.a.br:
    void a(u.aly.dg,u.aly.ax) -> a
    void b(u.aly.dg,u.aly.ax) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ax$b -> a.a.bs:
    u.aly.ax$a a() -> a
    u.aly.do b() -> b
u.aly.ax$c -> a.a.bt:
    void a(u.aly.dg,u.aly.ax) -> a
    void b(u.aly.dg,u.aly.ax) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ax$d -> a.a.bu:
    u.aly.ax$c a() -> a
    u.aly.do b() -> b
u.aly.ax$e -> a.a.bv:
    u.aly.ax$e a -> a
    u.aly.ax$e b -> b
    u.aly.ax$e c -> c
    u.aly.ax$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.ax$e[] h -> h
    u.aly.ax$e[] values() -> values
    u.aly.ax$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ay -> a.a.bw:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    int c -> c
    byte l -> j
    java.util.Map d -> d
    java.lang.String c() -> a
    u.aly.ay a(java.lang.String) -> a
    void a(boolean) -> a
    long f() -> b
    u.aly.ay a(long) -> a
    boolean i() -> c
    void b(boolean) -> b
    int j() -> d
    u.aly.ay a(int) -> a
    boolean l() -> e
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dl n() -> g
    u.aly.db o() -> h
    u.aly.db p() -> i
    u.aly.db q() -> j
u.aly.ay$1 -> a.a.bx:
u.aly.ay$a -> a.a.by:
    void a(u.aly.dg,u.aly.ay) -> a
    void b(u.aly.dg,u.aly.ay) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ay$b -> a.a.bz:
    u.aly.ay$a a() -> a
    u.aly.do b() -> b
u.aly.ay$c -> a.a.ca:
    void a(u.aly.dg,u.aly.ay) -> a
    void b(u.aly.dg,u.aly.ay) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ay$d -> a.a.cb:
    u.aly.ay$c a() -> a
    u.aly.do b() -> b
u.aly.ay$e -> a.a.cc:
    u.aly.ay$e a -> a
    u.aly.ay$e b -> b
    u.aly.ay$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ay$e[] g -> g
    u.aly.ay$e[] values() -> values
    u.aly.ay$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.az -> a.a.cd:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    java.util.List b -> b
    java.lang.String c -> c
    u.aly.az$e[] j -> j
    java.util.Map d -> d
    java.util.Map d() -> a
    u.aly.az a(java.util.Map) -> a
    void a(boolean) -> a
    java.util.List j() -> b
    u.aly.az a(java.util.List) -> a
    boolean l() -> c
    void b(boolean) -> b
    boolean o() -> d
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void p() -> e
    u.aly.dl q() -> f
    u.aly.db r() -> g
    u.aly.db s() -> h
    u.aly.db t() -> i
u.aly.az$1 -> a.a.ce:
u.aly.az$a -> a.a.cf:
    void a(u.aly.dg,u.aly.az) -> a
    void b(u.aly.dg,u.aly.az) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.az$b -> a.a.cg:
    u.aly.az$a a() -> a
    u.aly.do b() -> b
u.aly.az$c -> a.a.ch:
    void a(u.aly.dg,u.aly.az) -> a
    void b(u.aly.dg,u.aly.az) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.az$d -> a.a.ci:
    u.aly.az$c a() -> a
    u.aly.do b() -> b
u.aly.az$e -> a.a.cj:
    u.aly.az$e a -> a
    u.aly.az$e b -> b
    u.aly.az$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.az$e[] g -> g
    u.aly.az$e[] values() -> values
    u.aly.az$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.b -> a.a.ck:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.ba -> a.a.cl:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    int b -> b
    java.lang.String c -> c
    byte k -> j
    java.util.Map d -> d
    java.util.Map d() -> a
    boolean f() -> b
    void a(boolean) -> a
    int h() -> c
    u.aly.ba a(int) -> a
    boolean j() -> d
    void b(boolean) -> b
    java.lang.String k() -> e
    u.aly.ba a(java.lang.String) -> a
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void n() -> f
    u.aly.dl o() -> g
    u.aly.db p() -> h
    u.aly.db q() -> i
    u.aly.db r() -> j
u.aly.ba$1 -> a.a.cm:
u.aly.ba$a -> a.a.cn:
    void a(u.aly.dg,u.aly.ba) -> a
    void b(u.aly.dg,u.aly.ba) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ba$b -> a.a.co:
    u.aly.ba$a a() -> a
    u.aly.do b() -> b
u.aly.ba$c -> a.a.cp:
    void a(u.aly.dg,u.aly.ba) -> a
    void b(u.aly.dg,u.aly.ba) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ba$d -> a.a.cq:
    u.aly.ba$c a() -> a
    u.aly.do b() -> b
u.aly.ba$e -> a.a.cr:
    u.aly.ba$e a -> a
    u.aly.ba$e b -> b
    u.aly.ba$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ba$e[] g -> g
    u.aly.ba$e[] values() -> values
    u.aly.ba$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bb -> a.a.cs:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    java.lang.String c -> c
    byte k -> j
    u.aly.bb$e[] l -> k
    java.util.Map d -> d
    java.lang.String c() -> a
    boolean e() -> b
    void a(boolean) -> a
    long f() -> c
    boolean i() -> d
    void b(boolean) -> b
    java.lang.String j() -> e
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dl n() -> g
    u.aly.db o() -> h
    u.aly.db p() -> i
    u.aly.db q() -> j
u.aly.bb$1 -> a.a.ct:
u.aly.bb$a -> a.a.cu:
    void a(u.aly.dg,u.aly.bb) -> a
    void b(u.aly.dg,u.aly.bb) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bb$b -> a.a.cv:
    u.aly.bb$a a() -> a
    u.aly.do b() -> b
u.aly.bb$c -> a.a.cw:
    void a(u.aly.dg,u.aly.bb) -> a
    void b(u.aly.dg,u.aly.bb) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bb$d -> a.a.cx:
    u.aly.bb$c a() -> a
    u.aly.do b() -> b
u.aly.bb$e -> a.a.cy:
    u.aly.bb$e a -> a
    u.aly.bb$e b -> b
    u.aly.bb$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bb$e[] g -> g
    u.aly.bb$e[] values() -> values
    u.aly.bb$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bc -> a.a.cz:
    u.aly.dl f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    u.aly.db i -> i
    u.aly.db j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    u.aly.bc$e[] l -> l
    java.util.Map e -> e
    java.lang.String c() -> a
    u.aly.bc a(java.lang.String) -> a
    void a(boolean) -> a
    void a(u.aly.at) -> a
    boolean k() -> b
    void b(boolean) -> b
    boolean p() -> c
    void c(boolean) -> c
    boolean u() -> d
    void d(boolean) -> d
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void v() -> e
    u.aly.dl w() -> f
    u.aly.db x() -> g
    u.aly.db y() -> h
    u.aly.db z() -> i
    u.aly.db A() -> j
u.aly.bc$1 -> a.a.da:
u.aly.bc$a -> a.a.db:
    void a(u.aly.dg,u.aly.bc) -> a
    void b(u.aly.dg,u.aly.bc) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bc$b -> a.a.dc:
    u.aly.bc$a a() -> a
    u.aly.do b() -> b
u.aly.bc$c -> a.a.dd:
    void a(u.aly.dg,u.aly.bc) -> a
    void b(u.aly.dg,u.aly.bc) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bc$d -> a.a.de:
    u.aly.bc$c a() -> a
    u.aly.do b() -> b
u.aly.bc$e -> a.a.df:
    u.aly.bc$e a -> a
    u.aly.bc$e b -> b
    u.aly.bc$e c -> c
    u.aly.bc$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.bc$e[] h -> h
    u.aly.bc$e[] values() -> values
    u.aly.bc$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bd -> a.a.dg:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map g -> g
    int a -> a
    long b -> b
    byte j -> h
    java.util.Map c -> c
    boolean e() -> a
    void a(boolean) -> a
    boolean i() -> b
    void b(boolean) -> b
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void j() -> c
    u.aly.dl k() -> d
    u.aly.db l() -> e
    u.aly.db m() -> f
u.aly.bd$1 -> a.a.dh:
u.aly.bd$a -> a.a.di:
    void a(u.aly.dg,u.aly.bd) -> a
    void b(u.aly.dg,u.aly.bd) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bd$b -> a.a.dj:
    u.aly.bd$a a() -> a
    u.aly.do b() -> b
u.aly.bd$c -> a.a.dk:
    void a(u.aly.dg,u.aly.bd) -> a
    void b(u.aly.dg,u.aly.bd) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bd$d -> a.a.dl:
    u.aly.bd$c a() -> a
    u.aly.do b() -> b
u.aly.bd$e -> a.a.dm:
    u.aly.bd$e a -> a
    u.aly.bd$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bd$e[] f -> f
    u.aly.bd$e[] values() -> values
    u.aly.bd$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.be -> a.a.dn:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    double a -> a
    double b -> b
    long c -> c
    byte m -> j
    java.util.Map d -> d
    boolean e() -> a
    void a(boolean) -> a
    boolean i() -> b
    void b(boolean) -> b
    boolean l() -> c
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> d
    u.aly.dl n() -> e
    u.aly.db o() -> f
    u.aly.db p() -> g
    u.aly.db q() -> h
u.aly.be$1 -> a.a.do:
u.aly.be$a -> a.a.dp:
    void a(u.aly.dg,u.aly.be) -> a
    void b(u.aly.dg,u.aly.be) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.be$b -> a.a.dq:
    u.aly.be$a a() -> a
    u.aly.do b() -> b
u.aly.be$c -> a.a.dr:
    void a(u.aly.dg,u.aly.be) -> a
    void b(u.aly.dg,u.aly.be) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.be$d -> a.a.ds:
    u.aly.be$c a() -> a
    u.aly.do b() -> b
u.aly.be$e -> a.a.dt:
    u.aly.be$e a -> a
    u.aly.be$e b -> b
    u.aly.be$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.be$e[] g -> g
    u.aly.be$e[] values() -> values
    u.aly.be$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bf -> a.a.du:
    u.aly.dl l -> l
    u.aly.db m -> m
    u.aly.db n -> n
    u.aly.db o -> o
    u.aly.db p -> p
    u.aly.db q -> q
    u.aly.db r -> r
    u.aly.db s -> s
    u.aly.db t -> t
    u.aly.db u -> u
    u.aly.db v -> v
    java.util.Map w -> w
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    double d -> d
    double e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    u.aly.al i -> i
    java.lang.String j -> j
    byte B -> x
    u.aly.bf$e[] C -> y
    java.util.Map k -> k
    u.aly.bf a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.bf a(java.lang.String) -> a
    boolean i() -> b
    void b(boolean) -> b
    u.aly.bf b(java.lang.String) -> b
    boolean l() -> c
    void c(boolean) -> c
    boolean o() -> d
    void d(boolean) -> d
    boolean r() -> e
    void e(boolean) -> e
    u.aly.bf c(java.lang.String) -> c
    boolean u() -> f
    void f(boolean) -> f
    boolean x() -> g
    void g(boolean) -> g
    boolean A() -> h
    void h(boolean) -> h
    u.aly.bf a(u.aly.al) -> a
    boolean D() -> i
    void i(boolean) -> i
    u.aly.bf e(java.lang.String) -> d
    boolean G() -> j
    void j(boolean) -> j
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void H() -> k
    u.aly.dl I() -> l
    u.aly.db J() -> m
    u.aly.db K() -> n
    u.aly.db L() -> o
    u.aly.db M() -> p
    u.aly.db N() -> q
    u.aly.db O() -> r
    u.aly.db P() -> s
    u.aly.db Q() -> t
    u.aly.db R() -> u
    u.aly.db S() -> v
u.aly.bf$1 -> a.a.dv:
u.aly.bf$a -> a.a.dw:
    void a(u.aly.dg,u.aly.bf) -> a
    void b(u.aly.dg,u.aly.bf) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bf$b -> a.a.dx:
    u.aly.bf$a a() -> a
    u.aly.do b() -> b
u.aly.bf$c -> a.a.dy:
    void a(u.aly.dg,u.aly.bf) -> a
    void b(u.aly.dg,u.aly.bf) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bf$d -> a.a.dz:
    u.aly.bf$c a() -> a
    u.aly.do b() -> b
u.aly.bf$e -> a.a.ea:
    u.aly.bf$e a -> a
    u.aly.bf$e b -> b
    u.aly.bf$e c -> c
    u.aly.bf$e d -> d
    u.aly.bf$e e -> e
    u.aly.bf$e f -> f
    u.aly.bf$e g -> g
    u.aly.bf$e h -> h
    u.aly.bf$e i -> i
    u.aly.bf$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.bf$e[] n -> n
    u.aly.bf$e[] values() -> values
    u.aly.bf$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bg -> a.a.eb:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map g -> g
    java.lang.String a -> a
    long b -> b
    byte i -> h
    java.util.Map c -> c
    u.aly.bg a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.bg a(long) -> a
    boolean i() -> a
    void b(boolean) -> b
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void j() -> b
    u.aly.dl k() -> c
    u.aly.db l() -> d
    u.aly.db m() -> e
u.aly.bg$1 -> a.a.ec:
u.aly.bg$a -> a.a.ed:
    void a(u.aly.dg,u.aly.bg) -> a
    void b(u.aly.dg,u.aly.bg) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bg$b -> a.a.ee:
    u.aly.bg$a a() -> a
    u.aly.do b() -> b
u.aly.bg$c -> a.a.ef:
    void a(u.aly.dg,u.aly.bg) -> a
    void b(u.aly.dg,u.aly.bg) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bg$d -> a.a.eg:
    u.aly.bg$c a() -> a
    u.aly.do b() -> b
u.aly.bg$e -> a.a.eh:
    u.aly.bg$e a -> a
    u.aly.bg$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bg$e[] f -> f
    u.aly.bg$e[] values() -> values
    u.aly.bg$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bh -> a.a.ei:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map a -> a
    java.lang.Object a(u.aly.dg,u.aly.db) -> a
    void c(u.aly.dg) -> c
    java.lang.Object a(u.aly.dg,short) -> a
    void d(u.aly.dg) -> d
    u.aly.db a(u.aly.bh$a) -> a
    u.aly.dl c() -> a
    u.aly.bh$a a(short) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(u.aly.bh) -> a
    int hashCode() -> hashCode
    u.aly.co b(short) -> b
    u.aly.db a(u.aly.co) -> a
u.aly.bh$1 -> a.a.ej:
    int[] a -> a
u.aly.bh$a -> a.a.ek:
    u.aly.bh$a a -> a
    u.aly.bh$a b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bh$a[] f -> f
    u.aly.bh$a[] values() -> values
    u.aly.bh$a valueOf(java.lang.String) -> valueOf
    u.aly.bh$a a(int) -> a
    u.aly.bh$a b(int) -> b
    short a() -> a
    java.lang.String b() -> b
u.aly.bi -> a.a.el:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    boolean e() -> a
    void a(boolean) -> a
    boolean i() -> b
    void b(boolean) -> b
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void j() -> c
    u.aly.dl k() -> d
    u.aly.db l() -> e
    u.aly.db m() -> f
u.aly.bi$1 -> a.a.em:
u.aly.bi$a -> a.a.en:
    void a(u.aly.dg,u.aly.bi) -> a
    void b(u.aly.dg,u.aly.bi) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bi$b -> a.a.eo:
    u.aly.bi$a a() -> a
    u.aly.do b() -> b
u.aly.bi$c -> a.a.ep:
    void a(u.aly.dg,u.aly.bi) -> a
    void b(u.aly.dg,u.aly.bi) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bi$d -> a.a.eq:
    u.aly.bi$c a() -> a
    u.aly.do b() -> b
u.aly.bi$e -> a.a.er:
    u.aly.bi$e a -> a
    u.aly.bi$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bi$e[] f -> f
    u.aly.bi$e[] values() -> values
    u.aly.bi$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bj -> a.a.es:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    int a -> a
    java.lang.String b -> b
    u.aly.ba c -> c
    byte k -> j
    u.aly.bj$e[] l -> k
    java.util.Map d -> d
    boolean e() -> a
    void a(boolean) -> a
    java.lang.String f() -> b
    boolean i() -> c
    void b(boolean) -> b
    u.aly.ba j() -> d
    boolean l() -> e
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dl n() -> g
    u.aly.db o() -> h
    u.aly.db p() -> i
    u.aly.db q() -> j
u.aly.bj$1 -> a.a.et:
u.aly.bj$a -> a.a.eu:
    void a(u.aly.dg,u.aly.bj) -> a
    void b(u.aly.dg,u.aly.bj) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bj$b -> a.a.ev:
    u.aly.bj$a a() -> a
    u.aly.do b() -> b
u.aly.bj$c -> a.a.ew:
    void a(u.aly.dg,u.aly.bj) -> a
    void b(u.aly.dg,u.aly.bj) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bj$d -> a.a.ex:
    u.aly.bj$c a() -> a
    u.aly.do b() -> b
u.aly.bj$e -> a.a.ey:
    u.aly.bj$e a -> a
    u.aly.bj$e b -> b
    u.aly.bj$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bj$e[] g -> g
    u.aly.bj$e[] values() -> values
    u.aly.bj$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bk -> a.a.ez:
    u.aly.bk a -> a
    u.aly.bk b -> b
    u.aly.bk c -> c
    u.aly.bk d -> d
    int e -> e
    u.aly.bk[] f -> f
    u.aly.bk[] values() -> values
    u.aly.bk valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.bk a(int) -> a
u.aly.bl -> a.a.fa:
    u.aly.dl i -> i
    u.aly.db j -> j
    u.aly.db k -> k
    u.aly.db l -> l
    u.aly.db m -> m
    u.aly.db n -> n
    u.aly.db o -> o
    u.aly.db p -> p
    java.util.Map q -> q
    java.lang.String a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.List e -> e
    java.util.List f -> f
    u.aly.bm g -> g
    byte u -> r
    u.aly.bl$e[] v -> s
    java.util.Map h -> h
    u.aly.bl a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.bl a(long) -> a
    boolean i() -> a
    void b(boolean) -> b
    u.aly.bl b(long) -> b
    boolean l() -> b
    void c(boolean) -> c
    u.aly.bl c(long) -> c
    boolean o() -> c
    void d(boolean) -> d
    int p() -> d
    u.aly.bl a(java.util.List) -> a
    boolean t() -> e
    void e(boolean) -> e
    void a(u.aly.be) -> a
    u.aly.bl b(java.util.List) -> b
    boolean y() -> f
    void f(boolean) -> f
    u.aly.bl a(u.aly.bm) -> a
    boolean B() -> g
    void g(boolean) -> g
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void C() -> h
    u.aly.dl D() -> i
    u.aly.db E() -> j
    u.aly.db F() -> k
    u.aly.db G() -> l
    u.aly.db H() -> m
    u.aly.db I() -> n
    u.aly.db J() -> o
    u.aly.db K() -> p
u.aly.bl$1 -> a.a.fb:
u.aly.bl$a -> a.a.fc:
    void a(u.aly.dg,u.aly.bl) -> a
    void b(u.aly.dg,u.aly.bl) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bl$b -> a.a.fd:
    u.aly.bl$a a() -> a
    u.aly.do b() -> b
u.aly.bl$c -> a.a.fe:
    void a(u.aly.dg,u.aly.bl) -> a
    void b(u.aly.dg,u.aly.bl) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bl$d -> a.a.ff:
    u.aly.bl$c a() -> a
    u.aly.do b() -> b
u.aly.bl$e -> a.a.fg:
    u.aly.bl$e a -> a
    u.aly.bl$e b -> b
    u.aly.bl$e c -> c
    u.aly.bl$e d -> d
    u.aly.bl$e e -> e
    u.aly.bl$e f -> f
    u.aly.bl$e g -> g
    java.util.Map h -> h
    short i -> i
    java.lang.String j -> j
    u.aly.bl$e[] k -> k
    u.aly.bl$e[] values() -> values
    u.aly.bl$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bm -> a.a.fh:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    u.aly.bm a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.bm c(int) -> b
    boolean i() -> b
    void b(boolean) -> b
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void j() -> c
    u.aly.dl k() -> d
    u.aly.db l() -> e
    u.aly.db m() -> f
u.aly.bm$1 -> a.a.fi:
u.aly.bm$a -> a.a.fj:
    void a(u.aly.dg,u.aly.bm) -> a
    void b(u.aly.dg,u.aly.bm) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bm$b -> a.a.fk:
    u.aly.bm$a a() -> a
    u.aly.do b() -> b
u.aly.bm$c -> a.a.fl:
    void a(u.aly.dg,u.aly.bm) -> a
    void b(u.aly.dg,u.aly.bm) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bm$d -> a.a.fm:
    u.aly.bm$c a() -> a
    u.aly.do b() -> b
u.aly.bm$e -> a.a.fn:
    u.aly.bm$e a -> a
    u.aly.bm$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bm$e[] f -> f
    u.aly.bm$e[] values() -> values
    u.aly.bm$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bn -> a.a.fo:
    u.aly.dl m -> m
    u.aly.db n -> n
    u.aly.db o -> o
    u.aly.db p -> p
    u.aly.db q -> q
    u.aly.db r -> r
    u.aly.db s -> s
    u.aly.db t -> t
    u.aly.db u -> u
    u.aly.db v -> v
    u.aly.db w -> w
    u.aly.db x -> x
    java.util.Map y -> y
    u.aly.ap a -> a
    u.aly.ao b -> b
    u.aly.ar c -> c
    u.aly.bf d -> d
    u.aly.am e -> e
    java.util.List f -> f
    java.util.List g -> g
    u.aly.ba h -> h
    u.aly.az i -> i
    u.aly.an j -> j
    u.aly.aq k -> k
    u.aly.bn$e[] z -> z
    java.util.Map l -> l
    u.aly.bn a(u.aly.ap) -> a
    void a(boolean) -> a
    u.aly.bn a(u.aly.ao) -> a
    void b(boolean) -> b
    u.aly.bn a(u.aly.ar) -> a
    void c(boolean) -> c
    u.aly.bn a(u.aly.bf) -> a
    void d(boolean) -> d
    u.aly.bn a(u.aly.am) -> a
    boolean r() -> a
    void e(boolean) -> e
    int s() -> b
    void a(u.aly.bc) -> a
    java.util.List u() -> c
    u.aly.bn a(java.util.List) -> a
    boolean w() -> d
    void f(boolean) -> f
    void a(u.aly.bl) -> a
    java.util.List z() -> e
    u.aly.bn b(java.util.List) -> b
    boolean B() -> f
    void g(boolean) -> g
    u.aly.bn a(u.aly.ba) -> a
    boolean E() -> g
    void h(boolean) -> h
    u.aly.bn a(u.aly.az) -> a
    boolean H() -> h
    void i(boolean) -> i
    u.aly.bn a(u.aly.an) -> a
    boolean K() -> i
    void j(boolean) -> j
    u.aly.bn a(u.aly.aq) -> a
    boolean N() -> j
    void k(boolean) -> k
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void O() -> k
    u.aly.dl P() -> l
    u.aly.db Q() -> m
    u.aly.db R() -> n
    u.aly.db S() -> o
    u.aly.db T() -> p
    u.aly.db U() -> q
    u.aly.db V() -> r
    u.aly.db W() -> s
    u.aly.db X() -> t
    u.aly.db Y() -> u
    u.aly.db Z() -> v
    u.aly.db aa() -> w
u.aly.bn$1 -> a.a.fp:
u.aly.bn$a -> a.a.fq:
    void a(u.aly.dg,u.aly.bn) -> a
    void b(u.aly.dg,u.aly.bn) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bn$b -> a.a.fr:
    u.aly.bn$a a() -> a
    u.aly.do b() -> b
u.aly.bn$c -> a.a.fs:
    void a(u.aly.dg,u.aly.bn) -> a
    void b(u.aly.dg,u.aly.bn) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bn$d -> a.a.ft:
    u.aly.bn$c a() -> a
    u.aly.do b() -> b
u.aly.bn$e -> a.a.fu:
    u.aly.bn$e a -> a
    u.aly.bn$e b -> b
    u.aly.bn$e c -> c
    u.aly.bn$e d -> d
    u.aly.bn$e e -> e
    u.aly.bn$e f -> f
    u.aly.bn$e g -> g
    u.aly.bn$e h -> h
    u.aly.bn$e i -> i
    u.aly.bn$e j -> j
    u.aly.bn$e k -> k
    java.util.Map l -> l
    short m -> m
    java.lang.String n -> n
    u.aly.bn$e[] o -> o
    u.aly.bn$e[] values() -> values
    u.aly.bn$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bp -> a.a.fv:
    u.aly.dl l -> l
    u.aly.db m -> m
    u.aly.db n -> n
    u.aly.db o -> o
    u.aly.db p -> p
    u.aly.db q -> q
    u.aly.db r -> r
    u.aly.db s -> s
    u.aly.db t -> t
    u.aly.db u -> u
    u.aly.db v -> v
    java.util.Map w -> w
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    java.nio.ByteBuffer g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    byte B -> x
    u.aly.bp$e[] C -> y
    java.util.Map k -> k
    u.aly.bp a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.bp b(java.lang.String) -> b
    void b(boolean) -> b
    u.aly.bp c(java.lang.String) -> c
    void c(boolean) -> c
    u.aly.bp a(int) -> a
    boolean o() -> a
    void d(boolean) -> d
    u.aly.bp c(int) -> b
    boolean r() -> b
    void e(boolean) -> e
    u.aly.bp d(int) -> c
    boolean u() -> c
    void f(boolean) -> f
    u.aly.bp a(byte[]) -> a
    u.aly.bp a(java.nio.ByteBuffer) -> a
    void g(boolean) -> g
    u.aly.bp d(java.lang.String) -> d
    void h(boolean) -> h
    u.aly.bp e(java.lang.String) -> e
    void i(boolean) -> i
    u.aly.bp e(int) -> d
    boolean H() -> d
    void j(boolean) -> j
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void I() -> e
    u.aly.dl J() -> f
    u.aly.db K() -> g
    u.aly.db L() -> h
    u.aly.db M() -> i
    u.aly.db N() -> j
    u.aly.db O() -> k
    u.aly.db P() -> l
    u.aly.db Q() -> m
    u.aly.db R() -> n
    u.aly.db S() -> o
    u.aly.db T() -> p
u.aly.bp$1 -> a.a.fw:
u.aly.bp$a -> a.a.fx:
    void a(u.aly.dg,u.aly.bp) -> a
    void b(u.aly.dg,u.aly.bp) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bp$b -> a.a.fy:
    u.aly.bp$a a() -> a
    u.aly.do b() -> b
u.aly.bp$c -> a.a.fz:
    void a(u.aly.dg,u.aly.bp) -> a
    void b(u.aly.dg,u.aly.bp) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bp$d -> a.a.ga:
    u.aly.bp$c a() -> a
    u.aly.do b() -> b
u.aly.bp$e -> a.a.gb:
    u.aly.bp$e a -> a
    u.aly.bp$e b -> b
    u.aly.bp$e c -> c
    u.aly.bp$e d -> d
    u.aly.bp$e e -> e
    u.aly.bp$e f -> f
    u.aly.bp$e g -> g
    u.aly.bp$e h -> h
    u.aly.bp$e i -> i
    u.aly.bp$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.bp$e[] n -> n
    u.aly.bp$e[] values() -> values
    u.aly.bp$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bq -> a.a.gc:
    java.lang.String a -> a
    java.lang.String c(android.content.Context) -> a
    java.lang.String d(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String f(android.content.Context) -> c
    java.lang.String g(android.content.Context) -> d
    java.lang.String[] j(android.content.Context) -> e
    boolean k(android.content.Context) -> f
    boolean l(android.content.Context) -> g
    int m(android.content.Context) -> h
    java.lang.String[] n(android.content.Context) -> i
    java.util.Locale x(android.content.Context) -> r
    java.lang.String o(android.content.Context) -> j
    java.lang.String p(android.content.Context) -> k
    int[] r(android.content.Context) -> l
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String s(android.content.Context) -> m
    java.lang.String t(android.content.Context) -> n
    java.lang.String u(android.content.Context) -> o
    java.lang.String v(android.content.Context) -> p
    boolean w(android.content.Context) -> q
u.aly.br -> a.a.gd:
    boolean a -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> d
u.aly.bw -> a.a.ge:
    java.lang.String a -> a
    java.util.Map b -> b
    u.aly.by a(u.aly.bx,java.lang.Class) -> a
    org.json.JSONObject a(java.lang.String,org.json.JSONObject) -> a
    boolean a() -> a
    java.lang.String a(java.io.InputStream) -> a
    org.json.JSONObject a(java.lang.String) -> a
    org.apache.http.params.HttpParams b() -> b
    void b(java.lang.String) -> b
u.aly.bx -> a.a.gf:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
u.aly.by -> a.a.gg:
u.aly.c -> a.a.gh:
    byte[] a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    byte[] f -> f
    byte[] g -> g
    byte[] h -> h
    int i -> i
    int j -> j
    int k -> k
    byte[] l -> l
    byte[] m -> m
    boolean n -> n
    java.lang.String a(android.content.Context) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void a(int) -> a
    void a(boolean) -> a
    u.aly.c a(android.content.Context,java.lang.String,byte[]) -> a
    u.aly.c b(android.content.Context,java.lang.String,byte[]) -> b
    void b() -> b
    byte[] a(byte[],int) -> a
    byte[] d() -> d
    byte[] e() -> e
    byte[] c() -> c
    java.lang.String toString() -> toString
u.aly.cc -> a.a.gi:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[]) -> a
u.aly.cd -> a.a.gj:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    boolean d(java.lang.String) -> c
    java.lang.String a(java.io.InputStream) -> a
    byte[] b(java.io.InputStream) -> b
    void a(java.io.File,byte[]) -> a
    void c(java.io.InputStream) -> c
    void a(java.io.OutputStream) -> a
u.aly.ce -> a.a.gk:
    boolean a(byte,int) -> a
    boolean a(int,int) -> a
    int b(int,int) -> b
    byte a(byte,int,boolean) -> a
    int a(int,int,boolean) -> a
u.aly.cf -> a.a.gl:
    short[] a -> a
    int b -> b
    short a() -> a
    void a(short) -> a
    void d() -> c
    void c() -> b
    java.lang.String toString() -> toString
u.aly.ch -> a.a.gm:
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
u.aly.ci -> a.a.gn:
    java.util.Comparator a -> a
    int a(byte,byte) -> a
    int a(int,int) -> a
    int a(byte[],byte[]) -> a
    int a(java.lang.Comparable,java.lang.Comparable) -> a
    int a(java.util.List,java.util.List) -> a
    int a(java.util.Set,java.util.Set) -> a
    int a(java.util.Map,java.util.Map) -> a
    void a(java.nio.ByteBuffer,java.lang.StringBuilder) -> a
    java.lang.String a(byte) -> a
u.aly.ci$1 -> a.a.go:
u.aly.ci$a -> a.a.gp:
    int compare(java.lang.Object,java.lang.Object) -> compare
u.aly.ck -> a.a.gq:
    u.aly.dg a -> a
    u.aly.dt b -> b
    void a(u.aly.ch,byte[]) -> a
u.aly.cn -> a.a.gr:
u.aly.co -> a.a.gs:
    short a() -> a
u.aly.cq -> a.a.gt:
    java.io.ByteArrayOutputStream a -> a
    u.aly.ds b -> b
    u.aly.dg c -> c
    byte[] a(u.aly.ch) -> a
u.aly.cr -> a.a.gu:
    java.lang.Object b -> b
    u.aly.co c -> c
    java.util.Map a -> a
    u.aly.co i() -> b
    java.lang.Object j() -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.Object a(u.aly.dg,u.aly.db) -> a
    void c(u.aly.dg) -> c
    java.lang.Object a(u.aly.dg,short) -> a
    void d(u.aly.dg) -> d
    u.aly.dl c() -> a
    u.aly.db a(u.aly.co) -> a
    u.aly.co b(short) -> b
    java.lang.String toString() -> toString
u.aly.cr$1 -> a.a.gv:
u.aly.cr$a -> a.a.gw:
    void a(u.aly.dg,u.aly.cr) -> a
    void b(u.aly.dg,u.aly.cr) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.cr$b -> a.a.gx:
    u.aly.cr$a a() -> a
    u.aly.do b() -> b
u.aly.cr$c -> a.a.gy:
    void a(u.aly.dg,u.aly.cr) -> a
    void b(u.aly.dg,u.aly.cr) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.cr$d -> a.a.gz:
    u.aly.cr$c a() -> a
    u.aly.do b() -> b
u.aly.cs -> a.a.ha:
    java.lang.Class a -> a
u.aly.ct -> a.a.hb:
    java.lang.String a -> a
    byte b -> b
    u.aly.cu c -> c
    java.util.Map d -> d
    void a(java.lang.Class,java.util.Map) -> a
u.aly.cu -> a.a.hc:
    byte b -> b
    boolean a -> a
    java.lang.String c -> c
    boolean d -> d
u.aly.cv -> a.a.hd:
    u.aly.cu a -> a
u.aly.cw -> a.a.he:
    u.aly.cu a -> a
    u.aly.cu c -> c
u.aly.cy -> a.a.hf:
    java.lang.Class a -> a
u.aly.cz -> a.a.hg:
    u.aly.dl h -> f
    boolean c -> a
    boolean d -> b
    int e -> c
    boolean f -> d
    byte[] i -> g
    byte[] j -> h
    byte[] k -> i
    byte[] l -> j
    byte[] m -> k
    byte[] n -> l
    byte[] o -> m
    byte[] p -> n
    void a(u.aly.dl) -> a
    void b() -> a
    void a(u.aly.db) -> a
    void c() -> b
    void d() -> c
    void a(u.aly.dd) -> a
    void e() -> d
    void a(u.aly.dc) -> a
    void f() -> e
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dl j() -> f
    void k() -> g
    u.aly.db l() -> h
    void m() -> i
    u.aly.dd n() -> j
    void o() -> k
    u.aly.dc p() -> l
    void q() -> m
    u.aly.dk r() -> n
    void s() -> o
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.lang.String b(int) -> b
    java.nio.ByteBuffer A() -> w
    int a(byte[],int,int) -> a
    void c(int) -> c
    void d(int) -> d
u.aly.cz$a -> a.a.hh:
    boolean a -> a
    boolean b -> b
    int c -> c
    u.aly.dg a(u.aly.du) -> a
u.aly.d -> a.a.hi:
    java.lang.String b -> b
    java.io.File c -> c
    u.aly.az d -> d
    long e -> e
    long f -> f
    java.util.Set g -> g
    u.aly.d$a h -> h
    u.aly.d a -> a
    u.aly.d a(android.content.Context) -> a
    boolean a(u.aly.a) -> a
    void a() -> a
    u.aly.az b() -> b
    void g() -> f
    void d() -> c
    void e() -> d
    void f() -> e
    u.aly.az h() -> g
    void a(u.aly.az) -> a
u.aly.d$a -> a.a.hj:
    android.content.Context a -> a
    java.util.Set b -> b
    boolean a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    void b() -> b
u.aly.da -> a.a.hk:
    u.aly.dl d -> d
    u.aly.db e -> f
    byte[] f -> g
    u.aly.cf m -> h
    short n -> i
    u.aly.db o -> j
    java.lang.Boolean p -> k
    long q -> l
    byte[] a -> a
    byte[] b -> b
    byte[] r -> m
    byte[] c -> c
    void B() -> x
    void a(u.aly.dl) -> a
    void b() -> a
    void a(u.aly.db) -> a
    void a(u.aly.db,byte) -> a
    void d() -> c
    void a(u.aly.dd) -> a
    void a(u.aly.dc) -> a
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    void a(byte[],int,int) -> a
    void e() -> d
    void f() -> e
    void c() -> b
    void a(byte,int) -> a
    void b(int) -> b
    void b(long) -> b
    long c(long) -> c
    int c(int) -> c
    void a(long,byte[],int) -> a
    void b(byte) -> b
    void d(int) -> d
    u.aly.dl j() -> f
    void k() -> g
    u.aly.db l() -> h
    u.aly.dd n() -> j
    u.aly.dc p() -> l
    u.aly.dk r() -> n
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.nio.ByteBuffer A() -> w
    byte[] e(int) -> e
    void f(int) -> f
    void m() -> i
    void o() -> k
    void q() -> m
    void s() -> o
    int E() -> z
    long F() -> A
    int g(int) -> g
    long d(long) -> d
    long a(byte[]) -> a
    boolean c(byte) -> c
    byte d(byte) -> d
    byte e(byte) -> e
u.aly.da$a -> a.a.hl:
    long a -> a
    u.aly.dg a(u.aly.du) -> a
u.aly.db -> a.a.hm:
    java.lang.String a -> a
    byte b -> b
    short c -> c
    java.lang.String toString() -> toString
u.aly.dc -> a.a.hn:
    byte a -> a
    int b -> b
u.aly.dd -> a.a.ho:
    byte a -> a
    byte b -> b
    int c -> c
u.aly.dg -> a.a.hp:
    u.aly.du g -> e
    void a(u.aly.dl) -> a
    void b() -> a
    void a(u.aly.db) -> a
    void c() -> b
    void d() -> c
    void a(u.aly.dd) -> a
    void e() -> d
    void a(u.aly.dc) -> a
    void f() -> e
    void a(boolean) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dl j() -> f
    void k() -> g
    u.aly.db l() -> h
    void m() -> i
    u.aly.dd n() -> j
    void o() -> k
    u.aly.dc p() -> l
    void q() -> m
    u.aly.dk r() -> n
    void s() -> o
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.nio.ByteBuffer A() -> w
    void B() -> x
    java.lang.Class D() -> y
u.aly.dh -> a.a.hq:
    int g -> a
u.aly.di -> a.a.hr:
    u.aly.dg a(u.aly.du) -> a
u.aly.dj -> a.a.hs:
    int a -> a
    void a(u.aly.dg,byte) -> a
    void a(u.aly.dg,byte,int) -> a
u.aly.dk -> a.a.ht:
    byte a -> a
    int b -> b
u.aly.dl -> a.a.hu:
    java.lang.String a -> a
u.aly.dm -> a.a.hv:
    java.lang.Class D() -> y
    void a(java.util.BitSet,int) -> a
    java.util.BitSet b(int) -> b
    java.util.BitSet a(byte[]) -> a
    byte[] b(java.util.BitSet,int) -> b
u.aly.do -> a.a.hw:
    void b(u.aly.dg,u.aly.ch) -> b
    void a(u.aly.dg,u.aly.ch) -> a
u.aly.dp -> a.a.hx:
    u.aly.do b() -> b
u.aly.dq -> a.a.hy:
u.aly.dr -> a.a.hz:
u.aly.ds -> a.a.ia:
    java.io.InputStream a -> a
    java.io.OutputStream b -> b
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
u.aly.dt -> a.a.ib:
    byte[] a -> a
    int b -> b
    int c -> c
    void a(byte[]) -> a
    void c(byte[],int,int) -> c
    void e() -> a
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.du -> a.a.ic:
    int a(byte[],int,int) -> a
    int d(byte[],int,int) -> d
    void b(byte[]) -> b
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.dv -> a.a.id:
    int f -> a
u.aly.e -> a.a.ie:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.f -> a.a.if:
    byte[] b -> a
    u.aly.w c -> b
    u.aly.ba d -> c
    u.aly.f e -> d
    android.content.Context f -> e
    u.aly.f a(android.content.Context) -> a
    void a(u.aly.w) -> a
    java.lang.String a(u.aly.ba) -> a
    boolean c(u.aly.ba) -> c
    byte[] a(u.aly.bb) -> a
    void b(u.aly.ba) -> b
    u.aly.ba a(u.aly.ba,u.aly.ba) -> a
    void e() -> d
    int a(java.lang.String) -> a
    u.aly.ba a() -> a
    void b() -> b
    void c() -> c
u.aly.g -> a.a.ig:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.h -> a.a.ih:
    java.lang.String f() -> f
u.aly.i -> a.a.ii:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.j -> a.a.ij:
    java.util.regex.Pattern c -> a
    android.content.Context d -> b
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String b(java.lang.String) -> b
    java.io.File h() -> h
u.aly.k -> a.a.ik:
    u.aly.s a -> a
    com.umeng.analytics.h b -> b
    u.aly.aa c -> c
    u.aly.ak d -> d
    u.aly.k$a e -> e
    int f -> f
    int g -> g
    android.content.Context h -> h
    void a() -> a
    void a(u.aly.q) -> a
    void b(u.aly.q) -> b
    void b() -> b
    void a(boolean) -> a
    void d(int) -> d
    void a(u.aly.bn) -> a
    u.aly.bn a(int[]) -> a
    u.aly.bn a(byte[]) -> a
    byte[] b(u.aly.bn) -> b
    boolean b(boolean) -> b
    boolean d() -> c
    void e() -> d
    boolean f() -> e
    void e(int) -> e
    void a(int,long) -> a
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    com.umeng.analytics.h a(u.aly.k) -> a
    u.aly.aa b(u.aly.k) -> b
    u.aly.ak c(u.aly.k) -> c
    android.content.Context d(u.aly.k) -> d
    void a(u.aly.k,int) -> a
u.aly.k$1 -> a.a.il:
    u.aly.k a -> a
    void a() -> a
u.aly.k$a -> a.a.im:
    long b -> b
    int c -> c
    int d -> d
    com.umeng.analytics.ReportPolicy$g e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    boolean j -> j
    u.aly.k a -> a
    void a() -> a
    boolean b() -> b
    com.umeng.analytics.ReportPolicy$g c() -> c
    com.umeng.analytics.ReportPolicy$g b(int,int) -> b
    int c(int) -> c
    void d() -> d
    void a(int) -> a
    void b(int) -> b
    void a(int,int) -> a
u.aly.l -> a.a.in:
    u.aly.p a -> a
    android.content.Context b -> b
    u.aly.l c -> c
    u.aly.l a(android.content.Context) -> a
    void a(com.umeng.analytics.onlineconfig.a) -> a
    void a(u.aly.q) -> a
    void b(u.aly.q) -> b
    void b() -> b
    u.aly.p a(u.aly.l) -> a
u.aly.l$1 -> a.a.io:
    u.aly.q a -> a
    u.aly.l b -> b
    void a() -> a
u.aly.l$3 -> a.a.ip:
    u.aly.l a -> a
    void a() -> a
u.aly.m -> a.a.iq:
    java.lang.String a -> a
    boolean b -> b
    android.content.SharedPreferences c -> c
    java.util.Map d -> d
    void a(boolean) -> a
u.aly.n -> a.a.ir:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    u.aly.v b -> b
    void a(u.aly.v) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(java.lang.Throwable) -> a
u.aly.o -> a.a.is:
    int a -> a
    int b -> b
    u.aly.m c -> c
    android.content.Context d -> d
    u.aly.l e -> e
u.aly.p -> a.a.it:
    void b(u.aly.q) -> b
    void a(u.aly.q) -> a
    void b() -> b
u.aly.q -> a.a.iu:
    void a(u.aly.bn,java.lang.String) -> a
u.aly.r -> a.a.iv:
    void a() -> k
    void b() -> l
    void c() -> m
    void d() -> n
u.aly.s -> a.a.iw:
    java.util.List a -> a
    u.aly.am b -> b
    u.aly.ao c -> c
    u.aly.ar d -> d
    u.aly.bf e -> e
    android.content.Context f -> f
    int b() -> a
    void a(u.aly.q) -> a
    void a(u.aly.bn) -> a
    void a(u.aly.am) -> a
    u.aly.ao c() -> b
    u.aly.ar d() -> c
    u.aly.bf e() -> d
    u.aly.ba f() -> e
    u.aly.az g() -> f
    u.aly.ap h() -> g
    u.aly.an i() -> h
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
u.aly.t -> a.a.ix:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    android.content.Context d -> d
    u.aly.r e -> e
    void a(u.aly.r) -> a
    byte[] a(byte[]) -> a
    boolean a() -> a
    byte[] a(byte[],java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
u.aly.v -> a.a.iy:
    void a(java.lang.Throwable) -> a
u.aly.w -> a.a.iz:
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
u.aly.x -> a.a.ja:
    android.content.SharedPreferences a(android.content.Context,java.lang.String) -> a
    android.content.SharedPreferences a(android.content.Context) -> a
u.aly.y -> a.a.jb:
    u.aly.d d -> a
    u.aly.f e -> b
    int f -> c
    android.content.Context g -> d
    u.aly.aa h -> e
    u.aly.t i -> f
    u.aly.bn j -> g
    boolean k -> h
    boolean l -> i
    void a(u.aly.bn) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void a(u.aly.w) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    int a(byte[]) -> a
    byte[] b(u.aly.bn) -> b
    u.aly.t a(u.aly.y) -> a
    int a(u.aly.y,byte[]) -> a
    u.aly.aa b(u.aly.y) -> b
    boolean c(u.aly.y) -> c
u.aly.y$1 -> a.a.jc:
    u.aly.y a -> a
    void a(java.io.File) -> a
    boolean b(java.io.File) -> b
    void c(java.io.File) -> c
u.aly.z -> a.a.jd:
    java.lang.String d -> a
    java.lang.String e -> b
    java.lang.String g -> c
    u.aly.aj a(android.content.Context) -> a
    void a(android.content.SharedPreferences) -> a
    java.lang.String b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    boolean b(android.content.SharedPreferences) -> b
    java.lang.String a(android.content.Context,android.content.SharedPreferences) -> a
    java.lang.String g(android.content.Context) -> e
u.upd.a -> a.b.a:
    java.lang.String a -> a
    java.lang.String c(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String f(android.content.Context) -> b
    java.lang.String[] j(android.content.Context) -> c
    boolean k(android.content.Context) -> d
    boolean l(android.content.Context) -> e
    boolean b() -> a
    java.lang.String o(android.content.Context) -> f
    java.lang.String p(android.content.Context) -> g
    java.lang.String t(android.content.Context) -> h
    java.lang.String u(android.content.Context) -> i
    java.lang.String v(android.content.Context) -> j
u.upd.b -> a.b.b:
    boolean a -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> d
u.upd.c -> a.b.c:
    java.lang.String a -> a
    u.upd.c b -> b
    android.content.res.Resources c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    u.upd.c a(android.content.Context) -> a
    int b(java.lang.String) -> a
    int c(java.lang.String) -> b
    int d(java.lang.String) -> c
    int f(java.lang.String) -> d
    int a(java.lang.String,java.lang.String) -> a
u.upd.d -> a.b.d:
    java.lang.String TAG -> a
    u.upd.f$a send(u.upd.e) -> a
    void sendAsync(u.upd.e,u.upd.d$a) -> a
u.upd.d$a -> a.b.e:
    void a() -> a
    void a(u.upd.f$a) -> a
u.upd.d$b -> a.b.f:
    u.upd.e b -> b
    u.upd.d$a c -> c
    u.upd.d a -> a
    void onPreExecute() -> onPreExecute
    void a(u.upd.f$a) -> a
    u.upd.f$a a(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
u.upd.e -> a.b.g:
u.upd.f -> a.b.h:
    u.upd.f$a a -> a
u.upd.f$a -> a.b.i:
    u.upd.f$a a -> a
    u.upd.f$a b -> b
    u.upd.f$a[] c -> c
    u.upd.f$a[] values() -> values
    u.upd.f$a valueOf(java.lang.String) -> valueOf
u.upd.g -> a.b.j:
    java.lang.String TAG -> a
    java.util.Map headers -> b
    u.upd.i execute(u.upd.h,java.lang.Class) -> a
    org.json.JSONObject HttpRequestPost(java.lang.String,org.json.JSONObject) -> a
    boolean shouldCompressData() -> a
    java.lang.String convertStreamToString(java.io.InputStream) -> a
    org.json.JSONObject HttpRequestGet(java.lang.String) -> a
    org.apache.http.params.HttpParams getHttpParams() -> b
    u.upd.g setHeader(java.util.Map) -> a
    void verifyMethod(java.lang.String) -> b
u.upd.h -> a.b.k:
    java.lang.String POST -> b
    java.lang.String GET -> c
    java.lang.String baseUrl -> d
    org.json.JSONObject toJson() -> c
    java.lang.String toGetUrl() -> d
    java.lang.String getHttpMethod() -> b
    void setBaseUrl(java.lang.String) -> a
u.upd.i -> a.b.l:
u.upd.j -> a.b.m:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int g(android.content.Context) -> f
u.upd.k -> a.b.n:
    int a(android.content.Context) -> a
u.upd.l -> a.b.o:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int g(android.content.Context) -> g
    int h(android.content.Context) -> h
    int i(android.content.Context) -> i
    int j(android.content.Context) -> j
    int k(android.content.Context) -> k
    int l(android.content.Context) -> l
    int m(android.content.Context) -> m
    int n(android.content.Context) -> n
u.upd.m -> a.b.p:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[]) -> a
u.upd.n -> a.b.q:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(java.io.File) -> a
    java.lang.String c(java.lang.String) -> c
    boolean d(java.lang.String) -> d
    java.lang.String a() -> a
    java.lang.String a(java.util.Date) -> a
